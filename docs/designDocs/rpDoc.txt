
Driver/DriverMain
    allowDtSTSDominate [BOOLEAN] [FALSE]
        allow a situation in which dt_STS becomes larger than dt_Hydro
        (dt_advection) (assuming that diffusion dt is smaller than advection dt)
        upto advection one, but not faster than the advection advancement. This
        will be useful in solving PDE systems that are hyperbolic + parabolic.
        FALSE will use the STS algorithm to even accelerate advection time
        advancement, which in turn, will use larger advection dt than advection
        dt from CFL limits. This will be useful in solving only hyperbolic PDE
        systems in general. When hyperbolic + parabolic PDE system is to be
        solved, then we suggest that users use less agressive super time
        stepping method by using useSTSforDiffusion = TRUE.
    dr_abortPause [INTEGER] [2]
        Valid Values: 0 to INFTY
        When Driver_abortFlash is called to abnormally end execution, and
        dr_abortPause is grater than zero, the FLASH Driver_abortFlash code will
        sleep for dr_abortPause seconds after writing explanatory messages (to
        standard output and, possibly, to log files) but before calling
        MPI_ABORT. See also eachProcWritesOwnAbortLog for controlling the
        generation of per-processor log files.
    dr_dtMinBelowAction [INTEGER] [1]
        Valid Values: 0, 1
        Action to take when computed new timestep is below dr_dtMinContinue. Use
        0 for none (abort immediately), 1 for "write checkpoint then abort"
    dr_dtMinContinue [REAL] [0.0]
        Valid Values: 0.0 to INFTY
        Minimum computed timestep to continue the simulation
    dr_printTStepLoc [BOOLEAN] [TRUE]

    dr_shortenLastStepBeforeTMax [BOOLEAN] [FALSE]
        If TRUE, make the dt for the last time step shorter if necassary so as
        to avoid overshooting tmax.
    dr_tstepSlowStartFactor [REAL] [0.1]
        Valid Values: 0.0 to INFTY
        The initial dt is set to be at most the timestep computed by CFL
        conditions applied to certain operators multiplied with this factor.
    drift_break_inst [INTEGER] [0]
        Valid Values: Unconstrained

    drift_trunc_mantissa [INTEGER] [2]
        Valid Values: Unconstrained
        number of mantissa bits to exclude from hash (3 bits ~ 1 sigdig)
    drift_tuples [BOOLEAN] [FALSE]
        should block data be written in python tuples format
    drift_verbose_inst [INTEGER] [0]
        Valid Values: Unconstrained

    dtinit [REAL] [1.E-10]
        Valid Values: Unconstrained
        Initial timestep
    dtmax [REAL] [1.E5]
        Valid Values: Unconstrained
        Maximum timestep
    dtmin [REAL] [1.E-10]
        Valid Values: Unconstrained
        Minimum timestep
    eachProcWritesOwnAbortLog [BOOLEAN] [FALSE]
        Should each process writes messages to its own log file when
        Driver_abortFlash gets called to abnormally end execution? If true, each
        process in which Driver_abortFlash is called will attempt to write an
        explanatory message to its own log file, whether that file already
        existed or needs to be newly created.  If false, the Driver_abortFlash
        message will appear only in the regular log file (if the Logfile code
        unit is used), and normally only when Driver_abortFlash is called by the
        process with PE 0.
    iProcs [INTEGER] [1]
        Valid Values: Unconstrained
        number of procs in the i dir
    jProcs [INTEGER] [1]
        Valid Values: Unconstrained
        number of procs in the j dir
    kProcs [INTEGER] [1]
        Valid Values: Unconstrained
        number of procs in the k dir
    meshCopyCount [INTEGER] [1]
        Valid Values: Unconstrained
        The number of copies of full computational mesh that
    nbegin [INTEGER] [1]
        Valid Values: 1 to INFTY
        First timestep
    nend [INTEGER] [100]
        Valid Values: Unconstrained
        Maximum number of timesteps to take
    nstepTotalSTS [INTEGER] [5]
        Valid Values: Unconstrained

    nuSTS [REAL] [0.1]
        Valid Values: Unconstrained
        nu stability parameter for super time stepping algorithm
    restart [BOOLEAN] [FALSE]
        Is this a restart run?
    sweepOrder [INTEGER] [123]
        Valid Values: 123, 132, 213, 231, 312, 321
        Determine the order of the directional sweeps
    threadBlockListBuild [BOOLEAN] CONSTANT [TRUE]

    threadDriverBlockList [BOOLEAN] [TRUE]

    threadDriverWithinBlock [BOOLEAN] [TRUE]

    threadRayTraceBuild [BOOLEAN] CONSTANT [TRUE]

    threadWithinBlockBuild [BOOLEAN] CONSTANT [TRUE]

    tinitial [REAL] [0.0]
        Valid Values: Unconstrained
        Initial simulation time
    tmax [REAL] [0.2]
        Valid Values: Unconstrained
        Maximum simulation time
    tstep_change_factor [REAL] [2.0]
        Valid Values: 0.0+ to INFTY
        The initial time step dt is multiplied with this factor at every
        timestep, until it is limited by CFL condition, allowing users to
        specify a very conservative initial dt and letting it grow by specifying
        a tstep_change_factor > 1.0.
    useSTS [BOOLEAN] [FALSE]
        Do we want to use super time stepping (STS) algorithm?
    useSTSforDiffusion [BOOLEAN] [FALSE]
        TRUE will use the STS algorithm to accelerate diffusion time advancement
    wall_clock_time_limit [REAL] [604800.]
        Valid Values: -1.0, 0.0 to INFTY
        Total wall clock time limit (seconds). Use -1.0 for no limit.
    zFinal [REAL] [0.0]
        Valid Values: Unconstrained
        The final redshift in a simulation.  The simulation will stop
    zInitial [REAL] [-1.0]
        Valid Values: Unconstrained
        The initial redshift in a simulation.  < 0 if not being used.

Grid/GridMain
    bndPriorityOne [INTEGER] [1]
        Valid Values: 1, 2, 3
        indicates which direction (IAXIS, JAXIS, or KAXIS) gets top priority
        when applying boundary conditions in corner guardcells We define three
        values for edges left, center, right, of which center represents
        interior, while left and right represent the corresponding guardcells.
        We define a corner where more than one dimension has its its guardcells,
        so the application must determine which direction gets to fill them. In
        2-D, there are four corners: (left,left), (left,right), (right,left) and
        (right,right). In 3-D case, the following corners are possible :
        (left,left,left),(left,left,center),
        (left,left,right),(left,center,left),
        (left,center,right),(left,right,left),
        (left,right,center),(left,right,right)
        (center,left,left),(center,left,right),
        (center,right,left),(center,right,right),
        (right,left,left),(right,left,center),
        (right,left,right),(right,center,left),
        (right,center,right),(right,right,left),
        (right,right,center),(right,right,right)
    bndPriorityThree [INTEGER] [3]
        Valid Values: 1, 2, 3
        the least priority dimension in applying boundary conditions
    bndPriorityTwo [INTEGER] [2]
        Valid Values: 1, 2, 3
        the second priority dimension in applying boundary conditions
    convertToConsvdForMeshCalls [BOOLEAN] [FALSE]
        indicates if appropriate variables are converted from primitive to
        conserved form during propagation before control is passed to Paramesh
        for refinement, derefinement, or guardcell filling.  This is the old way
        of ensuring that solution variables are in the correct form for
        interpolation. It involves unnecessary conversions back and forth and
        should be obsoleted by the newer mechanism enabled by runtime parameter
        "convertToConsvdInMeshInterp".  The name is a replacement for the old
        "conserved_var" which many people have found to be very confusing
        terminology.
    eosMode [STRING] ["dens_ie_recal_gather"]
        Valid Values: "dens_ie", "dens_pres", "dens_temp", "dens_ie_all",
        "dens_ie_scatter", "dens_ie_gather", "dens_ie_sele_gather",
        "dens_temp_equi", "dens_temp_all", "dens_temp_gather",
        "dens_ie_recal_gather", "dens_ie_mat_gather_pradscale"
        determines how to operate on thermodynamic quantities. Possible values
        are "dens_ie", where density and internal energy are supplied and
        pressure and temperature are returned; "dens_pres", where density and
        pressure are given and energy and temperature are computed;  and
        "dens_temp", where density and temperature are given and pressure and
        energy are computed. Other values may also be available as, depending on
        whether a multiTemp Eos is used and on implementation of additional
        physics. For 3T simulations, the best choice is "dens_ie_recal_gather",
        since this mode will ensure that total energy is conserved when
        refinement changes occur.
    eosModeInit [STRING] ["dens_ie"]
        Valid Values: "dens_ie", "dens_pres", "dens_temp", "dens_ie_all",
        "dens_ie_scatter", "dens_ie_gather", "dens_temp_equi", "dens_temp_all",
        "dens_temp_gather", "eos_nop"
        determines how to operate on thermodynamic quantities for the initial
        conditions.  A call to Simulation_initBlock sets initial conditions on
        each block, and an eos call follows which ensures the initial values are
        thermodynamically consistent.  The value of eosModeInit determines the
        mode in which these eos calls operate.  Possible values are "dens_ie",
        where density and internal energy are supplied and pressure and
        temperature are returned; "dens_pres", where density and pressure are
        given and energy and temperature are computed; and "dens_temp", where
        density and temperature are given and pressure and energy are computed. 
        Other values may also be available as, depending on whether a multiTemp
        Eos is used and on implementation of additional physics.
    geometry [STRING] ["cartesian"]
        Valid Values: "cartesian", "polar", "cylindrical", "spherical"
        Grid geometry
    geometryOverride [BOOLEAN] [FALSE]
        whether to bypass some geometry sanity checks - use at your own risk.
    gr_bcEnableApplyMixedGds [BOOLEAN] [TRUE]
        whether to enable the Grid_bcApplyToRegionMixedGds interface for
        implementing boundary conditions with access to the variables of mixed
        GDSs (in particlular, cell-centered UNK varsiables and face variables).
        This only has an effect if the GridBoundaryConditions subunit is
        included and the simulation actually supplies an implementation of
        Grid_bcApplyToRegionMixedGds.
    reduceGcellFills [BOOLEAN] [FALSE]

    smalle [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for energy
    smallx [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for abundances
    unbiased_geometry [BOOLEAN] [FALSE]
        attempt to remove floating point bias from geometry discretization. Not
        implemented in FLASH3.
    xl_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower (left) boundary condition in x dir
    xmax [REAL] [1.]
        Valid Values: Unconstrained
        physical domain upper bound in x dir
    xmin [REAL] [0.]
        Valid Values: Unconstrained
        physical domain lower bound in x dir
    xr_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper (right) boundary condition in x dir
    yl_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower boundary condition in y dir
    ymax [REAL] [1.]
        Valid Values: Unconstrained
        physical domain upper bound in y dir
    ymin [REAL] [0.]
        Valid Values: Unconstrained
        physical domain lower bound in y dir
    yr_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper boundary condition in y dir
    zl_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower boundary condition in z dir
    zmax [REAL] [1.]
        Valid Values: Unconstrained
        physical domain lower bound in x dir
    zmin [REAL] [0.]
        Valid Values: Unconstrained
        physical domain lower bound in z dir
    zr_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper boundary condition in z dir

Grid/GridMain/Chombo
    verbosity [INTEGER] [0]
        Valid Values: 0 to INFTY


Grid/GridMain/Chombo/AMR
    BRMeshRefineBlockFactor [INTEGER] [8]
        Valid Values: 1 to INFTY

    BRMeshRefineBufferSize [INTEGER] [1]
        Valid Values: 0 to INFTY

    BRMeshRefineFillRatio [REAL] [0.75]
        Valid Values: 0.0 to 1.0

    QuadCFInterp [BOOLEAN] [False]
        Whether to use quadratic coarse-fine boundary interpolation.
    convertToConsvdForMeshCalls [BOOLEAN] [TRUE]
        indicates if appropriate variables are converted from primitive to
        conserved form during propagation before control is passed to Chombo for
        refinement, derefinement, or guardcell filling.
    convertToConsvdInMeshInterp [BOOLEAN] [FALSE]
        indicates if appropriate variables are converted to conserved form
        during propagation within the interpolation routines invoked by Chombo. 
        This applies to interpolation (both "prolongation" and "restriction") in
        the course of refinement, derefinement, or guardcell filling.  This is
        not yet implemented, but needs to get implemented soon because manually
        converting in several different FLASH Fortran Grid leads to the
        possibility of overlooking at least one FLASH Fortran Grid subroutine.
    derefine_cutoff_1 [REAL] [0.2]
        Valid Values: Unconstrained
        threshold value to trigger derefinement for refine_var_1
    derefine_cutoff_2 [REAL] [0.2]
        Valid Values: Unconstrained
        threshold value to trigger derefinement for refine_var_2
    derefine_cutoff_3 [REAL] [0.2]
        Valid Values: Unconstrained
        threshold value to trigger derefinement for refine_var_3
    derefine_cutoff_4 [REAL] [0.2]
        Valid Values: Unconstrained
        threshold value to trigger derefinement for refine_var_4
    earlyBlockDistAdjustment [BOOLEAN] [TRUE]
        If true, let Paramesh redistribute blocks across processors early, so
        that the block distribution chosen by Paramesh will be in effect when
        time evolution begins after restart. If earlyBlockDistAdjustment is
        false, the block distribution enacted by the IO unit when it read a
        checkpoint file will normally still be in effect when time evolution
        begins after a restart. This flag is ignored if not restarting from a
        checkpoint.
    enableMaskedGCFill [BOOLEAN] [FALSE]
        When enableMaskedGCFill is FALSE, Grid_fillGuardCells is forced to
        always ignore optional mask arguments when present in calls. This is the
        default behavior. Set enableMaskedGCFill TRUE to enable masked guard
        cell filling.
    flux_correct [BOOLEAN] [true]
        turns on or off flux correction
    gr_lrefineMaxRedDoByLogR [BOOLEAN] [FALSE]
        Softly force effectively a lower lrefine_max depending on distance from
        center. See gr_lrefineMaxRedRadiusFact.
    gr_lrefineMaxRedDoByTime [BOOLEAN] [FALSE]
        Lower the effective lrefine_max as a function of time. See runtime
        parameters gr_lrefineMaxRedTRef, gr_lrefineMaxRedTimeScale, and
        gr_lrefineMaxRedLogBase.
    gr_lrefineMaxRedLogBase [REAL] [10.0]
        Valid Values: 1.0 to INFTY
        Logarithm base for determining when repeated reductions in effective
        lrefine_max should happen. The nth reduction will happen at
        t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale*gr_lrefineMaxRedLogBase**(n-1).
    gr_lrefineMaxRedRadiusFact [REAL] [0.0]
        Valid Values: 0.0 to INFTY
        factor that determines a minimum resolution (and thus maximum refinement
        level) based on distance from a center. See x_refine_center,
        y_refine_center, z_refine_center for the center coordinates.  This is
        approximately (linearly) equivalent to requiring a minimum *angular*
        resolution, within the limits set by the global lrefine_min and
        lrefine_max.  Only used when gr_lrefineMaxRedDoByLogR is TRUE.
    gr_lrefineMaxRedTRef [REAL] [0.0]
        Valid Values: Unconstrained
        reference time for time-based max level reduction. The effective
        reduction of lrefine_max only kicks in for times greater than
        gr_lrefineMaxRedTRef. The first time lrefine_max is effectively lowered
        actually happens at t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale.
    gr_lrefineMaxRedTimeScale [REAL] [1.0]
        Valid Values: TINY to INFTY
        the time scale for effectively lowering lrefine_max: The first reduction
        takes place at t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale.
    iGridSize [INTEGER] [16]
        Valid Values: 1 to INFTY
        Global number of interior cells in the i direction
    interpol_order [INTEGER] [2]
        Valid Values: 0, 1, 2
        the default interpolation order when using "monotonic" interpolation
        routines
    jGridSize [INTEGER] [16]
        Valid Values: 1 to INFTY
        Global number of interior cells in the j direction
    kGridSize [INTEGER] [16]
        Valid Values: 1 to INFTY
        Global number of interior cells in the k direction
    lrefine_del [INTEGER] [0]
        Valid Values: 0 to INFTY
        Try to reduce the maximum refinement level by this number of levels on a
        restart.
    lrefine_max [INTEGER] [1]
        Valid Values: 1 to INFTY
        maximum AMR refinement level
    lrefine_min [INTEGER] [1]
        Valid Values: 1
        minimum AMR refinement level
    maxBlockSize [INTEGER] [16]
        Valid Values: 0 to INFTY

    max_particles_per_blk [INTEGER] [100]
        Valid Values: Unconstrained
        integer  if the number of particles in a block exceeds this, it must
        refine  when particle count is a refinement criterion
    min_particles_per_blk [INTEGER] [1]
        Valid Values: Unconstrained
        integer  if the number of particles in a block is below this, it must
        derefine when particle count is a refinement criterion
    nrefs [INTEGER] [2]
        Valid Values: Unconstrained
        refine/derefine AMR grid every nrefs timesteps
    refRatio [INTEGER] [2]
        Valid Values: 0 to INFTY
        The integer refinement jump between levels
    refine_cutoff_1 [REAL] [0.8]
        Valid Values: Unconstrained
        threshold value to trigger refinement for refine_var_1
    refine_cutoff_2 [REAL] [0.8]
        Valid Values: Unconstrained
        threshold value to trigger refinement for refine_var_2
    refine_cutoff_3 [REAL] [0.8]
        Valid Values: Unconstrained
        threshold value to trigger refinement for refine_var_3
    refine_cutoff_4 [REAL] [0.8]
        Valid Values: Unconstrained
        threshold value to trigger refinement for refine_var_4
    refine_filter_1 [REAL] [0.01]
        Valid Values: Unconstrained
        prevents error calculations to determine refinement from diverging
        numerically for refine_var_1
    refine_filter_2 [REAL] [0.01]
        Valid Values: Unconstrained
        prevents error calculations to determine refinement from diverging
        numerically for refine_var_1
    refine_filter_3 [REAL] [0.01]
        Valid Values: Unconstrained
        prevents error calculations to determine refinement from diverging
        numerically for refine_var_3
    refine_filter_4 [REAL] [0.01]
        Valid Values: Unconstrained
        prevents error calculations to determine refinement from diverging
        numerically for refine_var_4
    refine_on_particle_count [BOOLEAN] [FALSE]
        if true, the count of particles in blocks act as a refinement criterion
    refine_var_1 [STRING] ["none"]
        Valid Values: Unconstrained
        indicates 1st variable on which to refine
    refine_var_2 [STRING] ["none"]
        Valid Values: Unconstrained
        indicates 2nd variable on which to refine
    refine_var_3 [STRING] ["none"]
        Valid Values: Unconstrained
        indicates 3rd variable on which to refine
    refine_var_4 [STRING] ["none"]
        Valid Values: Unconstrained
        indicates 4th variable on which to refine
    refine_var_count [INTEGER] [4]
        Valid Values: Unconstrained
        count of maximum allowed variable to be used
    restrictBeforeGhostExchange [BOOLEAN] [True]
        Whether to restrict all data before
    small [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value ... DEV: for what?
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density
    tagRadius [INTEGER] [2]
        Valid Values: 0 to INFTY

    x_refine_center [REAL] [0.0]
        Valid Values: Unconstrained
        First coordinate of center for distance-based refinement patterns
    y_refine_center [REAL] [0.0]
        Valid Values: Unconstrained
        Second coordinate of center for distance-based refinement patterns
    z_refine_center [REAL] [0.0]
        Valid Values: Unconstrained
        Third coordinate of center for distance-based refinement patterns

Grid/GridMain/Chombo/UG
    compute_grid_size [BOOLEAN] [true]
        compute grid size in the case of non-fixed-block size, non fixed block
        size mode means block dims are not specified at compile time
    flux_correct [BOOLEAN] [false]
        turns flux correction on or off in UG always false since all blocks on
        same level
    iGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the i direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    iguard [INTEGER] [4]
        Valid Values: Unconstrained
        number of guardcells in i direction.  Not yet in use.
    jGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the j direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    jguard [INTEGER] [4]
        Valid Values: Unconstrained
        number of guardcells in j direction, this is only implemented for nfbs
    kGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the k direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    kguard [INTEGER] [4]
        Valid Values: Unconstrained
        number of guardcells in k direction
    nblockx [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along X - ignored by UG Grid
    nblocky [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along Y - ignored by UG Grid
    nblockz [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along Z - ignored by UG Grid
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density

Grid/GridMain/UG
    compute_grid_size [BOOLEAN] [true]
        compute grid size in the case of non-fixed-block size, non fixed block
        size mode means block dims are not specified at compile time
    flux_correct [BOOLEAN] [false]
        turns flux correction on or off in UG always false since all blocks on
        same level
    iGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the i direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    iguard [INTEGER] [6]
        Valid Values: Unconstrained
        number of guardcells in i direction, not yet used. Meant for nofbs.
    jGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the j direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    jguard [INTEGER] [6]
        Valid Values: Unconstrained
        number of guardcells in j direction, not yet used. Meant for nofbs.
    kGridSize [INTEGER] [1]
        Valid Values: Unconstrained
        Global number of interior cells in the k direction ONLY needed when
        running in NON_FIXED_BLOCKSIZE mode (ie. don't need for Paramesh or
        simple Uniform Grid)
    kguard [INTEGER] [6]
        Valid Values: Unconstrained
        number of guardcells in k direction, not yet used. Meant for nofbs.
    nblockx [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along X - ignored by UG Grid
    nblocky [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along Y - ignored by UG Grid
    nblockz [INTEGER] [1]
        Valid Values: Unconstrained
        number of blocks along Z - ignored by UG Grid
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density

Grid/GridMain/paramesh
    convertToConsvdInMeshInterp [BOOLEAN] [TRUE]
        indicates if appropriate variables are converted to conserved form
        during propagation within the interpolation routines invoked by
        Paramesh. This applies to interpolation (both "prolongation" and
        "restriction") in the course of refinement, derefinement, or guardcell
        filling. This is the newer way of ensuring that solution variables are
        interpolated in the correct form. It avoids unnecessary conversions back
        and force and should replace the old mechanism enabled by runtime
        parameter "convertToConsvdForMeshCalls". However, it is only available
        with PARAMESH 3 or later.
    derefine_cutoff_1 [REAL] [0.2]
        Valid Values: Unconstrained
        threshold value to trigger derefinement for refine_var_1
    derefine_cutoff_2 [REAL] [0.2]
        Valid Values: Unconstrained
        threshold value to trigger derefinement for refine_var_2
    derefine_cutoff_3 [REAL] [0.2]
        Valid Values: Unconstrained
        threshold value to trigger derefinement for refine_var_3
    derefine_cutoff_4 [REAL] [0.2]
        Valid Values: Unconstrained
        threshold value to trigger derefinement for refine_var_4
    earlyBlockDistAdjustment [BOOLEAN] [TRUE]
        If true, let Paramesh redistribute blocks across processors early, so
        that the block distribution chosen by Paramesh will be in effect when
        time evolution begins after restart. If earlyBlockDistAdjustment is
        false, the block distribution enacted by the IO unit when it read a
        checkpoint file will normally still be in effect when time evolution
        begins after a restart. This flag is ignored if not restarting from a
        checkpoint.
    flux_correct [BOOLEAN] [true]
        turns on or off flux correction
    gr_lrefineMaxByTime [BOOLEAN] [FALSE]
        This parameter activates the ability to manually specify values for
        lrefine_max as a function of time. You can change the value of
        lrefine_max a total of 20 times. The parameters gr_lrefmaxTime_N (where
        N is a number from 1 to 20) tell FLASH the times at which lrefine_max
        changes will occur. The analogous parameters gr_lrefmaxTimeValue_N
        (where N is a number from 1 to 20) tell FLASH  the value of lrefine_max
        to use at time gr_lrefmaxTime_N. For example, specifying the following
        lines in your flash.par file tells FLASH to use an lrefine_max value of
        10 at t = 1.0e-09 s and a value of 11 at t = 2.0e-09 s: 
        gr_lrefmaxTime_1 = 1.0e-09 gr_lrefmaxTimeValue_1 = 10 gr_lrefmaxTime_2 =
        2.0e-09 gr_lrefmaxTimeValue_2 = 10 . NOTE: the time values must be in
        sequential order!
    gr_lrefineMaxRedDoByLogR [BOOLEAN] [FALSE]
        Softly force effectively a lower lrefine_max depending on distance from
        center. See gr_lrefineMaxRedRadiusFact.
    gr_lrefineMaxRedDoByTime [BOOLEAN] [FALSE]
        Lower the effective lrefine_max as a function of time. See runtime
        parameters gr_lrefineMaxRedTRef, gr_lrefineMaxRedTimeScale, and
        gr_lrefineMaxRedLogBase.
    gr_lrefineMaxRedLogBase [REAL] [10.0]
        Valid Values: 1.0 to INFTY
        Logarithm base for determining when repeated reductions in effective
        lrefine_max should happen. The nth reduction will happen at
        t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale*gr_lrefineMaxRedLogBase**(n-1).
    gr_lrefineMaxRedRadiusFact [REAL] [0.0]
        Valid Values: 0.0 to INFTY
        factor that determines a minimum resolution (and thus maximum refinement
        level) based on distance from a center. See x_refine_center,
        y_refine_center, z_refine_center for the center coordinates.  This is
        approximately (linearly) equivalent to requiring a minimum *angular*
        resolution, within the limits set by the global lrefine_min and
        lrefine_max.  Only used when gr_lrefineMaxRedDoByLogR is TRUE.
    gr_lrefineMaxRedTRef [REAL] [0.0]
        Valid Values: Unconstrained
        reference time for time-based max level reduction. The effective
        reduction of lrefine_max only kicks in for times greater than
        gr_lrefineMaxRedTRef. The first time lrefine_max is effectively lowered
        actually happens at t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale.
    gr_lrefineMaxRedTimeScale [REAL] [1.0]
        Valid Values: TINY to INFTY
        the time scale for effectively lowering lrefine_max: The first reduction
        takes place at t=gr_lrefineMaxRedTRef+gr_lrefineMaxRedTimeScale.
    gr_lrefmaxTimeValue_1 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_10 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_11 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_12 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_13 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_14 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_15 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_16 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_17 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_18 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_19 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_2 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_20 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_3 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_4 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_5 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_6 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_7 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_8 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTimeValue_9 [INTEGER] [-1]
        Valid Values: Unconstrained

    gr_lrefmaxTime_1 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_10 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_11 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_12 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_13 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_14 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_15 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_16 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_17 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_18 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_19 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_2 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_20 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_3 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_4 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_5 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_6 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_7 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_8 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_lrefmaxTime_9 [REAL] [-1.0]
        Valid Values: Unconstrained

    gr_restrictAllMethod [INTEGER] [3]
        Valid Values: 0 to 3
        select a method to use for data restriction all the way up the tree of
        blocks.  This this global data restriction is usually done when
        IO_output is called, before the actual writing of plot or checkpoint
        data, so that non-leaf blocks in plot and checkpoint files will have
        meaningful data. Data restrictions that happen as part of guard cell
        filling or within multigrid solvers are not affected by this setting.
        For PARAMESH 2, this runtime parameter is currently ignored. With
        PARAMESH 4, the following values are recognized:  0: No restriction is
        done. 1: The original method, implemented in gr_restrictTree. 2: New
        method, implemented using mpi_amr_restrict_fulltree. 3: New method,
        implemented using Grid_restrictByLevels.
    interpol_order [INTEGER] [2]
        Valid Values: 0, 1, 2
        the default interpolation order when using "monotonic" interpolation
        routines
    lrefine_del [INTEGER] [0]
        Valid Values: 0 to INFTY
        Try to reduce the maximum refinement level by this number of levels on a
        restart.
    lrefine_max [INTEGER] [1]
        Valid Values: 1 to INFTY
        maximum AMR refinement level
    lrefine_min [INTEGER] [1]
        Valid Values: 1 to INFTY
        minimum AMR refinement level
    lrefine_min_init [INTEGER] [1]
        Valid Values: 1 to INFTY
        minimum AMR refinement level for initialization
    max_particles_per_blk [INTEGER] [100]
        Valid Values: Unconstrained
        integer  if the number of particles in a block exceeds this, it must
        refine  when particle count is a refinement criterion
    min_particles_per_blk [INTEGER] [1]
        Valid Values: Unconstrained
        integer  if the number of particles in a block is below this, it may
        derefine when particle count is a refinement criterion
    nblockx [INTEGER] [1]
        Valid Values: Unconstrained
        num initial blocks in x dir
    nblocky [INTEGER] [1]
        Valid Values: Unconstrained
        num initial blocks in y dir
    nblockz [INTEGER] [1]
        Valid Values: Unconstrained
        num initial blocks in z dir
    nrefs [INTEGER] [2]
        Valid Values: Unconstrained
        refine/derefine AMR grid every nrefs timesteps
    refine_cutoff_1 [REAL] [0.8]
        Valid Values: Unconstrained
        threshold value to trigger refinement for refine_var_1
    refine_cutoff_2 [REAL] [0.8]
        Valid Values: Unconstrained
        threshold value to trigger refinement for refine_var_2
    refine_cutoff_3 [REAL] [0.8]
        Valid Values: Unconstrained
        threshold value to trigger refinement for refine_var_3
    refine_cutoff_4 [REAL] [0.8]
        Valid Values: Unconstrained
        threshold value to trigger refinement for refine_var_4
    refine_filter_1 [REAL] [0.01]
        Valid Values: Unconstrained
        prevents error calculations to determine refinement from diverging
        numerically for refine_var_1
    refine_filter_2 [REAL] [0.01]
        Valid Values: Unconstrained
        prevents error calculations to determine refinement from diverging
        numerically for refine_var_1
    refine_filter_3 [REAL] [0.01]
        Valid Values: Unconstrained
        prevents error calculations to determine refinement from diverging
        numerically for refine_var_3
    refine_filter_4 [REAL] [0.01]
        Valid Values: Unconstrained
        prevents error calculations to determine refinement from diverging
        numerically for refine_var_4
    refine_on_particle_count [BOOLEAN] [FALSE]
        if true, the count of particles in blocks act as a refinement criterion
    refine_var_1 [STRING] ["none"]
        Valid Values: Unconstrained
        indicates 1st variable on which to refine
    refine_var_2 [STRING] ["none"]
        Valid Values: Unconstrained
        indicates 2nd variable on which to refine
    refine_var_3 [STRING] ["none"]
        Valid Values: Unconstrained
        indicates 3rd variable on which to refine
    refine_var_4 [STRING] ["none"]
        Valid Values: Unconstrained
        indicates 4th variable on which to refine
    refine_var_count [INTEGER] [4]
        Valid Values: Unconstrained
        count of maximum allowed variable to be used
    small [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value ... DEV: for what?
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density
    x_refine_center [REAL] [0.0]
        Valid Values: Unconstrained
        First coordinate of center for distance-based refinement patterns
    y_refine_center [REAL] [0.0]
        Valid Values: Unconstrained
        Second coordinate of center for distance-based refinement patterns
    z_refine_center [REAL] [0.0]
        Valid Values: Unconstrained
        Third coordinate of center for distance-based refinement patterns

Grid/GridMain/paramesh/Paramesh2
    msgbuf [INTEGER] [1]
        Valid Values: Unconstrained
        triggers consolication of MPI messages in PM2. 1 indicates to
        "consolidate". PM2 specific, should always stay at 1

Grid/GridMain/paramesh/Paramesh2/quadratic_cartesian
    grid_monotone_hack [BOOLEAN] [TRUE]
        If .true., apply radical monotonicity constraints to interpolants (i.e.,
        completely flatten them if they violate monotonicity)

Grid/GridMain/paramesh/paramesh4
    enableMaskedGCFill [BOOLEAN] [FALSE]
        When enableMaskedGCFill is FALSE, Grid_fillGuardCells is forced to
        always ignore optional mask arguments when present in calls. This is the
        default behavior. Set enableMaskedGCFill TRUE to enable masked guard
        cell filling.
    gr_sanitizeDataMode [INTEGER] [1]
        Valid Values: 0, 1, 2, 3, 4
        What to do when gr_sanitizeDataAfterInterp is called to check for
        acceptable values in the dens, ener, and eint cell-centered variables
        after a Grid operation may have resulted in grid interpolation. 0: Do
        nothing. 1: Check (if variable is not masked out) and report (see
        sanitizeVerbosity). 2: Check (ignoring variable mask) and report (see
        sanitizeVerbosity). 3: Check (if variable is not masked out) and fix
        (apply floor value). 4: Check (if variable is not masked out) and abort
        if cell is found below floor value.
    gr_sanitizeVerbosity [INTEGER] [5]
        Valid Values: 0, 1, 4, 5
        How to write information about unacceptable values in the dens, ener,
        and eint cell-centered variables if gr_sanitizeDataAfterInterp finds
        value that are below the acceptable floor. This reporting is in addition
        to other actions selected with gr_sanitizeDataMode=3 or 4. 0: Be quiet.
        1: Only write a log file message per block if unacceptable value found
        on MASTER_PE. 4: As 1, and each proc writes a line to standard output
        for each block with bad values. 5: As 4, and each proc writes lines
        showing the values in all cells of the block (in 1D/2D) 5: or a 2D slice
        (in 3D).

Grid/GridMain/paramesh/paramesh4/Paramesh4dev
    gr_pmrpAdvanceAllLevels [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter advance_all_levels
    gr_pmrpAmrErrorChecking [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter amr_error_checking
    gr_pmrpCartesianPm [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter cartesian_pm This will be
        adjusted by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpConserve [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter conserve
    gr_pmrpConsvFluxDensities [BOOLEAN] [TRUE]
        sets value for PARAMESH runtime parameter consv_flux_densities This will
        be adjusted by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpConsvFluxes [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter consv_fluxes This will be
        adjusted by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpCurvilinear [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter curvilinear. This will be
        adjusted by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpCurvilinearConserve [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter curvilinear_conserve. This
        will be adjusted by FLASH at runtime if necessary, so don't worry much.
        However, if you manually set gr_pmrpCurvilinear to TRUE, you probably
        should also set gr_pmrpCurvilinearConserve TRUE.
    gr_pmrpCylindricalPm [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter cylindrical_pm This will be
        adjusted by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpDiagonals [BOOLEAN] [TRUE]
        sets value for PARAMESH runtime parameter diagonals
    gr_pmrpDivergenceFree [INTEGER] [1]
        Valid Values: -1, 0, 1
        sets value for PARAMESH runtime parameter divergence_free. 0 means
        FALSE, 1 means TRUE. -1 means: let FLASH determine the value based on
        how it has been set up; currently that means to check whether a
        preprocessor symbol DIVERGENCE_FREE is defined.
    gr_pmrpEdgeValue [BOOLEAN] [TRUE]
        sets value for PARAMESH runtime parameter edge_value This will be
        adjusted by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpEdgeValueInteg [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter edge_value_integ This will be
        adjusted by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpEmptyCells [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter empty_cells
    gr_pmrpForceConsistency [BOOLEAN] [TRUE]
        sets value for PARAMESH runtime parameter force_consistency
    gr_pmrpIfaceOff [INTEGER] [0]
        Valid Values: 0 to INFTY
        sets value for PARAMESH runtime parameter iface_off
    gr_pmrpL2p5d [INTEGER] [0]
        Valid Values: -1, 0, 1
        sets value for PARAMESH runtime parameter l2p5d. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpLsingularLine [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter lsingular_line
    gr_pmrpMaxblocks [INTEGER] [-1]
        Valid Values: -1, 0 to INFTY
        sets value for PARAMESH runtime parameter maxblocks. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpMflags [INTEGER] [1]
        Valid Values: Unconstrained
        sets value for PARAMESH runtime parameter mflags
    gr_pmrpNboundaries [INTEGER] [2]
        Valid Values: 2 to INFTY
        sets value for PARAMESH runtime parameter nboundaries
    gr_pmrpNdim [INTEGER] CONSTANT [1]
        Valid Values: Unconstrained
        sets value for PARAMESH runtime parameter ndim.
    gr_pmrpNedgevar1 [INTEGER] [-1]
        Valid Values: -1, 0 to INFTY
        sets value for PARAMESH runtime parameter nedgevar1. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpNfacevar [INTEGER] [-1]
        Valid Values: -1, 0 to INFTY
        sets value for PARAMESH runtime parameter nfacevar
    gr_pmrpNfieldDivf [INTEGER] [-1]
        Valid Values: -1, 0 to INFTY
        sets value for PARAMESH runtime parameter nfield_divf. -1 means: let
        FLASH determine the value based on how it has been set up.
    gr_pmrpNfluxvar [INTEGER] [-1]
        Valid Values: -1, 0 to INFTY
        sets value for PARAMESH runtime parameter nfluxvar. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpNguard [INTEGER] [-1]
        Valid Values: -1, 0 to INFTY
        sets value for PARAMESH runtime parameter nguard. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpNguardWork [INTEGER] [-1]
        Valid Values: -1, 0 to INFTY
        sets value for PARAMESH runtime parameter nguard_work. -1 means: let
        FLASH determine the value based on how it has been set up.
    gr_pmrpNoPermanentGuardcells [BOOLEAN] [TRUE]
        sets value for PARAMESH runtime parameter no_permanent_guardcells
    gr_pmrpNvar [INTEGER] [-1]
        Valid Values: -1, 0 to INFTY
        sets value for PARAMESH runtime parameter nvar. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpNvarWork [INTEGER] [1]
        Valid Values: 0 to INFTY
        sets value for PARAMESH runtime parameter nvar_work
    gr_pmrpNvarcorn [INTEGER] [0]
        Valid Values: 0 to INFTY
        sets value for PARAMESH runtime parameter nvarcorn
    gr_pmrpNvaredge [INTEGER] [0]
        Valid Values: 0 to INFTY
        sets value for PARAMESH runtime parameter nvaredge
    gr_pmrpNxb [INTEGER] [-1]
        Valid Values: -1, 2, 4, 6, 8, 10, 12, 14, 16 to INFTY
        sets value for PARAMESH runtime parameter nxb. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpNyb [INTEGER] [1]
        Valid Values: -1, 1, 2, 4, 6, 8, 10, 12, 14, 16 to INFTY
        sets value for PARAMESH runtime parameter nyb. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpNzb [INTEGER] [-1]
        Valid Values: -1, 2, 4, 6, 8, 10, 12, 14, 16 to INFTY
        sets value for PARAMESH runtime parameter nzb. -1 means: let FLASH
        determine the value based on how it has been set up.
    gr_pmrpOutputDir [STRING] ["./"]
        Valid Values: Unconstrained

    gr_pmrpPolarPm [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter polar_pm This will be adjusted
        by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpPredCorr [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter pred_corr
    gr_pmrpSphericalPm [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter spherical_pm This will be
        adjusted by FLASH at runtime if necessary, so don't worry much.
    gr_pmrpTimingMpi [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter timing_mpi
    gr_pmrpTimingMpix [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter timing_mpix
    gr_pmrpVarDt [BOOLEAN] [FALSE]
        sets value for PARAMESH runtime parameter var_dt

Grid/GridMain/paramesh/paramesh4/Paramesh4dev/flash_avoid_orrery
    use_flash_surr_blks_fill [BOOLEAN] [TRUE]

    use_reduced_orrery [BOOLEAN] [TRUE]


Grid/GridParticles
    gr_ptNumToReduce [INTEGER] [10]
        Valid Values: Unconstrained
        integer  if particles are to be removed at runtime, how many
    gr_ptRemove [BOOLEAN] [FALSE]
        boolean.  This is a switch which determines the action if the number
    gr_ptRemoveAlgo [INTEGER] [2]
        Valid Values: Unconstrained
        integer  The algorithm used in determining which particles to remove
    keepLostParticles [BOOLEAN] [FALSE]


Grid/GridParticles/GridParticlesMove
    gr_ptMaxPerProcBlockFactor [REAL] [0.70]
        Valid Values: 0.0 to 1.0
        When the effective max_particles_per_blk is lowered on a processor
        because refinement criteria based on the number of particles PER
        PROCESSOR are used, then the new effective max_particles_per_blk is set
        to (gr_ptMaxPerProcBlockFactor * pt_maxPerProc). In addition, when the
        effective min_particles_per_blk is lowered on a processor because
        refinement criteria based on the number of particles PER PROCESSOR are
        used, then the new effective min_particles_per_blk is set to (0.5^NDIM *
        gr_ptMaxPerProcBlockFactor * pt_maxPerProc).
    gr_ptMaxPerProcBlockNoFuzz [INTEGER] [3]
        Valid Values: 0 to INFTY
        A safety margin for estimating the size of basically unpredictable
        changes of the number of blocks on a processor when remeshing happens.
    gr_ptMaxPerProcLowerThresh [REAL] [0.0625]
        Valid Values: 0.0 to 1.0
        A threshold. When the number of particles on a processor gets above
        (ptMaxPerProcLowerThresh * number of blocks on the processor), the
        effective min_particles_per_blk for blocks on this processor may be
        lowered.
    gr_ptMaxPerProcUpperThresh [REAL] [0.25]
        Valid Values: 0.0 to 1.0
        A threshold. When the number of particles on a processor gets above
        (ptMaxPerProcUpperThresh * number of blocks on the processor), the
        effective max_particles_per_blk for blocks on this processor may be
        lowered.
    gr_ptNumToReduce [INTEGER] [10]
        Valid Values: Unconstrained
        integer  if particles are to be removed at runtime, how many
    gr_ptRefineOnPtMaxPerProc [BOOLEAN] [FALSE]
        controls whether refinement criteria based on the number of particles
        PER PROCESSOR are used. These work by strengthening refinement criteria
        requested through the max_particles_per_blk and min_particles_per_blk
        RPs.  Requires RP refine_on_particle_count to be TRUE.
    gr_ptRemove [BOOLEAN] [FALSE]
        boolean.  This is a switch which determines the action if the number
    gr_ptRemoveAlgo [INTEGER] [2]
        Valid Values: Unconstrained
        integer  The algorithm used in determining which particles to remove
    gr_ptSieveCheckFreq [INTEGER] [1]
        Valid Values: Unconstrained
        integer the frequency for checking the convergence of the

Grid/GridSolvers/BHTree/Wunsch
    gr_bhPhysMACComm [BOOLEAN] [FALSE]
        - if true, physical MACs are used for calculation during communication
        of block trees
    gr_bhPhysMACTW [BOOLEAN] [FALSE]
        - if true, physical MACs are used for calculation during tree walk
    gr_bhTWMaxQueueSize [INTEGER] [10000]
        Valid Values: 1 to INFTY
        - maximum number of elements in the priority queue
    gr_bhTreeLimAngle [REAL] [0.5]
        Valid Values: 0 to INFTY
        - limit opening angle (if only geometric MAC is used)
    gr_bhTreeMaxcellmass [REAL] [1.0d99]
        Valid Values: Unconstrained
        For debugging: maximum mass allowed in a cell of block-trees
    gr_bhTreeMincellmass [REAL] [1.0d-99]
        Valid Values: Unconstrained
        For debugging: minimum mass allowed in a cell of block-trees
    gr_bhTreeSafeBox [REAL] [1.2]
        Valid Values: -INFTY to INFTY
        - relative (w.r.t. to the block size) size of a cube around each block
        in which the target cell cannot be located in tree walk during
        interaction of the target cell with this block
    gr_bhUseUnifiedTW [BOOLEAN] [TRUE]
        - if true, the unified tree walk (Barnes-Hut type) is used; otherwise,
        MAC for long distance interaction (with non-leaf block) is evaluated
        only once for all cells in the block

Grid/GridSolvers/BiPCGStab
    bipcgs_max_cycles [INTEGER] [1000]
        Valid Values: Unconstrained

    bipcgs_max_residual_norm [REAL] [1.E-6]
        Valid Values: Unconstrained

    bipcgs_print_norm [BOOLEAN] [FALSE]


Grid/GridSolvers/HYPRE
    gr_hypreAbsTol [REAL] [0.0]
        Valid Values: Unconstrained
        If > 0.0, directly sets a_tol (absolute tolerance) for the HYPRE
        iterative solver. Convergence criteria:  <C*r,r>  <= max( a_tol^2,
        r_tol^2 * <C*b,b> ). Note: default for a_tol is 0.0, so relative
        residual criteria is used unless user specifies a_tol, or sets r_tol =
        0.0, which means absolute tol only is checked. See also
        gr_hypreSolverAutoAbsTolFact, for another way of setting a_tol.
        Currently only used when gr_hypreSolverType is "HYPRE_PCG".
    gr_hypreAnisoDiffusion [BOOLEAN] [FALSE]
        If TRUE, we use HYPRE to advance the solution of an anisotropic
        diffusion problem.  This mode is meant to be used for anisotropic
        thermal conduction in the presence of magnetic fields, hence it is
        probably only useful for MHD setups.  If FALSE, only isotropic diffusion
        problems are solved with HYPRE (available for both hydro and MHD).
        ANISOTRTOPIC DIFFUSION IS NOT YET PROPERLY IMPLEMENTED, AND NOT
        IMPLEMENTED AT ALL FOR AMR.
    gr_hypreCfTol [REAL] [0.0]
        Valid Values: Unconstrained
        If > 0.0, enable in the iterative HYPRE solver an pptional test to see
        if adequate progress is being made. The average convergence factor is
        recorded and compared against the tolerance 'cf_tol'. The weighting
        factor is intended to pay more attention to the test when an accurate
        estimate for average convergence factor is available. Currently only
        used when gr_hypreSolverType is "HYPRE_PCG". Example suggested values:
        something like 0.5, 0.8, 0.9, 0.95, 0.99.
    gr_hypreFloor [REAL] [1.0e-12]
        Valid Values: Unconstrained
        floor value for using HYPRE to advance diffusion.
    gr_hypreInfoLevel [INTEGER] [1]
        Valid Values: Unconstrained
        : Flag to output solver specific information such as Relative Residue,
        num-iterations.
    gr_hypreMaxIter [INTEGER] [500]
        Valid Values: Unconstrained
        Max iterations of linear solver.
    gr_hyprePCType [STRING] ["HYPRE_AMG"]
        Valid Values: "HYPRE_NONE", "HYPRE_ILU", "HYPRE_AMG", "HYPRE_PARASAILS",
        "hypre_ilu", "hypre_amg", "hypre_parasails", "hypre_none"

    gr_hyprePrintSolveInfo [BOOLEAN] [FALSE]
        : Flag to output solver specific information such as Relative Residue,
        num-iterations.
    gr_hypreRecomputeResidual [BOOLEAN] [FALSE]
        If TRUE, don't trust the convergence test until we've recomputed the
        residual from scratch.  This is expensive in the usual case where an the
        norm is the energy norm. This calculation is coded on the assumption
        that the accuracy of the residual r is only a concern for problems where
        CG takes many iterations. Currently only used when gr_hypreSolverType is
        "HYPRE_PCG".
    gr_hypreRecomputeResidualP [INTEGER] [-1]
        Valid Values: Unconstrained
        If > 0, recompute the residual every gr_hypreRecomputeResidualP
        iterations. Currently only used when gr_hypreSolverType is "HYPRE_PCG".
    gr_hypreRelChange [BOOLEAN] [FALSE]
        At user request, don't treat an approximation of the solution x in the
        HYPRE iterative solver  as converged unless x didn't change much in the
        last iteration. Currently only used when gr_hypreSolverType is
        "HYPRE_PCG".
    gr_hypreRelTol [REAL] [1.0e-8]
        Valid Values: Unconstrained
        Relative tolerence r_tol of HYPRE linear solver.
    gr_hypreSolverAutoAbsTolFact [REAL] [0.0]
        Valid Values: Unconstrained
        If not 0.0, automatically set a_tol (absolute tolerance) for the HYPRE
        iterative solver. If also gr_hypreAbsTol > 0, then the maximum of
        gr_hypreAbsTol and the automatically determined value is taken. See
        description of gr_hypreAbsTol for the use if a_tool in the HYPRE solver.
        If gr_hypreSolverAutoAbsTolFact > 0, then set f =
        gr_hypreSolverAutoAbsTolFact. If gr_hypreSolverAutoAbsTolFact < 0, then
        set f = |gr_hypreSolverAutoAbsTolFact|*gr_hypreRelTol. In either case,
        the automatically determined value for a_tol is
        f*sqrt(<Cest*bfloor,bfloor>). Here <Cest*bfloor,bfloor> is a rough
        estimate of the smallest possible value of the inverse of the diagonal
        part of the matrix C representing the preconditioner. In that estimate,
        bfloor is a vector that represents a worst-case tolerable error in b
        (the RHS of the equation to be solved, A*x=b). Currently, bfloor is set
        to a vector whose every element is set to gr_hypreFloor. If
        gr_hypreAbsTol > 0 in addition to gr_hypreSolverAutoAbsTolFact .ne. 0.0,
        then the maximum of gr_hypreAbsTol and the automatically determined
        value is taken. Currently only used when gr_hypreSolverType is
        "HYPRE_PCG".
    gr_hypreSolverType [STRING] ["HYPRE_PCG"]
        Valid Values: "HYPRE_PCG", "HYPRE_AMG", "HYPRE_GMRES", "HYPRE_BICGSTAB",
        "HYPRE_SPLIT", "hypre_pcg", "hypre_amg", "hypre_gmres",
        "hypre_bicgstab", "hypre_split"
        : Type of HYPRE solver to be used.
    gr_hypreUse2Norm [BOOLEAN] [FALSE]
        whether to use L2 norm for exit condition in iterative solver (instead
        of L1 norm). Currently only used when gr_hypreSolverType is "HYPRE_PCG".
    gr_hypreUseFloor [BOOLEAN] [TRUE]
        whether to apply gr_hypreFloor to floor results from HYPRE. Should
        probably be TRUE when using HYPRE to advance diffusion, FALSE otherwise.
        However, flooring will always be turned off when using the HYPRE
        implementation of Grid_solvePoisson, independent of the value of the
        gr_hypreUseFloor runtime parameter.

Grid/GridSolvers/IsoBndMultipole
    mpole_lmax [INTEGER] [0]
        Valid Values: Unconstrained
        Maximum multipole moment to use
    octant [BOOLEAN] [false]
        In 3d cartesian geometry, assume symmetry about left-facing volume faces
    quadrant [BOOLEAN] [false]
        In 2d cylindrical coords, assume symmetry about grid bottom to evolve a
        quadrant

Grid/GridSolvers/Multigrid
    mg_maxCorrections [INTEGER] [100]
        Valid Values: Unconstrained
        Maximum number of correction V-cycles to employ.
    mg_maxResidualNorm [REAL] [1.E-6]
        Valid Values: Unconstrained
        Apply V-cycle corrections until this residual norm is reached or
        mg_maxCorrections V-cycles have been performed.
    mg_printNorm [BOOLEAN] [TRUE]
        If .true., print the ratio of the residual norm to the source norm as
        each V-cycle is completed.
    quadrant [BOOLEAN] [false]
        True if only one quadrant is being calculated in 2-d cylindrical
        coordinates

Grid/GridSolvers/Multigrid/PfftTopLevelSolve
    maxDirectSolveLevel [INTEGER] [9999]
        Valid Values: 1 to 9999
        Level that will be used to perform direct FFT solve.
    xl_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower (left) boundary condition in x dir
    xr_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper (right) boundary condition in x dir
    yl_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower boundary condition in y dir
    yr_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper boundary condition in y dir
    zl_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower boundary condition in z dir
    zr_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper boundary condition in z dir

Grid/GridSolvers/MultigridMC
    gr_mgDiffOpDiscretize [INTEGER] [2]
        Valid Values: 2, 4
        Spatial Differential operator discretization: gr_mgDiffOpDiscretize=2
        for 2nd order central; gr_mgDiffOpDiscretize=4 for 4th order central.

Grid/GridSolvers/MultigridMC/poisson
    mgrid_max_iter_change [REAL] [1.E-3]
        Valid Values: Unconstrained
        Maximum change in the norm of the residual from one iteration to the
        next
    mgrid_max_residual_norm [REAL] [1.E-6]
        Valid Values: Unconstrained
        Maximum ratio of the norm of the residual to that of the right-hand side
    mgrid_max_vcycles [INTEGER] [100]
        Valid Values: Unconstrained
        Maximum number of V-cycles to take
    mgrid_npossmooth [INTEGER] [8]
        Valid Values: Unconstrained

    mgrid_npresmooth [INTEGER] [2]
        Valid Values: Unconstrained

    mgrid_print_norm [BOOLEAN] [FALSE]
        If .true., print residual norm to stdout after each V-cycle
    mgrid_smooth_tol [REAL] [1.E-10]
        Valid Values: Unconstrained
        Convergence criterion for the smoother
    mgrid_smoother [INTEGER] [1]
        Valid Values: 1, 2
        Type of smoother, either RBGS=1 or ZEBRA=2.
    mgrid_solve_max_iter [INTEGER] [5000]
        Valid Values: Unconstrained
        Maximum number of iterations for solution on
    quadrant [BOOLEAN] [FALSE]
        In 2d cylindrical coords, assume symmetry about the y=0 axis to evolve a
        quadrant

Grid/GridSolvers/MultigridMC/poisson/PfftTopLevelSolve
    maxDirectSolveLevel [INTEGER] [9999]
        Valid Values: 1 to 9999
        Level that will be used to perform direct FFT solve.
    xl_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower (left) boundary condition in x dir
    xr_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper (right) boundary condition in x dir
    yl_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower boundary condition in y dir
    yr_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper boundary condition in y dir
    zl_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        lower boundary condition in z dir
    zr_mg_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained
        upper boundary condition in z dir

Grid/GridSolvers/Multipole
    mpole_3daxisymmetric [BOOLEAN] [false]
        In 3d cartesian geometry, use only m=0 multipole moments
    mpole_dumpMoments [BOOLEAN] [false]
        Should the Moment array be dumped at each timestep?
    mpole_lmax [INTEGER] [0]
        Valid Values: Unconstrained
        Maximum multipole moment to use
    mpole_r12 [REAL] [0.0]
        Valid Values: Unconstrained

    mpole_r23 [REAL] [1.0]
        Valid Values: Unconstrained

    mpole_rscale1 [REAL] [1.0]
        Valid Values: Unconstrained

    mpole_rscale2 [REAL] [1.0]
        Valid Values: Unconstrained

    mpole_rscale3 [REAL] [1.0]
        Valid Values: Unconstrained

    mpole_scaleType1 [INTEGER] [1]
        Valid Values: Unconstrained

    mpole_scaleType2 [INTEGER] [1]
        Valid Values: Unconstrained

    mpole_scaleType3 [INTEGER] [1]
        Valid Values: Unconstrained

    mpole_subSample [INTEGER] [1]
        Valid Values: 1 to 12
        Integer which controls the sub-sampling in the mpole_potential routine
        and mpole_moments routine.  Set to smaller numbers to make potential
        calculations (slightly) less smooth and faster. Was hardcoded in Flash2
        as Nint6 = 6 in mpole_potential and Nint=2 in mpole_moments Defines the
        3 zones (r12,r23 are fractions of rMax) Scaling factor for each zones.
        Scaling Type for each of the regions, can be Constant,  Logarthmic
    mpole_useMatrixMPI [BOOLEAN] [false]
        Switch added during the DAT to calculate MPI_allreduce in a matrix
        fashion & Set to .false. to retain the previous behaviour
    octant [BOOLEAN] [false]
        In 3d cartesian geometry, assume symmetry about left-facing volume faces
    quadrant [BOOLEAN] [false]
        In 2d cylindrical coords, assume symmetry about grid bottom to evolve a
        quadrant

Grid/GridSolvers/Multipole_new
    mpole_2DSymmetryPlane [BOOLEAN] [false]
        In 2D coordinates, assume a plane of symmetry at the grid bottom. Can be
        used for symmetrical problems to reduce computational domain.
    mpole_3DAxisymmetry [BOOLEAN] [false]
        Assumes rotational invariance around the main (z) axis in 3D cartesian
        geometry domains, even if this holds only approximately. In effect it
        uses only M=0 multipole moments.
    mpole_DumpMoments [BOOLEAN] [false]
        Should the Moment array be dumped at each timestep? Use this option only
        with care, as the moments will be printed for each radial bin.
    mpole_IgnoreInnerZone [BOOLEAN] [false]
        If this is set .true., the inner zone will not be recognized and all
        inner zone radii will be treated statistically. This can be used only if
        Lmax is sufficiently low.
    mpole_InnerZoneResolution [REAL] [0.1]
        Valid Values: 0.0 to INFTY
        The resolution spacing for the inner zone in units of the inner zone
        atomic radius. Two inner zone radii will be considered different if they
        are more than the resolution spacing apart. A very tiny number will
        result in a complete separation of all inner zone radii into separate
        bins. However, the resolution cannot be set to exactly zero, because its
        inverse value needs to be calculated at some point in the code.
    mpole_InnerZoneSize [INTEGER] [16]
        Valid Values: 1 to INFTY
        The size (radius) defining the inner zone in terms of the inner zone
        atomic radius. This value needs to be an integer, as it will be used to
        define dimensions of certain arrays.
    mpole_Lmax [INTEGER] [0]
        Valid Values: 0 to INFTY
        Maximum multipole moment to use
    mpole_MaxRadialZones [INTEGER] [1]
        Valid Values: 1 to INFTY
        The maximum number of radial zones to be used
    mpole_MultiThreading [BOOLEAN] [true]
        If set .true., the code will run in multithreaded mode
    mpole_PrintRadialInfo [BOOLEAN] [false]
        Should the Multipole solver print out detailed radial bin information at
        each timestep?
    mpole_ZoneExponent_1 [REAL] [1.0]
        Valid Values: -INFTY to INFTY
        The exponent value 't' in the radial equation r(Q) = s * dr * Q^t or the
        radial equation r(Q) = s * dr * (e^(Qt)-1)/(e^t-1), defining the maximum
        radius of the Q-th radial bin for the 1st zone.
    mpole_ZoneExponent_2 [REAL] [1.0]
        Valid Values: -INFTY to INFTY
        Idem for the 2nd radial zone.
    mpole_ZoneExponent_3 [REAL] [1.0]
        Valid Values: -INFTY to INFTY
        Idem for the 3rd radial zone.
    mpole_ZoneExponent_4 [REAL] [1.0]
        Valid Values: -INFTY to INFTY
        Idem for the 4th radial zone.
    mpole_ZoneRadiusFraction_1 [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        The fraction of the maximum radius defining the 1st radial zone limit.
        The total number of fractions given must match the maximum number of
        radial zones specified and the fractions must be in increasing order and
        less than 1. as we move from the 1st zone upwards. The last zone must
        always have a fraction of exactly 1. If not, the code will enforce it.
    mpole_ZoneRadiusFraction_2 [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        Idem for the 2nd radial zone.
    mpole_ZoneRadiusFraction_3 [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        Idem for the 3rd radial zone.
    mpole_ZoneRadiusFraction_4 [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        Idem for the 4th radial zone.
    mpole_ZoneScalar_1 [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        The scalar value 's' in the radial equation r(Q) = s * dr * Q^t or the
        radial equation r(Q) = s * dr * (e^(Qt)-1)/(e^t-1), defining the maximum
        radius of the Q-th radial bin for the 1st zone.
    mpole_ZoneScalar_2 [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        Idem for the 2nd radial zone.
    mpole_ZoneScalar_3 [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        Idem for the 3rd radial zone.
    mpole_ZoneScalar_4 [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        Idem for the 4th radial zone.
    mpole_ZoneType_1 [STRING] ["exponential"]
        Valid Values: Unconstrained
        String value containing the zone type for the 1st zone. If set to
        'exponential' then the radial equation r(Q) = s * dr * Q^t is used. If
        set to 'logarithmic' the radial equation r(Q) = s * dr *
        (e^(Qt)-1)/(e^t-1) is used.
    mpole_ZoneType_2 [STRING] ["exponential"]
        Valid Values: Unconstrained
        Idem for the 2nd radial zone.
    mpole_ZoneType_3 [STRING] ["exponential"]
        Valid Values: Unconstrained
        Idem for the 3rd radial zone.
    mpole_ZoneType_4 [STRING] ["logarithmic"]
        Valid Values: Unconstrained
        Idem for the 4th radial zone.

Grid/GridSolvers/Pfft
    gr_pfftDiffOpDiscretize [INTEGER] [1]
        Valid Values: 1, 2
        specifies the approach for discretizing the Laplacian differential
        operator: 2 for second-order finite difference approximation, 1 for
        spectral.  This choice is ignored by solver implementations that have
        one approach hardwired. Currently the HomBcTrigSolver and
        SimplePeriodicSolver implementations honor this runtime parameter.
    pfft_setupOnce [BOOLEAN] [TRUE]
        This parameter tells Pfft whether it should retain trig tables and other
        mapping information for the entire simulation or not

Grid/GridSolvers/unitTest
    gr_testTolL2 [REAL] [1.E-10]
        Valid Values: 0.0 to INFTY
        Maximum L2 error norm that is tolerable
    gr_testTolLinf [REAL] [1.E-10]
        Valid Values: 0.0 to INFTY
        Maximum Linf error norm that is tolerable

IO/IOMain
    alwaysComputeUserVars [BOOLEAN] [true]
        Allows the user to force the computation of user variables (i.e. those
        computed by Grid_computeUserVars) for all checkpoint files.  Defaults to
        true.  If set to false, lone calls to IO_writeCheckpoint will not call
        Grid_computeUserVars.  Plotfiles always call Grid_computeUserVars.
    alwaysRestrictCheckpoint [BOOLEAN] [true]
        Allows the user to choose whether checkpoint file data is always
        restricted, so all ancestor blocks have valid data. The default is true.
        It can be set to false for debugging purposes, in which case only the
        data from IO_output will be guaranteed to have fully restricted data. 
        See the User's guide for more information.
    basenm [STRING] ["flash_"]
        Valid Values: Unconstrained
        Base name for checkpoint files
    bytePack [BOOLEAN] [FALSE]
        compress plotfile data to bytes !!Only implemented with UG in hdf5 !!!
        !!Not tested
    checkpointFileIntervalStep [INTEGER] [0]
        Valid Values: Unconstrained
        Checkpoint after this many steps
    checkpointFileIntervalTime [REAL] [1.]
        Valid Values: Unconstrained
        Checkpoint after this much time
    checkpointFileIntervalZ [REAL] [HUGE(1.)]
        Valid Values: Unconstrained

    checkpointFileNumber [INTEGER] [0]
        Valid Values: Unconstrained
        Initial checkpoint file number (used for restarts as well)
    chkGuardCellsInput [BOOLEAN] CONSTANT [FALSE]
        if true guardcells are read from the checkpoint file. Default is false
        where only interior cells are read. Currently only implemented with hdf5
        parallel paramesh IO implementation
    chkGuardCellsOutput [BOOLEAN] CONSTANT [FALSE]
        if true guardcells are written the checkpoint file. Default is false
        where only interior cells are written. Currently only implemented with
        hdf5 parallel paramesh IO implementation
    corners [BOOLEAN] [FALSE]
        does nothing.  However, it is part of the checkpoint file specification,
        so we retain the checkpoint entry, but force it to be .false.. It was
        used in FLASH2 to interpolate the data to the zone corners before
        storing the data in the plotfile (for creating improved iso-surfaces).
    fileFormatVersion [INTEGER] [9]
        Valid Values: Unconstrained
        Integer value specifying the file format type
    forcedPlotFileNumber [INTEGER] [0]
        Valid Values: Unconstrained

    ignoreForcedPlot [BOOLEAN] [false]

    io_writeMscalarIntegrals [BOOLEAN] [FALSE]
        Should density integrals for all mass scalars be written to the
        stats_file (.dat file)?  This runtime parameter is handled in the
        default IO_writeIntegralQuantities implementation in IOMain, and may
        have no effect if a simulation overrides that implementation.
    memory_stat_freq [INTEGER] [100000]
        Valid Values: Unconstrained
        Specify the number of timesteps between memory statistic dumps to
        flash.log !!NOT Yet Implemented in F3
    outputSplitNum [INTEGER] [1]
        Valid Values: Unconstrained
        Split checkpoint, plotfiles, particle plots into this many files per
        dump Not fully implemented, only hdf5 parallel. use at own risk
    output_directory [STRING] [""]
        Valid Values: Unconstrained
        output dir for checkpoint file, can be absolute or relative path
    plotFileIntervalStep [INTEGER] [0]
        Valid Values: Unconstrained
        Write a plotfile after this many steps
    plotFileIntervalTime [REAL] [1.]
        Valid Values: Unconstrained
        Write a plotfile after this much time
    plotFileIntervalZ [REAL] [HUGE(1.)]
        Valid Values: Unconstrained
        Write a plotfile after this change in z
    plotFileNumber [INTEGER] [0]
        Valid Values: Unconstrained
        Initial plot file number
    plot_grid_var_1 [STRING] ["none"]
        Valid Values: Unconstrained
        Allows user to output specific scratch grid vars Up to 12 choices are
        allowed.  If plot_grid_var_X is set to "none" then no variable will be
        saved. The parameter should have the same name as the variable
        corresponding to it. For exampe, if a variable is declared GRID_VAR
        vrtz, to write that grid variable to a plotfile a parameter should be
        declared as PARAMETER plot_grid_var_X STRING "vrtz"
    plot_grid_var_10 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_11 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_12 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_2 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_3 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_4 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_5 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_6 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_7 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_8 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_grid_var_9 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_1 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_10 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_11 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_12 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_2 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_3 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_4 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_5 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_6 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_7 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_8 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_9 [STRING] ["none"]
        Valid Values: Unconstrained

    plot_var_<N>, for N=1..MAX_PLOT_VARS [STRING] ["none"]
        Valid Values: Unconstrained
        (automatically generated by setup)
    plotfileGridQuantityDP [BOOLEAN] [false]
        If true, this sets the grid variables (unk, facevars, etc.) to be output
        in double precision in plotfiles. Default value is false.
    plotfileMetadataDP [BOOLEAN] [false]
        Sets the floating point grid metadata fields to be written in double
        precision if true in plotfiles.  Default value is false
    prof_file [STRING] ["profile.dat"]
        Valid Values: Unconstrained
        !!NOT yet implemented yet in F3
    rolling_checkpoint [INTEGER] [10000]
        Valid Values: Unconstrained
        Checkpoint file number cycling span. Only the last rolling_checkpoint
        files are kept.
    rss_limit [REAL] [-1.0]
        Valid Values: Unconstrained
        Maximum value (in MB) of largest resident set size (rss) before we
        checkpoint and exit. Negative for no limit.  Only active if memory
        statistics are being kept.
    stats_file [STRING] ["flash.dat"]
        Valid Values: Unconstrained
        Name of the file integral quantities are written to (.dat file)
    summaryOutputOnly [BOOLEAN] [false]
        Makes FLASH write integrated quantities, i.e. summary data, only. FLASH
        will only write a checkpoint, plot, or particle file if the user creates
        a .dump_plotfile, .dump_checkpoint, .dump_restart, or
        .dump_particle_file file.  A .kill file will still kill FLASH.
    typeMatchedXfer [BOOLEAN] [true]
        Ensures that floating point data transfers are type matched when using
        HDF5.  This prevents HDF5 reverting to independent parallel I/O.
    useCollectiveHDF5 [BOOLEAN] [true]
        If true, all non-header, non-list datasets will be written using HDF5's
        collective output mode otherwise, the independent access mode is used. 
        Default value is true.
    useLegacyLabels [BOOLEAN] [true]
        If true, this stores mesh labels e.g. 'dens', 'pres' in a IO library
        dataspace of 4 characters.  We may want to set it to false to use larger
        labels e.g. 'density'
    wall_clock_checkpoint [REAL] [43200.]
        Valid Values: Unconstrained
        Checkpoint after XX seconds (wallclock time) This is useful to ensure
        that the job outputs a restart file before a queue window closes.
    wr_integrals_freq [INTEGER] [1]
        Valid Values: Unconstrained
        Number of timesteps between writing to flash.dat

IO/IOMain/hdf5/parallel/PM
    chkGuardCellsInput [BOOLEAN] [false]
        if true guardcells are read from the checkpoint file. Default is false
        where only interior cells are read. Currently only implemented with hdf5
        parallel paramesh IO implementation.
    chkGuardCellsOutput [BOOLEAN] [false]
        if true guardcells are written the checkpoint file. Default is false
        where only interior cells are written. Currently only implemented with
        hdf5 parallel paramesh IO implementation.

IO/IOMain/hdf5/parallel/PM_argonne
    packMeshChkReadHDF5 [BOOLEAN] [false]

    packMeshChkWriteHDF5 [BOOLEAN] [false]

    packMeshPlotWriteHDF5 [BOOLEAN] [true]
        If true, this specifies that we pack the

IO/IOMain/pnetcdf/typeSelection
    asyncMeshChkReadPnet [BOOLEAN] [false]

    asyncMeshChkWritePnet [BOOLEAN] [false]

    asyncMeshPlotWritePnet [BOOLEAN] [false]
        If true, this uses non blocking I/O writes

IO/IOParticles
    particleFileIntervalStep [INTEGER] [0]
        Valid Values: Unconstrained
        write a particle file after this many steps
    particleFileIntervalTime [REAL] [1.]
        Valid Values: Unconstrained
        Write a particle plot after this much time
    particleFileIntervalZ [REAL] [HUGE(1.)]
        Valid Values: Unconstrained
        write a particle file after this change in redshift
    particleFileNumber [INTEGER] [0]
        Valid Values: Unconstrained
        Initial particle plot file number
    writeParticleAll [BOOLEAN] [true]
        Write the complete particles array to a particle file.
    writeParticleSubset [BOOLEAN] [false]
        Write user-defined subset(s) of the particles array to

Particles
    useParticles [BOOLEAN] [FALSE]
        Whether to advance particles [TRUE] or not [FALSE]

Particles/ParticlesInitialization
    pt_resetTag [BOOLEAN] [FALSE]


Particles/ParticlesInitialization/Lattice
    __doc__
        Lattice uniformly distributes the particles throughout physical domain
    pt_initialRadius [REAL] [-1.0]
        Valid Values: Unconstrained
        maximum distance from center of domain for particle initialization -- by
        default = -1.0 (i.e. no minimum)
    pt_initialXMax [REAL] [1.0]
        Valid Values: Unconstrained
        maximum value in x for particle initialization -- by default = xmax
    pt_initialXMin [REAL] [0.0]
        Valid Values: Unconstrained
        minimum value in x for particle initialization -- by default = xmin
    pt_initialYMax [REAL] [1.0]
        Valid Values: Unconstrained
        maximum value in y for particle initialization -- by default = ymax
    pt_initialYMin [REAL] [0.0]
        Valid Values: Unconstrained
        minimum value in y for particle initialization -- by default = ymin
    pt_initialZMax [REAL] [1.0]
        Valid Values: Unconstrained
        maximum value in z for particle initialization -- by default = zmax
    pt_initialZMin [REAL] [0.0]
        Valid Values: Unconstrained
        minimum value in z for particle initialization -- by default = zmin
    pt_numX [INTEGER] [1]
        Valid Values: Unconstrained

    pt_numY [INTEGER] [1]
        Valid Values: Unconstrained

    pt_numZ [INTEGER] [1]
        Valid Values: Unconstrained


Particles/ParticlesInitialization/WithDensity
    pt_numParticlesWanted [INTEGER] [100]
        Valid Values: Unconstrained
        Number of tracer particles to use (not guaranteed to get exactly this
        many)
    pt_pRand [INTEGER] [1]
        Valid Values: Unconstrained
        A number which affects the initial seed for the random number generator.
        We set the default value to 1 to make it more likely that the initial
        seed is within the integer range given by the IBM XL documentation which
        is "A valid seed must be a whole number between 1.0 and 2147483647.0
        (2.0**31-1)", as long as the number of MPI tasks is less than that
        value.

Particles/ParticlesInitialization/WithDensity/RejectionMethod
    __doc__
        This is completely untested, don't use without further work

Particles/ParticlesMain
    particle_attribute_1 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_10 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_2 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_3 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_4 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_5 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_6 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_7 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_8 [STRING] ["none"]
        Valid Values: Unconstrained

    particle_attribute_9 [STRING] ["none"]
        Valid Values: Unconstrained

    pt_dtChangeTolerance [REAL] [0.4]
        Valid Values: 0.0 to INFTY
        EstiMidpoint does predictor step if time step change is less than this
        percentage. Set to 0 to always do Euler, set to huge number to always
        use estim. midpoints
    pt_dtFactor [REAL] [0.5]
        Valid Values: Unconstrained
        Factor multiplying dx/|v| in setting particle timestep limit
    pt_logLevel [INTEGER] [700]
        Valid Values: 0 to INFTY
        controls the level of logging for some conditions. See Particles.h for
        relevant PT_LOGLEVEL_* definitions.
    pt_maxPerProc [INTEGER] [1000]
        Valid Values: Unconstrained
        Maximum number of particles per processor -- too small will cause a
        crash at reallocation
    pt_numAtOnce [INTEGER] [1]
        Valid Values: Unconstrained
        To be used when reading the particles from some file
    pt_small [REAL] [1.0E-10]
        Valid Values: Unconstrained
        If velocities are greater than this, then time stepping may be limited
    useParticles [BOOLEAN] [TRUE]
        Whether to advance particles [TRUE] or not [FALSE]

Particles/ParticlesMain/active/DPD
    pt_dpdLambda [REAL] [0.65]
        Valid Values: Unconstrained

    pt_dpdUpdateCycle [INTEGER] [1]
        Valid Values: Unconstrained


Particles/ParticlesMain/active/Sink
    jeans_ncells_deref [REAL] [64.0]
        Valid Values: Unconstrained

    jeans_ncells_ref [REAL] [32.0]
        Valid Values: Unconstrained

    refineOnJeansLength [BOOLEAN] [TRUE]

    refineOnSinkParticles [BOOLEAN] [TRUE]

    sink_AdvanceSerialComputation [BOOLEAN] [TRUE]

    sink_EwaldFieldNx [INTEGER] [64]
        Valid Values: Unconstrained
        number of x cells in Ewald correction field
    sink_EwaldFieldNy [INTEGER] [64]
        Valid Values: Unconstrained
        number of y cells in Ewald correction field
    sink_EwaldFieldNz [INTEGER] [64]
        Valid Values: Unconstrained
        number of z cells in Ewald correction field
    sink_EwaldFileName [STRING] ["sink_ewald.txt"]
        Valid Values: Unconstrained
        Filename for storing the Ewald field (used on restart)
    sink_EwaldSeriesN [INTEGER] [5]
        Valid Values: Unconstrained
        Ewald series max integer n, h
    sink_GasAccretionChecks [BOOLEAN] [TRUE]

    sink_accretion_radius [REAL] [1.0e14]
        Valid Values: Unconstrained
        accretion radius of sink particle
    sink_convergingFlowCheck [BOOLEAN] [TRUE]

    sink_density_thresh [REAL] [1.0e-14]
        Valid Values: Unconstrained
        density threshold for sink creation and accretion
    sink_dt_factor [REAL] [0.5]
        Valid Values: Unconstrained
        glocal timestep safety factor for sinks
    sink_integrator [STRING] ["leapfrog"]
        Valid Values: Unconstrained
        time step integrator (euler, leapfrog)
    sink_jeansCheck [BOOLEAN] [TRUE]

    sink_maxSinks [INTEGER] [1024]
        Valid Values: Unconstrained
        maximum number of sink particles
    sink_merging [BOOLEAN] [FALSE]
        activate/deactivate sink particle merging
    sink_negativeEtotCheck [BOOLEAN] [TRUE]

    sink_offDomainSupport [BOOLEAN] [FALSE]

    sink_potentialMinCheck [BOOLEAN] [TRUE]

    sink_softening_radius [REAL] [1.0e14]
        Valid Values: Unconstrained
        gravitational softening radius
    sink_softening_type_gas [STRING] ["linear"]
        Valid Values: Unconstrained
        gravitational softening gas--sinks
    sink_softening_type_sinks [STRING] ["spline"]
        Valid Values: Unconstrained
        gravitational softening sinks--sinks
    sink_subdt_factor [REAL] [0.01]
        Valid Values: Unconstrained
        timestep safety factor for subcycling
    useSinkParticles [BOOLEAN] [FALSE]
        switch sink particles on/off

Particles/ParticlesMain/active/charged/HybridPIC
    pt_picCdensMin [REAL] [0.0]
        Valid Values: Unconstrained
        Minimum charge density as a fraction of the initial
    pt_picGam [REAL] [-1.0]
        Valid Values: Unconstrained
        Adiabatic exponent for electrons
    pt_picNsub [INTEGER] [3]
        Valid Values: Unconstrained
        number of B-field update subcycles (must be odd)
    pt_picPcharge_1 [REAL] [1.0]
        Valid Values: Unconstrained
        Charge of particle species 1 [e]
    pt_picPcharge_2 [REAL] [1.0]
        Valid Values: Unconstrained
        Charge of particle species 2 [e]
    pt_picPdensity_1 [REAL] [1.0]
        Valid Values: 0 to INFTY
        Initial number density for particle species 1 [m^-3]
    pt_picPdensity_2 [REAL] [0.0]
        Valid Values: 0 to INFTY
        Initial number density for particle species 2 [m^-3]
    pt_picPmass_1 [REAL] [1.0]
        Valid Values: 0 to INFTY
        Mass of particle species 1 [amu]
    pt_picPmass_2 [REAL] [1.0]
        Valid Values: 0 to INFTY
        Mass of particle species 2 [amu]
    pt_picPname_1 [STRING] ["H+"]
        Valid Values: Unconstrained
        Name of species number 1
    pt_picPname_2 [STRING] ["H+ beam"]
        Valid Values: Unconstrained
        Name of species number 2
    pt_picPpc_1 [INTEGER] [0]
        Valid Values: Unconstrained
        Macro particles per cell of species 1
    pt_picPpc_2 [INTEGER] [0]
        Valid Values: Unconstrained
        Macro particles per cell of species 2
    pt_picPtemp_1 [REAL] [1.5e5]
        Valid Values: 0 to INFTY
        Initial temperature for particle species 1 [K]
    pt_picPtemp_2 [REAL] [0.0]
        Valid Values: 0 to INFTY
        Initial temperature for particle species 2 [K]
    pt_picPvelx_1 [REAL] [0.0]
        Valid Values: Unconstrained
        Initial x bulk velocity for particle species 1 [m/s]
    pt_picPvelx_2 [REAL] [0.0]
        Valid Values: Unconstrained
        Initial x bulk velocity for particle species 1 [m/s]
    pt_picPvely_1 [REAL] [0.0]
        Valid Values: Unconstrained
        Initial y bulk velocity for particle species 1 [m/s]
    pt_picPvely_2 [REAL] [0.0]
        Valid Values: Unconstrained
        Initial y bulk velocity for particle species 1 [m/s]
    pt_picPvelz_1 [REAL] [0.0]
        Valid Values: Unconstrained
        Initial z bulk velocity for particle species 1 [m/s]
    pt_picPvelz_2 [REAL] [0.0]
        Valid Values: Unconstrained
        Initial z bulk velocity for particle species 1 [m/s]
    pt_picResistivity [REAL] [0.0]
        Valid Values: Unconstrained

    pt_picResistivityHyper [REAL] [0.0]
        Valid Values: Unconstrained

    pt_picRng_seed [INTEGER] [0]
        Valid Values: Unconstrained
        Seed for the RNG if >= 0; if < 0, do not explicitly initialize the RNG
        seed for the hybrid PIC implementation.
    pt_picTe [REAL] [0.0]
        Valid Values: 0 to INFTY
        Initial electron temperature [K]

Particles/ParticlesMain/passive/EstiMidpoint2
    pt_dtChangeToleranceDown [REAL] [0.8]
        Valid Values: 0.00 to 1.01
        controls Euler vs. estimated midpoint step in
        EstiMidpoint2Passive/Particles_advance when time step increases.
    pt_dtChangeToleranceUp [REAL] [5.0]
        Valid Values: 0.00 to INFTY
        controls Euler vs. estimated midpoint step in
        EstiMidpoint2Passive/Particles_advance when time step increases.

Particles/ParticlesMapping/meshWeighting/CIC
    smearLen [INTEGER] [1]
        Valid Values: Unconstrained


PhysicalConstants/PhysicalConstantsMain
    pc_unitsBase [STRING] ["CGS"]
        Valid Values: Unconstrained
        Base Unit system for Physical Constants -- can be "CGS" or "MKS"

Simulation/SimulationMain
    basenm [STRING] ["flash_"]
        Valid Values: Unconstrained
        Base name for output files

Simulation/SimulationMain/Blast2
    gamma [REAL] [1.6667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for gas - for initialization
    refine_var_1 [STRING] ["pres"]
        Valid Values: Unconstrained
        first variable on which to refine
    refine_var_2 [STRING] ["dens"]
        Valid Values: Unconstrained
        second variable on which to refine
    sim_pLeft [REAL] [1000.]
        Valid Values: Unconstrained
        Pressure  in the left part of the grid
    sim_pMid [REAL] [0.01]
        Valid Values: Unconstrained
        Pressure  in the middle of the grid
    sim_pRight [REAL] [100.]
        Valid Values: Unconstrained
        Pressure  in the righ part of the grid
    sim_posnL [REAL] [0.1]
        Valid Values: Unconstrained
        Point of intersection between the left shock plane and x-axis
    sim_posnR [REAL] [0.9]
        Valid Values: Unconstrained
        Point of intersection between the right shock plane and the x-axis
    sim_rhoLeft [REAL] [1.]
        Valid Values: Unconstrained
        Density in the left part of the grid
    sim_rhoMid [REAL] [1.]
        Valid Values: Unconstrained
        Density in the middle of the grid
    sim_rhoRight [REAL] [1.]
        Valid Values: Unconstrained
        Density in the right part of the grid
    sim_uLeft [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the left part of the grid
    sim_uMid [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the middle of the grid
    sim_uRight [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the right part of the grid
    sim_xangle [REAL] [0.]
        Valid Values: Unconstrained
        Angle made by diaphragm normal w/x-axis (deg)
    sim_yangle [REAL] [90.]
        Valid Values: Unconstrained
        Angle made by diaphragm normal w/y-axis (deg)

Simulation/SimulationMain/CCSN
    model_file [STRING] ["file.dat"]
        Valid Values: Unconstrained
        Name of input file with 1D model
    nsub [INTEGER] [4]
        Valid Values: Unconstrained
        number of sub-sampling points for mapping of 1D model
    vel_mult [REAL] [1.0]
        Valid Values: Unconstrained
        multiplier on initial 1D radial velocity

Simulation/SimulationMain/CSM_RAD
    ExpEner [REAL] [1.0]
        Valid Values: Unconstrained

    bombRad [REAL] [1.0]
        Valid Values: Unconstrained

    bombRadIn [REAL] [1.0]
        Valid Values: Unconstrained

    coremass [REAL] [1.0]
        Valid Values: Unconstrained

    ener_exp [REAL] [1.0]
        Valid Values: Unconstrained

    gconst [REAL] [0.0]
        Valid Values: Unconstrained
        Gravitational constant, should be G*M(rmin)/rmin**2
    gdirec [STRING] ["x"]
        Valid Values: Unconstrained

    hole_radius [REAL] [1.0]
        Valid Values: Unconstrained

    mass_loss [REAL] [0.0]
        Valid Values: Unconstrained

    model_file [STRING] ["file.dat"]
        Valid Values: Unconstrained
        Name of input file with 1D model
    nsub [INTEGER] [4]
        Valid Values: Unconstrained

    paircond [BOOLEAN] [TRUE]

    point_mass [REAL] [0.0]
        Valid Values: Unconstrained

    r_exp_max [REAL] [0.0]
        Valid Values: Unconstrained

    r_exp_min [REAL] [0.0]
        Valid Values: Unconstrained

    rinner [REAL] [1.0]
        Valid Values: Unconstrained

    router [REAL] [1.0]
        Valid Values: Unconstrained

    shellcond [BOOLEAN] [TRUE]

    shelldens [REAL] [1.0]
        Valid Values: Unconstrained

    shelltempfac [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tele [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tion [REAL] [1.0]
        Valid Values: Unconstrained

    sim_trad [REAL] [1.0]
        Valid Values: Unconstrained

    staticGpot [BOOLEAN] [FALSE]
        Flag for whether or not to fix the gpot in time
    use_PnotT [BOOLEAN] [FALSE]

    vel_mult [REAL] [1.0]
        Valid Values: Unconstrained

    vel_wind [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/Cellular
    noiseAmplitude [REAL] [1.0e-2]
        Valid Values: Unconstrained
        amplitude of the white noise added to the perturbation
    noiseDistance [REAL] [5.0]
        Valid Values: Unconstrained
        distances above and below r_init get noise added
    radiusPerturb [REAL] [25.6]
        Valid Values: Unconstrained
        distance below which the perturbation is applied
    rhoAmbient [REAL] [1.0e7]
        Valid Values: 0 to INFTY
        density of the cold upstream material
    rhoPerturb [REAL] [4.236e7]
        Valid Values: Unconstrained
        density of the post shock material
    tempAmbient [REAL] [2.0e8]
        Valid Values: 0 to INFTY
        temperature of the cold upstream material
    tempPerturb [REAL] [4.423e9]
        Valid Values: Unconstrained
        temperature of the post shock material
    usePseudo1d [BOOLEAN] [FALSE]
        .true. for a 1d initial configuration, with the copied along the y and z
        directions .false. for a spherical configuration
    velxAmbient [REAL] [0.0]
        Valid Values: Unconstrained
        x-velocity of the cold upstream material
    velxPerturb [REAL] [2.876E+08]
        Valid Values: Unconstrained
        x-velocity of the post shock material
    xCenterPerturb [REAL] [0.0]
        Valid Values: Unconstrained

    xc12 [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        mass fraction of c12
    xhe4 [REAL] [0.0]
        Valid Values: 0.0 to 1.0
        mass fraction of he4
    xo16 [REAL] [0.0]
        Valid Values: 0.0 to 1.0
        mass fraction of o16
    yCenterPerturb [REAL] [0.0]
        Valid Values: Unconstrained

    zCenterPerturb [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/Chemistry_Test
    sim_c_den [REAL] [1.0e-21]
        Valid Values: Unconstrained

    sim_c_temp [REAL] [1000.0]
        Valid Values: Unconstrained

    sim_contrast [REAL] [0.1]
        Valid Values: Unconstrained

    sim_cool_time [REAL] [0.1]
        Valid Values: Unconstrained

    sim_fracDeuterium [REAL] [0.0]
        Valid Values: Unconstrained

    sim_fracHelium [REAL] [0.240]
        Valid Values: Unconstrained

    sim_fracHydrogen [REAL] [0.760]
        Valid Values: Unconstrained

    sim_meta [REAL] [0.0]
        Valid Values: Unconstrained

    sim_nblockx [REAL] [1.0]
        Valid Values: Unconstrained

    sim_nblocky [REAL] [1.0]
        Valid Values: Unconstrained

    sim_nblockz [REAL] [1.0]
        Valid Values: Unconstrained

    sim_pchem_time [REAL] [0.1]
        Valid Values: Unconstrained

    sim_xD [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xD2 [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xD2P [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xDM [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xDP [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xELEC [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xH [REAL] [0.760]
        Valid Values: Unconstrained

    sim_xH2 [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xH2P [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHD [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHDP [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHM [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHP [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHe [REAL] [0.240]
        Valid Values: Unconstrained

    sim_xHeP [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHePP [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/ConductionDelta
    cond_K0 [REAL] [1.0]
        Valid Values: Unconstrained
        coefficient K0 for conductivity K = rho c_v K0 T^n , where n is given by
        cond_TemperatureExponent.
    cond_TemperatureExponent [REAL] [1.0]
        Valid Values: Unconstrained
        Temperature exponent n. For n=0 you get constant conductivity. See D.
        Mihalas & B. W. Mihalas 1984 p 551. For n=6, e.g., you get nonlinear
        conduction as in Fig 103.1(b) there.
    iniCondTemperatureExponent [REAL] [-999.0]
        Valid Values: Unconstrained
        exponent for computing the temperature curve used as initial condition.
        Set to 0 to get a Gaussian. Set to -999.0 to get the value of
        cond_TemperatureExponent.
    orientation [INTEGER] [1]
        Valid Values: 0, 1, 2, 3
        1/2/3 -- planar source is oriented along x/y/z axis, 0     --
        three-dimensional point source
    rho_init [REAL] [1.]
        Valid Values: Unconstrained
        background density
    sim_Q [REAL] [1.0]
        Valid Values: Unconstrained
        factor used for scaling the initial temperature distribution
    sim_tempBackground [REAL] [0.0]
        Valid Values: Unconstrained
        constant temperature background, the Gaussian peak gets added to this
    sim_xctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center X-coordinate
    sim_yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center Y-coordinate
    sim_zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center Z-coordinate
    toffset [REAL] [.001]
        Valid Values: Unconstrained
        time offset for initial condition
    updateHydroFluxes [BOOLEAN] [FALSE]


Simulation/SimulationMain/ConductionDeltaSaDiff
    cond_K0 [REAL] [1.0]
        Valid Values: Unconstrained
        coefficient K0 for conductivity K = rho c_v K0 T^n , where n is given by
        cond_TemperatureExponent.
    cond_TemperatureExponent [REAL] [1.0]
        Valid Values: Unconstrained
        Temperature exponent n. For n=0 you get constant conductivity. See D.
        Mihalas & B. W. Mihalas 1984 p 551. For n=6, e.g., you get nonlinear
        conduction as in Fig 103.1(b) there.
    iniCondTemperatureExponent [REAL] [-999.0]
        Valid Values: Unconstrained
        exponent for computing the temperature curve used as initial condition.
        Set to 0 to get a Gaussian. Set to -999.0 to get the value of
        cond_TemperatureExponent.
    iniRadDiffExp [REAL] [0.0]
        Valid Values: Unconstrained

    orientation [INTEGER] [1]
        Valid Values: 0, 1, 2, 3
        1/2/3 -- planar source is oriented along x/y/z axis, 0     --
        three-dimensional point source
    rho_init [REAL] [1.]
        Valid Values: Unconstrained
        background density
    sim_Q [REAL] [1.0]
        Valid Values: Unconstrained
        factor used for scaling the initial temperature distribution
    sim_maxTol [REAL] [1.0E-3]
        Valid Values: Unconstrained
        Max allowed error
    sim_tempBackground [REAL] [0.0]
        Valid Values: Unconstrained
        constant temperature background, the Gaussian peak gets added to this
    sim_xctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center X-coordinate
    sim_yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center Y-coordinate
    sim_zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center Z-coordinate
    toffset [REAL] [.001]
        Valid Values: Unconstrained
        time offset for initial condition
    updateHydroFluxes [BOOLEAN] [FALSE]


Simulation/SimulationMain/Cool_Test
    sim_c_den [REAL] [1.0e-21]
        Valid Values: Unconstrained

    sim_c_temp [REAL] [1000.0]
        Valid Values: Unconstrained

    sim_chem_time [REAL] [0.1]
        Valid Values: Unconstrained

    sim_contrast [REAL] [0.1]
        Valid Values: Unconstrained

    sim_cool_time [REAL] [0.1]
        Valid Values: Unconstrained

    sim_fracDeuterium [REAL] [0.0]
        Valid Values: Unconstrained

    sim_fracHelium [REAL] [0.240]
        Valid Values: Unconstrained

    sim_fracHydrogen [REAL] [0.760]
        Valid Values: Unconstrained

    sim_meta [REAL] [0.0]
        Valid Values: Unconstrained

    sim_nblockx [REAL] [1.0]
        Valid Values: Unconstrained

    sim_nblocky [REAL] [1.0]
        Valid Values: Unconstrained

    sim_nblockz [REAL] [1.0]
        Valid Values: Unconstrained

    sim_xD [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xD2 [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xD2P [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xDM [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xDP [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xELEC [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xH [REAL] [0.760]
        Valid Values: Unconstrained

    sim_xH2 [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xH2P [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHD [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHDP [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHM [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHP [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHe [REAL] [0.240]
        Valid Values: Unconstrained

    sim_xHeP [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xHePP [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/DoubleMachReflection
    sim_pLeft [REAL] [1.0]
        Valid Values: Unconstrained
        Pressure in left part of grid
    sim_pRight [REAL] [116.5]
        Valid Values: Unconstrained
        Pressure in right part of grid
    sim_posn [REAL] [0.1666666666]
        Valid Values: Unconstrained
        Point of intersection between the shock plane and the x-axis
    sim_rhoLeft [REAL] [1.4]
        Valid Values: Unconstrained
        Density in left part of grid
    sim_rhoRight [REAL] [8.0]
        Valid Values: Unconstrained
        Density in right part of grid
    sim_uLeft [REAL] [0.0]
        Valid Values: Unconstrained
        Fluid velocity in right part of grid
    sim_uRight [REAL] [7.1447096]
        Valid Values: Unconstrained
        Fluid velocity in right part of grid
    sim_vLeft [REAL] [0.0]
        Valid Values: Unconstrained
        Fluid velocity in right part of grid
    sim_vRight [REAL] [-4.125]
        Valid Values: Unconstrained
        Fluid velocity in right part of grid
    sim_xangle [REAL] [60.]
        Valid Values: Unconstrained
        Angle made by diaphragm normal w/x-axis (deg)

Simulation/SimulationMain/DustCollapse
    sim_ictr [REAL] [0.5]
        Valid Values: Unconstrained

    sim_initDens [REAL] [1.]
        Valid Values: Unconstrained

    sim_initRad [REAL] [0.05]
        Valid Values: Unconstrained

    sim_jctr [REAL] [0.5]
        Valid Values: Unconstrained

    sim_kctr [REAL] [0.5]
        Valid Values: Unconstrained

    sim_tAmbient [REAL] [1.]
        Valid Values: Unconstrained


Simulation/SimulationMain/Flame1StageNoise
    frac_perturb [REAL] [.5]
        Valid Values: Unconstrained
        Size of burned region, scaled to domain size (generally x extent)
    ignite [BOOLEAN] [FALSE]
        Determines if simulation begins with a flame front in it
    pseudo_1d [BOOLEAN] [FALSE]
        If true a planar flame front is created, otherwise a spherical one is
        planar configuration is as follows based on other parameters y ^        
        . |    \     . |     \    . |      \ t . yctr +       +  .  fuel |      
        \ . | ash     \ |          \ +-------+--------------------------> x |
        frac_ptrb * x extent
    rho_ambient [REAL] [2.e9]
        Valid Values: Unconstrained
        Density of unburned material
    t_ambient [REAL] [5.0e7]
        Valid Values: Unconstrained
        Temperature of unburned material
    theta [REAL] [0.]
        Valid Values: Unconstrained
        angle between surface normal to planar flame surface and x axis (see
        diagram with pseudo_1d)
    xctr_perturb [REAL] [1.e-4]
        Valid Values: Unconstrained
        Planar: unused Spherical: x coordinate of center of spherical burned
        region
    yctr_perturb [REAL] [1.e-4]
        Valid Values: Unconstrained
        Planar: pivot point of planar interface (see diagram with pseudo_1d)
        Spherical: y coordinate of center of spherical burned region
    zctr_perturb [REAL] [1.e-4]
        Valid Values: Unconstrained
        Planar: unused Spherical: z coordinate of center of spherical burned
        region

Simulation/SimulationMain/FlameChannel
    frac_perturb [REAL] [.5]
        Valid Values: Unconstrained
        Size of burned region, scaled to domain size (generally x extent)
    ignite [BOOLEAN] [TRUE]
        Determines if simulation begins with a flame front in it
    inflowVortex [BOOLEAN] [FALSE]
        is a boolean. True means no vortices, false means vortices
    restart_vortex [BOOLEAN] [FALSE]
        says that a vortex will be inserted upon restart
    rho_ambient [REAL] [2.e9]
        Valid Values: Unconstrained
        Density of unburned material
    sigP [REAL] [0.]
        Valid Values: Unconstrained

    sigT [REAL] [1.]
        Valid Values: Unconstrained

    sigVx [REAL] [1.]
        Valid Values: Unconstrained

    sigVy [REAL] [0.]
        Valid Values: Unconstrained

    sigVz [REAL] [0.]
        Valid Values: Unconstrained

    smooth_level [INTEGER] [0]
        Valid Values: Unconstrained

    t_ambient [REAL] [5.0e7]
        Valid Values: Unconstrained
        Temperature of unburned material
    turbfield_filename [STRING] ["turb_vel_field.hdf5"]
        Valid Values: Unconstrained

    turbfield_xmax [REAL] [15.e5]
        Valid Values: Unconstrained

    turbfield_xmin [REAL] [0.0]
        Valid Values: Unconstrained

    turbfield_ymax [REAL] [7.5e5]
        Valid Values: Unconstrained

    turbfield_ymin [REAL] [-7.5e5]
        Valid Values: Unconstrained

    turbfield_zmax [REAL] [7.5e5]
        Valid Values: Unconstrained

    turbfield_zmin [REAL] [-7.5e5]
        Valid Values: Unconstrained

    useBurn [BOOLEAN] [true]

    variableInflow [BOOLEAN] [FALSE]
        is a boolean and allows inflow rate to match burning rate
    vortexSize [REAL] [0.25]
        Valid Values: Unconstrained
        is the radius of an individual vortex
    vortexStrength [REAL] [5.0]
        Valid Values: Unconstrained
        is the strength of the vortex (should be of order density)
    vrms [REAL] [1.e7]
        Valid Values: Unconstrained

    xbegin_vortex [REAL] [0.]
        Valid Values: Unconstrained
        is the x coordinate that defines the left side of
    xend_vortex [REAL] [0.]
        Valid Values: Unconstrained

    yctr_vortex [REAL] [1.]
        Valid Values: Unconstrained


Simulation/SimulationMain/FlatPlate
    sim_Mach [REAL] [1.0]
        Valid Values: Unconstrained

    sim_number [INTEGER] [1]
        Valid Values: Unconstrained

    sim_pAmbient [REAL] [1.0]
        Valid Values: Unconstrained

    sim_radius [REAL] [0.2]
        Valid Values: Unconstrained

    sim_rhoAmbient [REAL] [1.4]
        Valid Values: Unconstrained

    sim_rhoBulk [REAL] [10.]
        Valid Values: Unconstrained

    sim_windVelx [REAL] [1.0]
        Valid Values: Unconstrained

    sim_windVely [REAL] [1.0]
        Valid Values: Unconstrained

    sim_windVelz [REAL] [1.0]
        Valid Values: Unconstrained

    sim_xCtr [REAL] [0.3]
        Valid Values: Unconstrained

    sim_xangle [REAL] [0.]
        Valid Values: 0 to 360
        Angle made by diaphragm normal w/x-axis (deg)
    sim_yCtr [REAL] [0.5]
        Valid Values: Unconstrained

    sim_yangle [REAL] [90.]
        Valid Values: 0 to 360

    sim_zCtr [REAL] [0.5]
        Valid Values: Unconstrained

    sim_zangle [REAL] [90.]
        Valid Values: 0 to 360


Simulation/SimulationMain/GrayDiffRadShock
    sim_M0 [REAL] [1.0]
        Valid Values: Unconstrained
        shock mach number
    sim_P0 [REAL] [1.0]
        Valid Values: Unconstrained
        ratio of radiation pressure to material pressure
    sim_rho [REAL] [1.0]
        Valid Values: Unconstrained
        referene density
    sim_temp [REAL] [1.0]
        Valid Values: Unconstrained
        reference temperature

Simulation/SimulationMain/HeatedFoil
    sim_foilRadius [REAL] [0.0064]
        Valid Values: Unconstrained
        [cm] The radius to use for the target
    sim_foilThickness [REAL] [0.0008]
        Valid Values: Unconstrained
        [cm] The thickness of the foil
    sim_foilZPosition [REAL] [0.0]
        Valid Values: Unconstrained
        < z < sim_foilZPosition + sim_foilThickness
    sim_rhoFoil [REAL] [2.7]
        Valid Values: Unconstrained
        [g/cc] Initial foil density
    sim_rhoVacu [REAL] [2.7]
        Valid Values: Unconstrained
        [g/cc] Initial vacuum density
    sim_teleFoil [REAL] [290.11375]
        Valid Values: Unconstrained
        [K] Initial foil background electron temperature
    sim_teleRDecayFoil [REAL] [10.0e-04]
        Valid Values: Unconstrained
        [cm] Sets lengthscale for temperature drop in R
    sim_teleVacu [REAL] [290.11375]
        Valid Values: Unconstrained
        [K] Initial vacuum electron temperature
    sim_teleZDecayFoil [REAL] [2.0e-04]
        Valid Values: Unconstrained
        [cm] Sets lengthscale for temperature drop in Z
    sim_thotFoil [REAL] [0.0]
        Valid Values: Unconstrained
        [K] sim_thotFoil + sim_teleFoil is the peak foil electron
    sim_tionFoil [REAL] [290.11375]
        Valid Values: Unconstrained
        [K] Initial foil ion temperature
    sim_tionVacu [REAL] [290.11375]
        Valid Values: Unconstrained
        [K] Initial vacuum ion temperature
    sim_tradFoil [REAL] [290.11375]
        Valid Values: Unconstrained
        [K] Initial foil radiation temperature
    sim_tradVacu [REAL] [290.11375]
        Valid Values: Unconstrained
        [K] Initial vacuum radiation temperature

Simulation/SimulationMain/HeatexchangeIonEle
    cond_K0 [REAL] [1.0]
        Valid Values: Unconstrained
        coefficient K0 for conductivity K = rho c_v K0 T^n , where n is given by
        cond_TemperatureExponent.
    cond_TemperatureExponent [REAL] [1.0]
        Valid Values: Unconstrained
        Temperature exponent n. For n=0 you get constant conductivity. See D.
        Mihalas & B. W. Mihalas 1984 p 551. For n=6, e.g., you get nonlinear
        conduction as in Fig 103.1(b) there.
    initialCondTemperatureExponent [REAL] [-999.0]
        Valid Values: Unconstrained
        exponent for computing the temperature curve used as initial condition.
        Set to 0 to get a Gaussian. Set to -999.0 to get the value of
        cond_TemperatureExponent.
    orientation [INTEGER] [1]
        Valid Values: 0, 1, 2, 3
        1/2/3 -- planar source is oriented along x/y/z axis, 0     --
        three-dimensional point source
    rho_init [REAL] [1.]
        Valid Values: Unconstrained
        background density
    sim_Q [REAL] [1.0]
        Valid Values: Unconstrained
        factor used for scaling the initial temperature distribution
    sim_analytical_maxNewton [INTEGER] [5]
        Valid Values: Unconstrained
        maximum number of Newton-Raphson iterations to try.
    sim_analytical_tolerance [REAL] [1.e-8]
        Valid Values: Unconstrained
        tolerance for the Newton-Raphson iterations
    sim_eleTemp [REAL] [1.0e5]
        Valid Values: 0.0+ to INFTY

    sim_ionTemp [REAL] [6.0e5]
        Valid Values: 0.0+ to INFTY

    sim_maxTolCoeff0 [REAL] [1.0e-8]
        Valid Values: Unconstrained

    sim_maxTolCoeff1 [REAL] [0.0001]
        Valid Values: Unconstrained

    sim_maxTolCoeff2 [REAL] [0.01]
        Valid Values: Unconstrained

    sim_maxTolCoeff3 [REAL] [0.0]
        Valid Values: Unconstrained

    sim_radTemp [REAL] [0.0]
        Valid Values: 0.0 to INFTY

    sim_schemeOrder [INTEGER] [2]
        Valid Values: Unconstrained

    sim_tempBackground [REAL] [0.0]
        Valid Values: Unconstrained
        constant temperature background, the Gaussian peak gets added to this
    sim_xctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center X-coordinate
    sim_yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center Y-coordinate
    sim_zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Temperature peak center Z-coordinate
    toffset [REAL] [.001]
        Valid Values: Unconstrained
        time offset for initial condition
    updateHydroFluxes [BOOLEAN] [FALSE]


Simulation/SimulationMain/HydroStatic
    sim_presRef [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tempRef [REAL] [300.0]
        Valid Values: Unconstrained

    sim_xyzRef [REAL] [0.5]
        Valid Values: Unconstrained


Simulation/SimulationMain/IsentropicVortex
    nx_subint [INTEGER] [10]
        Valid Values: Unconstrained
        number of subintervals along IAXIS
    ny_subint [INTEGER] [10]
        Valid Values: Unconstrained
        number of subintervals along JAXIS
    p_ambient [REAL] [1.0]
        Valid Values: Unconstrained
        Initial ambient pressure
    particle_attribute_1 [STRING] ["pdens"]
        Valid Values: Unconstrained

    particle_attribute_2 [STRING] ["ptemp"]
        Valid Values: Unconstrained

    rho_ambient [REAL] [1.0]
        Valid Values: Unconstrained
        Initial ambient density
    u_ambient [REAL] [1.0]
        Valid Values: Unconstrained
        Initial ambient velocity
    v_ambient [REAL] [1.0]
        Valid Values: Unconstrained

    vortex_strength [REAL] [5.0]
        Valid Values: Unconstrained

    xctr [REAL] [0.0]
        Valid Values: Unconstrained
        x coordinate of the vortex center
    yctr [REAL] [0.0]
        Valid Values: Unconstrained
        y coordinate of the vortex center

Simulation/SimulationMain/Jeans
    amplitude [REAL] [0.01]
        Valid Values: Unconstrained

    delta_deref [REAL] [0.01]
        Valid Values: Unconstrained

    delta_ref [REAL] [0.1]
        Valid Values: Unconstrained

    lambdax [REAL] [1.]
        Valid Values: Unconstrained

    lambday [REAL] [1.]
        Valid Values: Unconstrained

    lambdaz [REAL] [1.]
        Valid Values: Unconstrained

    p0 [REAL] [1.]
        Valid Values: Unconstrained

    reference_density [REAL] [1.]
        Valid Values: Unconstrained

    rho0 [REAL] [1.]
        Valid Values: Unconstrained


Simulation/SimulationMain/LaserSlab
    sim_eosCham [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"
        chamber EOS type
    sim_eosTarg [STRING] ["eos_tab"]
        Valid Values: "eos_tab", "eos_gam"
        chamber EOS type
    sim_initGeom [STRING] ["slab"]
        Valid Values: "slab", "sphere"
        Use a spherical target if sphere, default to slab
    sim_rhoCham [REAL] [2.655e-07]
        Valid Values: Unconstrained
        Initial chamber density
    sim_rhoTarg [REAL] [2.7]
        Valid Values: Unconstrained
        Initial target density
    sim_targetHeight [REAL] [0.0250]
        Valid Values: Unconstrained
        The height of the target off y-axis
    sim_targetRadius [REAL] [0.0050]
        Valid Values: Unconstrained
        The radius to use for the target
    sim_teleCham [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial chamber electron temperature
    sim_teleTarg [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial target electron temperature
    sim_tionCham [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial chamber ion temperature
    sim_tionTarg [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial target ion temperature
    sim_tradCham [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial chamber radiation temperature
    sim_tradTarg [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial target radiation temperature
    sim_vacuumHeight [REAL] [0.0200]
        Valid Values: Unconstrained
        The thickness of the vacuum region in front of the target
    sim_zminTarg [REAL] [0.0]
        Valid Values: Unconstrained
        target minimum zbar allowed

Simulation/SimulationMain/MGDInfinite
    sim_beMassFrac [REAL] [0.33]
        Valid Values: Unconstrained

    sim_poliMassFrac [REAL] [0.33]
        Valid Values: Unconstrained

    sim_rho [REAL] [1.0]
        Valid Values: Unconstrained
        Initial radiation temperature
    sim_tele [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tion [REAL] [1.0]
        Valid Values: Unconstrained

    sim_trad [REAL] [1.0]
        Valid Values: Unconstrained

    sim_xeMassFrac [REAL] [0.33]
        Valid Values: Unconstrained


Simulation/SimulationMain/MGDStep
    sim_initGeom [STRING] ["planar"]
        Valid Values: "planar", "polar"

    sim_rho1 [REAL] [1.0]
        Valid Values: Unconstrained

    sim_rho2 [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tele1 [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tele2 [REAL] [1.0]
        Valid Values: Unconstrained

    sim_thickness [REAL] [0.1]
        Valid Values: Unconstrained
        Size of the "hot" region
    sim_tion1 [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tion2 [REAL] [1.0]
        Valid Values: Unconstrained

    sim_trad1 [REAL] [1.0]
        Valid Values: Unconstrained

    sim_trad2 [REAL] [1.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/MacLaurin
    angular_velocity [REAL] [0.]
        Valid Values: Unconstrained
        Dimensionless angular velocity (Omega)
    density [REAL] [1.]
        Valid Values: -1.0 to INFTY
        Spheroid density (rho)): set to -1 to generate spheroid mass of 1.0
    eccentricity [REAL] [0.]
        Valid Values: 0.0 to 1.0
        Eccentricity of the ellipsoid (e)
    equatorial_semimajor_axis [REAL] [1.]
        Valid Values: 0.1 to INFTY
        Equatorial semimajor axis (a1)
    nsubzones [INTEGER] [2]
        Valid Values: 1 to INFTY
        Number of sub-zones per dimension
    xctr [REAL] [0.5]
        Valid Values: Unconstrained
        X-coordinate of center of spheroid
    yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Y-coordinate of center of spheroid
    zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Z-coordinate of center of spheroid

Simulation/SimulationMain/NeiTest
    radius [REAL] [0.2]
        Valid Values: Unconstrained

    rho_ambient [REAL] [2.e-16]
        Valid Values: Unconstrained

    t_ambient [REAL] [1.e4]
        Valid Values: Unconstrained

    t_perturb [REAL] [0.2]
        Valid Values: Unconstrained

    vel_init [REAL] [3.e5]
        Valid Values: Unconstrained

    xstep [REAL] [1.5e7]
        Valid Values: Unconstrained


Simulation/SimulationMain/Orbit
    ext_field [BOOLEAN] [TRUE]
        external field (TRUE) or self-grav (FALSE)?
    num_particles [INTEGER] [2]
        Valid Values: Unconstrained

    ptmass [REAL] [1.]
        Valid Values: Unconstrained
        point mass if external field
    separation [REAL] [1.]
        Valid Values: Unconstrained
        particle separation (2*radius)

Simulation/SimulationMain/Pancake
    MaxParticlePerZone [INTEGER] [10]
        Valid Values: Unconstrained

    Tfiducial [REAL] [100.0]
        Valid Values: Unconstrained

    lambda [REAL] [3.0857E24]
        Valid Values: Unconstrained

    pt_numX [INTEGER] [1]
        Valid Values: Unconstrained

    pt_numY [INTEGER] [1]
        Valid Values: Unconstrained

    pt_numZ [INTEGER] [1]
        Valid Values: Unconstrained

    xangle [REAL] [0.0]
        Valid Values: Unconstrained

    yangle [REAL] [90.0]
        Valid Values: Unconstrained

    zcaustic [REAL] [1.0]
        Valid Values: Unconstrained

    zfiducial [REAL] [100.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/Plasma
    pt_resetTag [BOOLEAN] [TRUE]

    sim_bx [REAL] [0.0]
        Valid Values: Unconstrained
        Initial magnetic field x-component [T]
    sim_by [REAL] [0.0]
        Valid Values: Unconstrained
        Initial magnetic field y-component [T]
    sim_bz [REAL] [0.0]
        Valid Values: Unconstrained
        Initial magnetic field z-component [T]

Simulation/SimulationMain/PoisTest
    sim_smlRho [REAL] [1.E-10]
        Valid Values: Unconstrained
        smallest allowed value of density

Simulation/SimulationMain/PreHeatPlug
    eos_LEHEosType [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"

    eos_WashEosType [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"

    eos_chamEosType [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"

    eos_gasEosType [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"

    eos_targEosType [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"

    sim_eosCham [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"
        chamber EOS type
    sim_eosGas [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"

    sim_eosLEH [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"

    sim_eosTarg [STRING] ["eos_tab"]
        Valid Values: "eos_tab", "eos_gam"
        chamber EOS type
    sim_eosWash [STRING] ["eos_gam"]
        Valid Values: "eos_tab", "eos_gam"

    sim_gasRadius [REAL] [0.0270]
        Valid Values: Unconstrained

    sim_initGeom [STRING] ["slab"]
        Valid Values: "slab", "sphere"
        Use a spherical target if sphere, default to slab
    sim_plugThickness [REAL] [0.01]
        Valid Values: Unconstrained

    sim_rhoCham [REAL] [2.655e-07]
        Valid Values: Unconstrained
        Initial chamber density
    sim_rhoGas [REAL] [2.655e-07]
        Valid Values: Unconstrained

    sim_rhoLEH [REAL] [1.03]
        Valid Values: Unconstrained

    sim_rhoTarg [REAL] [2.7]
        Valid Values: Unconstrained
        Initial target density
    sim_rhoWash [REAL] [1.03]
        Valid Values: Unconstrained

    sim_targetHeight [REAL] [0.0250]
        Valid Values: Unconstrained
        The height of the target off y-axis
    sim_targetRadius [REAL] [0.0050]
        Valid Values: Unconstrained
        The radius to use for the target
    sim_targetThickness [REAL] [0.003]
        Valid Values: Unconstrained

    sim_teleCham [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial chamber electron temperature
    sim_teleGas [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_teleLEH [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_teleTarg [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial target electron temperature
    sim_teleWash [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_tionCham [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial chamber ion temperature
    sim_tionGas [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_tionLEH [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_tionTarg [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial target ion temperature
    sim_tionWash [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_tradCham [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial chamber radiation temperature
    sim_tradGas [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_tradLEH [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_tradTarg [REAL] [290.11375]
        Valid Values: Unconstrained
        Initial target radiation temperature
    sim_tradWash [REAL] [290.11375]
        Valid Values: Unconstrained

    sim_vacuumHeight [REAL] [0.0200]
        Valid Values: Unconstrained
        The thickness of the vacuum region in front of the target
    sim_washRadius [REAL] [0.15]
        Valid Values: Unconstrained

    sim_washThickness [REAL] [0.05]
        Valid Values: Unconstrained

    sim_windowsRadius [REAL] [0.01]
        Valid Values: Unconstrained

    sim_windowsThickness [REAL] [0.0003]
        Valid Values: Unconstrained

    sim_zminTarg [REAL] [0.0]
        Valid Values: Unconstrained
        target minimum zbar allowed

Simulation/SimulationMain/ProtonImaging
    sim_printBlockVariables [BOOLEAN] [false]
        Print what is in each block on each processor?

Simulation/SimulationMain/RD_TEST1_gam
    ExpEner [REAL] [1.0]
        Valid Values: Unconstrained

    bombRad [REAL] [1.0]
        Valid Values: Unconstrained

    bombRadIn [REAL] [1.0]
        Valid Values: Unconstrained

    coremass [REAL] [1.0]
        Valid Values: Unconstrained

    ener_exp [REAL] [1.0]
        Valid Values: Unconstrained

    gconst [REAL] [0.0]
        Valid Values: Unconstrained
        Gravitational constant, should be G*M(rmin)/rmin**2
    gdirec [STRING] ["x"]
        Valid Values: Unconstrained

    hole_radius [REAL] [1.0]
        Valid Values: Unconstrained

    mass_loss [REAL] [0.0]
        Valid Values: Unconstrained

    model_file [STRING] ["file.dat"]
        Valid Values: Unconstrained
        Name of input file with 1D model
    nsub [INTEGER] [4]
        Valid Values: Unconstrained

    paircond [BOOLEAN] [TRUE]

    point_mass [REAL] [0.0]
        Valid Values: Unconstrained

    r_exp_max [REAL] [0.0]
        Valid Values: Unconstrained

    r_exp_min [REAL] [0.0]
        Valid Values: Unconstrained

    r_s [REAL] [0.0]
        Valid Values: Unconstrained

    rho_s [REAL] [0.0]
        Valid Values: Unconstrained

    rho_vac [REAL] [0.0]
        Valid Values: Unconstrained

    rinner [REAL] [1.0]
        Valid Values: Unconstrained

    router [REAL] [1.0]
        Valid Values: Unconstrained

    rt_s [REAL] [0.0]
        Valid Values: Unconstrained
        Same as r_s, but for temperature instead of density.
    shellcond [BOOLEAN] [TRUE]

    shelldens [REAL] [1.0]
        Valid Values: Unconstrained

    shelltempfac [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tele [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tion [REAL] [1.0]
        Valid Values: Unconstrained

    sim_trad [REAL] [1.0]
        Valid Values: Unconstrained

    staticGpot [BOOLEAN] [FALSE]
        Flag for whether or not to fix the gpot in time
    steep [REAL] [0.0]
        Valid Values: Unconstrained

    t_s [REAL] [0.0]
        Valid Values: Unconstrained

    t_vac [REAL] [0.0]
        Valid Values: Unconstrained

    use_PnotT [BOOLEAN] [FALSE]

    vel_mult [REAL] [1.0]
        Valid Values: Unconstrained

    vel_wind [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/RHD_Sod
    sim_pLeft [REAL] [1.]
        Valid Values: Unconstrained
        Pressure  in the left part of the grid
    sim_pRight [REAL] [0.1]
        Valid Values: Unconstrained
        Pressure  in the righ part of the grid
    sim_posn [REAL] [0.5]
        Valid Values: Unconstrained

    sim_rhoLeft [REAL] [1.]
        Valid Values: Unconstrained
        Density in the left part of the grid
    sim_rhoRight [REAL] [0.125]
        Valid Values: Unconstrained
        Density in the right part of the grid
    sim_uLeft [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the left part of the grid
    sim_uRight [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the right part of the grid
    sim_vLeft [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the left part of the grid
    sim_vRight [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the right part of the grid
    sim_wLeft [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the left part of the grid
    sim_wRight [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the right part of the grid
    sim_xangle [REAL] [0.]
        Valid Values: Unconstrained
        Angle made by diaphragm normal w/x-axis (deg)
    sim_yangle [REAL] [90.]
        Valid Values: Unconstrained


Simulation/SimulationMain/RTFlame
    dens_unburned [REAL] [1e8]
        Valid Values: Unconstrained

    flame_initial_position [REAL] [0.0]
        Valid Values: Unconstrained

    particle_attribute_1 [STRING] ["dens"]
        Valid Values: Unconstrained

    particle_attribute_2 [STRING] ["temp"]
        Valid Values: Unconstrained

    particle_attribute_4 [STRING] ["flam"]
        Valid Values: Unconstrained

    refine_buf [REAL] [1e5]
        Valid Values: Unconstrained
        Buffer to prevent refinement pattern jitter
    refine_lead [REAL] [2e5]
        Valid Values: Unconstrained
        Distance above highest burned cell which refined region will reach
    refine_region_size [REAL] [60e5]
        Valid Values: Unconstrained
        Total size of refine region (See source for diagram of parameter
        meanings)
    refine_region_stepdown_size [REAL] [45e5]
        Valid Values: Unconstrained
        Distance behind fully refined region that is one lower refinement level
    refine_uniform_region [BOOLEAN] [FALSE]
        Select whether to refine a selected region uniformly or use
        standard-style refinement checks (configured with other parameters)
    sim_ParticleRefineRegion [BOOLEAN] [FALSE]

    sim_ParticleRefineRegionBottom [REAL] [60e5]
        Valid Values: Unconstrained

    sim_ParticleRefineRegionLevel [INTEGER] [2]
        Valid Values: Unconstrained

    sim_ParticleRefineRegionTop [REAL] [200e5]
        Valid Values: Unconstrained

    spert_ampl1 [REAL] [0.0]
        Valid Values: Unconstrained

    spert_ampl2 [REAL] [0.0]
        Valid Values: Unconstrained

    spert_phase1 [REAL] [0.0]
        Valid Values: Unconstrained

    spert_phase2 [REAL] [0.0]
        Valid Values: Unconstrained

    spert_wl1 [REAL] [1.0]
        Valid Values: Unconstrained

    spert_wl2 [REAL] [1.0]
        Valid Values: Unconstrained

    temp_unburned [REAL] [1e8]
        Valid Values: Unconstrained

    vel_pert_amp [REAL] [0.0]
        Valid Values: Unconstrained

    vel_pert_wavelength1 [REAL] [1.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/ReinickeMeyer
    sim_rfInit [REAL] [0.9]
        Valid Values: Unconstrained
        Initial thermal front position [cm]

Simulation/SimulationMain/SBlast
    sim_A1 [REAL] [1.]
        Valid Values: 1 to INFTY
        Atomic weight in region 2
    sim_A2 [REAL] [1.]
        Valid Values: 1 to INFTY

    sim_AIn [REAL] [1.]
        Valid Values: 1 to INFTY
        Atomic weight inside the energy source
    sim_EIn [REAL] [1.]
        Valid Values: 0 to INFTY
        Total energy inside the energy source
    sim_Z1 [REAL] [1.]
        Valid Values: 1 to INFTY
        Atomic number in region 1
    sim_Z2 [REAL] [1.]
        Valid Values: 1 to INFTY
        Atomic number in region 2
    sim_ZIn [REAL] [1.]
        Valid Values: 1 to INFTY
        Atomic number inside the energy source
    sim_atmos1 [INTEGER] [0]
        Valid Values: Unconstrained

    sim_atmos2 [INTEGER] [0]
        Valid Values: Unconstrained

    sim_gamma1 [REAL] [1.4]
        Valid Values: 1.1 to INFTY
        gamma in region 1
    sim_gamma2 [REAL] [1.4]
        Valid Values: 1.1 to INFTY
        gamma in region 2
    sim_gammaIn [REAL] [1.4]
        Valid Values: 1.1 to INFTY
        gamma inside the energy source
    sim_geo [INTEGER] [0]
        Valid Values: Unconstrained
        specifies the geometry of the problem, not the geometry of the grid
    sim_h1 [REAL] [1.]
        Valid Values: Unconstrained
        Thickness of region 1
    sim_ibound [BOOLEAN] [FALSE]
        Bounday/Discontinuity present?
    sim_p1 [REAL] [1.]
        Valid Values: 0 to INFTY
        Pressure in region 2
    sim_p2 [REAL] [1.]
        Valid Values: 0 to INFTY

    sim_pIn [REAL] [1.]
        Valid Values: 0 to INFTY
        Pressure inside the energy source
    sim_rIn [REAL] [0.1]
        Valid Values: 0 to INFTY
        radius of the energy source
    sim_rho1 [REAL] [1.]
        Valid Values: 0 to INFTY
        Density in region 2
    sim_rho2 [REAL] [1.]
        Valid Values: 0 to INFTY

    sim_rhoIn [REAL] [1.]
        Valid Values: 0 to INFTY
        Density inside the energy source
    sim_sh1 [REAL] [1.]
        Valid Values: Unconstrained
        Scale height in region 2
    sim_sh2 [REAL] [1.]
        Valid Values: Unconstrained

    sim_useE [BOOLEAN] [FALSE]
        Use total energy to define energy source
    sim_xcIn [REAL] [0.]
        Valid Values: Unconstrained
        x location of the center of the energy source
    sim_ycIn [REAL] [0.]
        Valid Values: Unconstrained
        y location of the center of the energy source
    sim_zcIn [REAL] [0.]
        Valid Values: Unconstrained
        z location of the center of the energy source

Simulation/SimulationMain/Sedov
    sim_expEnergy [REAL] [1.]
        Valid Values: Unconstrained
        Explosion energy (distributed over 2^dimen central zones)
    sim_nsubzones [INTEGER] [7]
        Valid Values: Unconstrained
        Number of `sub-zones' in cells for applying 1d profile
    sim_pAmbient [REAL] [1.E-5]
        Valid Values: Unconstrained
        Initial ambient pressure
    sim_rInit [REAL] [0.05]
        Valid Values: Unconstrained
        Radial position of inner edge of grid (for 1D)
    sim_rhoAmbient [REAL] [1.]
        Valid Values: Unconstrained
        Initial ambient density
    sim_xctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates

Simulation/SimulationMain/Sedov/WriteParticleSubset
    sim_expEnergy [REAL] [1.]
        Valid Values: Unconstrained
        Explosion energy (distributed over 2^dimen central zones)
    sim_nsubzones [INTEGER] [7]
        Valid Values: Unconstrained
        Number of `sub-zones' in cells for applying 1d profile
    sim_pAmbient [REAL] [1.E-5]
        Valid Values: Unconstrained
        Initial ambient pressure
    sim_rInit [REAL] [0.05]
        Valid Values: Unconstrained
        Radial position of inner edge of grid (for 1D)
    sim_rhoAmbient [REAL] [1.]
        Valid Values: Unconstrained
        Initial ambient density
    sim_xctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates

Simulation/SimulationMain/SedovChamber
    sim_expEnergy [REAL] [1.]
        Valid Values: Unconstrained
        Explosion energy (distributed over 2^dimen central zones)
    sim_nsubzones [INTEGER] [7]
        Valid Values: Unconstrained
        Number of `sub-zones' in cells for applying 1d profile
    sim_pAmbient [REAL] [1.E-5]
        Valid Values: Unconstrained
        Initial ambient pressure
    sim_rInit [REAL] [0.05]
        Valid Values: Unconstrained
        Radial position of inner edge of grid (for 1D)
    sim_rhoAmbient [REAL] [1.]
        Valid Values: Unconstrained
        Initial ambient density
    sim_xctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates

Simulation/SimulationMain/SedovChamber/WriteParticleSubset
    sim_expEnergy [REAL] [1.]
        Valid Values: Unconstrained
        Explosion energy (distributed over 2^dimen central zones)
    sim_nsubzones [INTEGER] [7]
        Valid Values: Unconstrained
        Number of `sub-zones' in cells for applying 1d profile
    sim_pAmbient [REAL] [1.E-5]
        Valid Values: Unconstrained
        Initial ambient pressure
    sim_rInit [REAL] [0.05]
        Valid Values: Unconstrained
        Radial position of inner edge of grid (for 1D)
    sim_rhoAmbient [REAL] [1.]
        Valid Values: Unconstrained
        Initial ambient density
    sim_xctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates

Simulation/SimulationMain/SedovSelfGravity
    exp_energy [REAL] [1.]
        Valid Values: Unconstrained
        Explosion energy (distributed over 2^dimen central zones)
    p_ambient [REAL] [1.E-5]
        Valid Values: Unconstrained
        Initial ambient pressure
    r_init [REAL] [0.05]
        Valid Values: Unconstrained
        Radial position of the inner edge of the grid
    rho_ambient [REAL] [1.]
        Valid Values: Unconstrained
        Initial ambient density
    sim_nsubzones [INTEGER] [7]
        Valid Values: Unconstrained
        Number of `sub-zones' to break cells into for applying 1d profile
    t_init [REAL] [0.]
        Valid Values: Unconstrained
        Initial time since explosion

Simulation/SimulationMain/SedovSolidWall
    sim_expEnergy [REAL] [1.]
        Valid Values: Unconstrained
        Explosion energy (distributed over 2^dimen central zones)
    sim_nsubzones [INTEGER] [7]
        Valid Values: Unconstrained
        Number of `sub-zones' in cells for applying 1d profile
    sim_pAmbient [REAL] [1.E-5]
        Valid Values: Unconstrained
        Initial ambient pressure
    sim_rInit [REAL] [0.05]
        Valid Values: Unconstrained
        Radial position of inner edge of grid (for 1D)
    sim_rhoAmbient [REAL] [1.]
        Valid Values: Unconstrained
        Initial ambient density
    sim_xctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates
    sim_zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Explosion center coordinates

Simulation/SimulationMain/ShafranovShock
    diff_scaleFactThermFlux [REAL] [0.0]
        Valid Values: Unconstrained
        Factor applied to the temperature differences (or internal energy
        differences) that are added to flux arrays by the flux-based thermal
        Diffusion implementation.
    gamma [REAL] [1.6667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for gas - for initialization
    sim_DataPoints [INTEGER] [448]
        Valid Values: Unconstrained
        Number of data points in sim_InitData file
    sim_InitData [STRING] ["plasma_shock.out"]
        Valid Values: Unconstrained
        Name of the file containing input data
    sim_ShockSpeed [REAL] [1.048805969E+06]
        Valid Values: Unconstrained
        Shock Speed
    sim_abar [REAL] [1.0]
        Valid Values: Unconstrained
        Fluid atomic number
    sim_maxTol [REAL] [2.0E-2]
        Valid Values: Unconstrained
        Max allowed error ( < 2% error)
    sim_zbar [REAL] [1.0]
        Valid Values: Unconstrained
        Fluid average ionization

Simulation/SimulationMain/ShuOsher
    sim_aRho [REAL] [0.2]
        Valid Values: Unconstrained
        Amplitude of the density perturbation
    sim_fRho [REAL] [5.0]
        Valid Values: Unconstrained
        Frequency of the density perturbation
    sim_nsubint [INTEGER] [100]
        Valid Values: Unconstrained
        Number of subintervals to average over to get cell-averages.
    sim_pLeft [REAL] [10.33333]
        Valid Values: Unconstrained
        Pressure in left part of grid
    sim_pRight [REAL] [1.0]
        Valid Values: Unconstrained
        Pressure in right part of grid
    sim_posn [REAL] [-4.0]
        Valid Values: Unconstrained
        Point of intersection between the shock plane and the x-axis
    sim_rhoLeft [REAL] [3.857143]
        Valid Values: Unconstrained
        Density in left part of grid
    sim_rhoRight [REAL] [1.0]
        Valid Values: Unconstrained
        Density in right part of grid
    sim_uLeft [REAL] [2.629369]
        Valid Values: Unconstrained
        Fluid velocity in right part of grid
    sim_uRight [REAL] [0.]
        Valid Values: Unconstrained
        Fluid velocity in right part of grid

Simulation/SimulationMain/SinkRotatingCloudCore
    bb_cs [REAL] [1.66e4]
        Valid Values: Unconstrained

    bb_dens [REAL] [3.82e-18]
        Valid Values: Unconstrained

    bb_omega [REAL] [7.2e-13]
        Valid Values: Unconstrained

    bb_radius [REAL] [5.0e16]
        Valid Values: Unconstrained

    refine_var_thresh [STRING] ["none"]
        Valid Values: Unconstrained


Simulation/SimulationMain/Sod
    gamma [REAL] [1.6666666666666667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for gas - for initialization
    gammaIon [REAL] [1.6666666666666667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for ion component, should be 5./3.
    sim_abarLeft [REAL] [1.]
        Valid Values: 0 to INFTY
        ion mean molecular weight of material on left
    sim_abarRight [REAL] [1.]
        Valid Values: 0 to INFTY
        ion mean molecular weight of material on right
    sim_pLeft [REAL] [1.]
        Valid Values: 0 to INFTY
        Pressure  in the left part of the grid
    sim_pRight [REAL] [0.1]
        Valid Values: 0 to INFTY
        Pressure  in the righ part of the grid
    sim_peleLeft [REAL] [-1.0]
        Valid Values: Unconstrained

    sim_peleRight [REAL] [-1.0]
        Valid Values: Unconstrained

    sim_pionLeft [REAL] [-1.0]
        Valid Values: Unconstrained

    sim_pionRight [REAL] [-1.0]
        Valid Values: Unconstrained

    sim_posn [REAL] [0.5]
        Valid Values: Unconstrained

    sim_pradLeft [REAL] [-1.0]
        Valid Values: Unconstrained

    sim_pradRight [REAL] [-1.0]
        Valid Values: Unconstrained

    sim_rhoLeft [REAL] [1.]
        Valid Values: 0 to INFTY
        Density in the left part of the grid
    sim_rhoRight [REAL] [0.125]
        Valid Values: 0 to INFTY
        Density in the right part of the grid
    sim_uLeft [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the left part of the grid
    sim_uRight [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the right part of the grid
    sim_xangle [REAL] [0.]
        Valid Values: 0 to 360
        Angle made by diaphragm normal w/x-axis (deg)
    sim_yangle [REAL] [90.]
        Valid Values: 0 to 360

    sim_zbarLeft [REAL] [1.]
        Valid Values: 0 to INFTY
        ion average charge for material on left
    sim_zbarRight [REAL] [1.]
        Valid Values: 0 to INFTY
        ion average charge for material on right

Simulation/SimulationMain/SodSpherical
    sim_idir [INTEGER] [1]
        Valid Values: 1, 2
        the direction along which to propagate the shock.  sim_idir = 1 is
        horizontal.  sim_idir = 2 is vertical.
    sim_pLeft [REAL] [1.]
        Valid Values: Unconstrained
        initial pressure on the left side of the interface
    sim_pRight [REAL] [0.1]
        Valid Values: Unconstrained
        initial pressure on the right side of the interface
    sim_rhoLeft [REAL] [1.]
        Valid Values: Unconstrained
        initial density left of the interface
    sim_rhoRight [REAL] [0.125]
        Valid Values: Unconstrained
        initial density right of interface
    sim_shockpos [REAL] [0.4]
        Valid Values: Unconstrained
        distance of the shock plane from y-axis (for sim_idir=1) or x-axis (for
        sim_idir=2)

Simulation/SimulationMain/SodStep
    gr_pmrpNboundaries [INTEGER] CONSTANT [6]
        Valid Values: Unconstrained
        sets value for PARAMESH runtime parameter nboundaries
    nblockx [INTEGER] [4]
        Valid Values: Unconstrained
        num initial blocks in x dir
    nblocky [INTEGER] [4]
        Valid Values: Unconstrained
        num initial blocks in y dir
    nblockz [INTEGER] [1]
        Valid Values: Unconstrained
        num initial blocks in z dir
    sim_pLeft [REAL] [1.]
        Valid Values: 0 to INFTY
        Pressure  in the left part of the grid
    sim_pRight [REAL] [0.1]
        Valid Values: 0 to INFTY
        Pressure  in the righ part of the grid
    sim_posn [REAL] [0.5]
        Valid Values: Unconstrained

    sim_rhoLeft [REAL] [1.]
        Valid Values: 0 to INFTY
        Density in the left part of the grid
    sim_rhoRight [REAL] [0.125]
        Valid Values: 0 to INFTY
        Density in the right part of the grid
    sim_stepInDomain [BOOLEAN] [false]
        -- whether there is a missing block in the initial domain
    sim_uLeft [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the left part of the grid
    sim_uRight [REAL] [0.]
        Valid Values: Unconstrained
        fluid velocity in the right part of the grid
    sim_xangle [REAL] [0.]
        Valid Values: 0 to 360
        Angle made by diaphragm normal w/x-axis (deg)
    sim_yangle [REAL] [90.]
        Valid Values: 0 to 360


Simulation/SimulationMain/StirFromFile
    MagField_z [REAL] [1.e0]
        Valid Values: Unconstrained
        magnitude of constant B-field in z
    c_ambient [REAL] [1.e0]
        Valid Values: Unconstrained
        reference sound speed
    magnetic [BOOLEAN] [FALSE]
        using magnetic field in z direction
    rho_ambient [REAL] [1.e0]
        Valid Values: Unconstrained
        reference density

Simulation/SimulationMain/StirTurb
    c_ambient [REAL] [1.e0]
        Valid Values: Unconstrained
        reference sound speed
    mach [REAL] [0.3]
        Valid Values: Unconstrained
        reference mach number
    rho_ambient [REAL] [1.e0]
        Valid Values: Unconstrained
        reference density

Simulation/SimulationMain/WindTunnel
    gr_pmrpNboundaries [INTEGER] [16]
        Valid Values: 16 to INFTY
        sets value for PARAMESH runtime parameter nboundaries
    sim_pAmbient [REAL] [1.0]
        Valid Values: Unconstrained

    sim_rhoAmbient [REAL] [1.4]
        Valid Values: Unconstrained

    sim_windVel [REAL] [3.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/incompFlow/TaylorGreenVortex
    uconv [REAL] [0.0]
        Valid Values: Unconstrained

    vconv [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/magnetoHD/BeerCan
    Az_initial [REAL] [0.001]
        Valid Values: Unconstrained
        Strength of initial z-component of magnetic vector potential
    R_fieldLoop [REAL] [0.3]
        Valid Values: Unconstrained
        Radius of field loop
    U_initial [REAL] [2.23606796749979]
        Valid Values: Unconstrained
        Strength of initial vector fields
    delta [REAL] [1.0]
        Valid Values: Unconstrained

    r0 [REAL] [1.0]
        Valid Values: Unconstrained

    r1 [REAL] [1.0]
        Valid Values: Unconstrained

    rx [REAL] [1.]
        Valid Values: Unconstrained
        Field loop advection angle = atan(rx/ry)
    ry [REAL] [2.]
        Valid Values: Unconstrained

    sim_b [REAL] [1.0]
        Valid Values: Unconstrained

    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        Threshold value used for numerical zero
    velz_initial [REAL] [0.0]
        Valid Values: Unconstrained

    xCtr [REAL] [1.]
        Valid Values: Unconstrained
        x center of the computational domain
    yCtr [REAL] [0.5]
        Valid Values: Unconstrained
        y center of the computational domain
    z0 [REAL] [1.0]
        Valid Values: Unconstrained

    zCtr [REAL] [0.0]
        Valid Values: Unconstrained
        z center of the computatoinal domain

Simulation/SimulationMain/magnetoHD/BlastBS
    Bx0 [REAL] [100.]
        Valid Values: Unconstrained
        Initial magnitude of Bx
    Radius [REAL] [0.1]
        Valid Values: Unconstrained
        Radius
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        Threshold value used for numerical zero
    xCtr [REAL] [0.]
        Valid Values: Unconstrained
        x center of the computational domain
    yCtr [REAL] [0.]
        Valid Values: Unconstrained
        y center of the computational domain
    zCtr [REAL] [0.]
        Valid Values: Unconstrained
        z center of the computatoinal domain

Simulation/SimulationMain/magnetoHD/BrioWu
    b_normal [REAL] [0.75]
        Valid Values: Unconstrained
        Magnetic field normal component
    by_left [REAL] [1.]
        Valid Values: Unconstrained

    by_right [REAL] [-1.]
        Valid Values: Unconstrained

    bz_left [REAL] [0.]
        Valid Values: Unconstrained

    bz_right [REAL] [0.]
        Valid Values: Unconstrained

    p_left [REAL] [1.]
        Valid Values: Unconstrained

    p_right [REAL] [0.1]
        Valid Values: Unconstrained

    posn [REAL] [0.5]
        Valid Values: Unconstrained
        Point of intersection between the shock plane and the x-axis
    rho_left [REAL] [1.]
        Valid Values: Unconstrained

    rho_right [REAL] [0.125]
        Valid Values: Unconstrained

    rx [REAL] [0.]
        Valid Values: Unconstrained

    ry [REAL] [1.]
        Valid Values: Unconstrained

    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        Threshold value used for numerical zero
    u_left [REAL] [0.]
        Valid Values: Unconstrained

    u_right [REAL] [0.]
        Valid Values: Unconstrained

    v_left [REAL] [0.]
        Valid Values: Unconstrained

    v_right [REAL] [0.]
        Valid Values: Unconstrained

    w_left [REAL] [0.]
        Valid Values: Unconstrained

    w_right [REAL] [0.]
        Valid Values: Unconstrained

    xangle [REAL] [0.]
        Valid Values: Unconstrained
        Angle made by diaphragm normal w/x-axis (deg)
    xmax [REAL] [1.]
        Valid Values: Unconstrained

    xmin [REAL] [0.]
        Valid Values: Unconstrained

    yangle [REAL] [90.]
        Valid Values: Unconstrained
        Angle made by diaphragm normal w/y-axis (deg)
    ymax [REAL] [1.]
        Valid Values: Unconstrained

    ymin [REAL] [0.]
        Valid Values: Unconstrained


Simulation/SimulationMain/magnetoHD/CurrentSheet
    B0 [REAL] [1.0]
        Valid Values: Unconstrained
        Magnitude of By
    U0 [REAL] [0.1]
        Valid Values: Unconstrained
        Amplitude of U (x-velocity)
    beta [REAL] [0.2]
        Valid Values: Unconstrained
        Initial beta plasma
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        Threshold value used for a numerical zero

Simulation/SimulationMain/magnetoHD/FieldLoop
    Az_initial [REAL] [0.001]
        Valid Values: Unconstrained
        Strength of initial z-component of magnetic vector potential
    R_fieldLoop [REAL] [0.3]
        Valid Values: Unconstrained
        Radius of field loop
    U_initial [REAL] [2.23606796749979]
        Valid Values: Unconstrained
        Strength of initial vector fields
    rx [REAL] [1.]
        Valid Values: Unconstrained
        Field loop advection angle = atan(rx/ry)
    ry [REAL] [2.]
        Valid Values: Unconstrained

    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        Threshold value used for numerical zero
    velz_initial [REAL] [0.0]
        Valid Values: Unconstrained

    xCtr [REAL] [1.]
        Valid Values: Unconstrained
        x center of the computational domain
    yCtr [REAL] [0.5]
        Valid Values: Unconstrained
        y center of the computational domain
    zCtr [REAL] [0.0]
        Valid Values: Unconstrained
        z center of the computatoinal domain

Simulation/SimulationMain/magnetoHD/MagneticDoughnut
    Az_initial [REAL] [0.001]
        Valid Values: Unconstrained
        Strength of initial z-component of magnetic vector potential
    R_fieldLoop [REAL] [0.3]
        Valid Values: Unconstrained
        Radius of field loop
    U_initial [REAL] [2.23606796749979]
        Valid Values: Unconstrained
        Strength of initial vector fields
    delta [REAL] [1.0]
        Valid Values: Unconstrained

    r0 [REAL] [1.0]
        Valid Values: Unconstrained

    r1 [REAL] [1.0]
        Valid Values: Unconstrained

    rx [REAL] [1.]
        Valid Values: Unconstrained
        Field loop advection angle = atan(rx/ry)
    ry [REAL] [2.]
        Valid Values: Unconstrained

    sim_b [REAL] [1.0]
        Valid Values: Unconstrained

    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        Threshold value used for numerical zero
    velz_initial [REAL] [0.0]
        Valid Values: Unconstrained

    xCtr [REAL] [1.]
        Valid Values: Unconstrained
        x center of the computational domain
    yCtr [REAL] [0.5]
        Valid Values: Unconstrained
        y center of the computational domain
    z0 [REAL] [1.0]
        Valid Values: Unconstrained

    zCtr [REAL] [0.0]
        Valid Values: Unconstrained
        z center of the computatoinal domain

Simulation/SimulationMain/magnetoHD/Noh
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained

    unit_density [REAL] [1.e-5]
        Valid Values: Unconstrained

    unit_length [REAL] [1.0]
        Valid Values: Unconstrained

    unit_velocity [REAL] [1.e7]
        Valid Values: Unconstrained


Simulation/SimulationMain/magnetoHD/NohCylindrical
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained

    unit_density [REAL] [1.e-5]
        Valid Values: Unconstrained

    unit_length [REAL] [1.0]
        Valid Values: Unconstrained

    unit_velocity [REAL] [1.e7]
        Valid Values: Unconstrained


Simulation/SimulationMain/magnetoHD/OrszagTang
    perturbation [REAL] [0.2]
        Valid Values: Unconstrained

    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        Threshold value used for numerical zero

Simulation/SimulationMain/magnetoHD/Rotor
    Radius [REAL] [0.115]
        Valid Values: Unconstrained
        Radius
    perturbZ [REAL] [0.2]
        Valid Values: Unconstrained
        small perturbation of velocity fields in z-direciton
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        Threshold value used for numerical zero
    xCtr [REAL] [0.]
        Valid Values: Unconstrained
        x center of the computational domain
    yCtr [REAL] [0.]
        Valid Values: Unconstrained
        y center of the computational domain
    zCtr [REAL] [0.]
        Valid Values: Unconstrained
        z center of the computatoinal domain

Simulation/SimulationMain/magnetoHD/Torus
    BETA [REAL] [350.]
        Valid Values: Unconstrained
        Plasma beta
    D_Con [REAL] [1.e-4]
        Valid Values: Unconstrained
        Density contrast between atmosphere and Torus
    R_0 [REAL] [1.0]
        Valid Values: Unconstrained
        "Gravitational" radius in P-W potential (for R_0 = 0 -> Newton)
    R_Sphere [REAL] [1.5]
        Valid Values: Unconstrained
        Radius of the sink region, must be greater than R_0
    R_max [REAL] [4.7]
        Valid Values: Unconstrained
        Radius of the Torus where pressure is maximum
    R_min [REAL] [3.0]
        Valid Values: Unconstrained
        Minimum cylindrical radius for the Torus (inner rim)
    T_Con [REAL] [100.0]
        Valid Values: Unconstrained
        Temperature contrast between atmosphere and Torus
    den_cut [REAL] [5.0]
        Valid Values: Unconstrained
        Minimum density to define the last contour of the magnetic vec. pot.
    den_max [REAL] [10.0]
        Valid Values: Unconstrained
        Maximum density of the torus (outer rim)
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained


Simulation/SimulationMain/magnetoHD/unitTest/NohCylindricalRagelike
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained

    unit_density [REAL] [1.e-5]
        Valid Values: Unconstrained

    unit_length [REAL] [1.0]
        Valid Values: Unconstrained

    unit_velocity [REAL] [1.e7]
        Valid Values: Unconstrained


Simulation/SimulationMain/radflaHD/BondiAccretion
    ExpEner [REAL] [1.0]
        Valid Values: Unconstrained

    bombRad [REAL] [1.0]
        Valid Values: Unconstrained

    bombRadIn [REAL] [1.0]
        Valid Values: Unconstrained

    coremass [REAL] [1.0]
        Valid Values: Unconstrained

    ener_exp [REAL] [1.0]
        Valid Values: Unconstrained

    gconst [REAL] [0.0]
        Valid Values: Unconstrained
        Gravitational constant, should be G*M(rmin)/rmin**2
    gdirec [STRING] ["x"]
        Valid Values: Unconstrained

    hole_radius [REAL] [1.0]
        Valid Values: Unconstrained

    mass_loss [REAL] [0.0]
        Valid Values: Unconstrained

    model_file [STRING] ["file.dat"]
        Valid Values: Unconstrained
        Name of input file with 1D model
    nsub [INTEGER] [4]
        Valid Values: Unconstrained

    paircond [BOOLEAN] [TRUE]

    point_mass [REAL] [0.0]
        Valid Values: Unconstrained

    r_exp_max [REAL] [0.0]
        Valid Values: Unconstrained

    r_exp_min [REAL] [0.0]
        Valid Values: Unconstrained

    r_s [REAL] [0.0]
        Valid Values: Unconstrained

    rho_s [REAL] [0.0]
        Valid Values: Unconstrained

    rho_vac [REAL] [0.0]
        Valid Values: Unconstrained

    rinner [REAL] [1.0]
        Valid Values: Unconstrained

    router [REAL] [1.0]
        Valid Values: Unconstrained

    rt_s [REAL] [0.0]
        Valid Values: Unconstrained
        Same as r_s, but for temperature instead of density.
    shellcond [BOOLEAN] [TRUE]

    shelldens [REAL] [1.0]
        Valid Values: Unconstrained

    shelltempfac [REAL] [1.0]
        Valid Values: Unconstrained

    sim_TradInitScaleFactor [REAL] [1.0]
        Valid Values: Unconstrained
        scale initial radiation temperature value by this factor.
    sim_accretionRate [REAL] [1.0]
        Valid Values: Unconstrained
        Desired acrretion rate that will be used for the boundary conditions
    sim_initializeAnalytic [BOOLEAN] [TRUE]
        Initialize Hydro variables (density, velocity) to the analytical
        solution?
    sim_plotScaledPressures [BOOLEAN] [FALSE]
        indicates whether Eo_wrapped should be called before variables are
        output to plot files and checkpoints, with the appropriate mode to make
        sure that radiation pressure, and related variables like pres, gamc, and
        game, are scaled down by a flux limiter factor (3*lambda).
    sim_tele [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tion [REAL] [1.0]
        Valid Values: Unconstrained

    sim_trad [REAL] [1.0]
        Valid Values: Unconstrained

    staticGpot [BOOLEAN] [FALSE]
        Flag for whether or not to fix the gpot in time
    steep [REAL] [0.0]
        Valid Values: Unconstrained

    t_s [REAL] [0.0]
        Valid Values: Unconstrained

    t_vac [REAL] [0.0]
        Valid Values: Unconstrained

    use_PnotT [BOOLEAN] [FALSE]

    vel_mult [REAL] [1.0]
        Valid Values: Unconstrained

    vel_wind [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/radflaHD/CriticalRadShock
    sim_M0 [REAL] [1.0]
        Valid Values: Unconstrained
        shock mach number
    sim_P0 [REAL] [1.0]
        Valid Values: Unconstrained
        ratio of radiation pressure to material pressure
    sim_rho [REAL] [1.0]
        Valid Values: Unconstrained
        reference density
    sim_tgas [REAL] [1.0]
        Valid Values: Unconstrained
        gas temperature
    sim_trad [REAL] [1.0]
        Valid Values: Unconstrained
        radiation temperature
    sim_velx [REAL] [1.0]
        Valid Values: Unconstrained
        speed of gas

Simulation/SimulationMain/radflaHD/EnergyXchange
    sim_rho [REAL] [1.0]
        Valid Values: Unconstrained
        Initial radiation temperature
    sim_tele [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tion [REAL] [1.0]
        Valid Values: Unconstrained

    sim_trad [REAL] [1.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/radflaHD/RadBlastWave
    ExpEner [REAL] [1.0]
        Valid Values: Unconstrained

    bombRad [REAL] [1.0]
        Valid Values: Unconstrained

    bombRadIn [REAL] [1.0]
        Valid Values: Unconstrained

    coremass [REAL] [1.0]
        Valid Values: Unconstrained

    ener_exp [REAL] [1.0]
        Valid Values: Unconstrained

    gconst [REAL] [0.0]
        Valid Values: Unconstrained
        Gravitational constant, should be G*M(rmin)/rmin**2
    gdirec [STRING] ["x"]
        Valid Values: Unconstrained

    hole_radius [REAL] [1.0]
        Valid Values: Unconstrained

    mass_loss [REAL] [0.0]
        Valid Values: Unconstrained

    model_file [STRING] ["file.dat"]
        Valid Values: Unconstrained
        Name of input file with 1D model
    nsub [INTEGER] [4]
        Valid Values: Unconstrained

    paircond [BOOLEAN] [TRUE]

    point_mass [REAL] [0.0]
        Valid Values: Unconstrained

    r_exp_max [REAL] [0.0]
        Valid Values: Unconstrained

    r_exp_min [REAL] [0.0]
        Valid Values: Unconstrained

    r_s [REAL] [0.0]
        Valid Values: Unconstrained

    rho_s [REAL] [0.0]
        Valid Values: Unconstrained

    rho_vac [REAL] [0.0]
        Valid Values: Unconstrained

    rinner [REAL] [1.0]
        Valid Values: Unconstrained

    router [REAL] [1.0]
        Valid Values: Unconstrained

    shellcond [BOOLEAN] [TRUE]

    shelldens [REAL] [1.0]
        Valid Values: Unconstrained

    shelltempfac [REAL] [1.0]
        Valid Values: Unconstrained

    sim_plotScaledPressures [BOOLEAN] [FALSE]
        indicates whether Eo_wrapped should be called before variables are
        output to plot files and checkpoints, with the appropriate mode to make
        sure that radiation pressure, and related variables like pres, gamc, and
        game, are scaled down by a flux limiter factor (3*lambda).
    sim_tele [REAL] [1.0]
        Valid Values: Unconstrained

    sim_tion [REAL] [1.0]
        Valid Values: Unconstrained

    sim_trad [REAL] [1.0]
        Valid Values: Unconstrained

    staticGpot [BOOLEAN] [FALSE]
        Flag for whether or not to fix the gpot in time
    steep [REAL] [0.0]
        Valid Values: Unconstrained

    t_s [REAL] [0.0]
        Valid Values: Unconstrained

    t_vac [REAL] [0.0]
        Valid Values: Unconstrained

    use_PnotT [BOOLEAN] [FALSE]

    vel_mult [REAL] [1.0]
        Valid Values: Unconstrained

    vel_wind [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/Cosmology
    eintSwitch [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/Eos
    eosMode [STRING] ["dens_temp"]
        Valid Values: Unconstrained
        The Mode for applying Eos
    sim_densMax [REAL] [1.e8]
        Valid Values: Unconstrained
        Initial distribution of density, maximum.  Even distribution between
        logarithm of min/max.
    sim_densMin [REAL] [1.e-2]
        Valid Values: Unconstrained
        Initial distribution of density, minimum.  Even distribution between
        logarithm of min/max.
    sim_initialMass [INTEGER] [-1]
        Valid Values: -1 to INFTY
        Distribution of initial mass.  -1 to put gradient in SPEC(1) and
        SPEC(NSPECIES) 0 to divide evenly throughout SPECIES i to put all mass
        on SPECIES i
    sim_presMax [REAL] [1.e7]
        Valid Values: Unconstrained
        Initial distribution of pressure, maximum.  Even distribution between
        logarithm of min/max
    sim_presMin [REAL] [1.e-2]
        Valid Values: Unconstrained
        Initial distribution of pressure, minimum.  Even distribution between
        logarithm of min/max
    sim_tempMax [REAL] [1.e9]
        Valid Values: Unconstrained
        Initial distribution of temperature, maximum.  Even distribution between
        logarithm of min/max
    sim_tempMin [REAL] [1.e5]
        Valid Values: Unconstrained
        Initial distribution of temperature, minimum.  Even distribution between
        logarithm of min/max
    sim_xnMax [REAL] [1.0]
        Valid Values: Unconstrained
        Initial distribution of a single species, maximum.  Even distribution
        between logarithm of min/max
    sim_xnMin [REAL] [1.e-10]
        Valid Values: Unconstrained
        Initial distribution of a single species, minimum.  Even distribution
        between logarithm of min/max
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature

Simulation/SimulationMain/unitTest/Eos/timeEosUnitTest
    num_eos_calls [INTEGER] [30000]
        Valid Values: 1 to INFTY


Simulation/SimulationMain/unitTest/Gravity/BHTree
    abar_1 [REAL] [2.0]
        Valid Values: Unconstrained

    abar_2 [REAL] [0.5]
        Valid Values: Unconstrained

    gamma_1 [REAL] [1.0001]
        Valid Values: Unconstrained

    gamma_2 [REAL] [1.0001]
        Valid Values: Unconstrained

    jeans_deref [REAL] [64.0]
        Valid Values: Unconstrained
        Jeans derefinement criterion. Gives number of cells accross the Jeans
        length to derefine.
    jeans_ref [REAL] [32.0]
        Valid Values: Unconstrained
        Jeans refinement criterion. Gives number of cells accross the Jeans
        length to refine.
    sim_nSubZones [INTEGER] [2]
        Valid Values: Unconstrained

    sim_pertType [INTEGER] [0]
        Valid Values: Unconstrained

    sim_pertamp [REAL] [0.0]
        Valid Values: Unconstrained

    sim_radprof_file [STRING] ["be1sm+1+4-xi10"]
        Valid Values: Unconstrained

    sim_solutionErrorTolerance1 [REAL] [5.e-3]
        Valid Values: 0 to INFTY
        the maximum relative deviation of the computed from the analytical
        potential for which the test shall be considered a success. This
        tolerance is applied immediately after the potential is computed
        numerically for the first time.
    sim_solutionErrorTolerance2 [REAL] [5.e-3]
        Valid Values: 0 to INFTY
        the maximum relative deviation of the computed from the analytical
        potential for which the test shall be considered a success. This
        tolerance is applied after each time evolution step (if the test is
        configured to do time steps, by choice of the 'nend' runtime parameter
        etc.).
    sim_spharm_l1 [INTEGER] [0]
        Valid Values: Unconstrained

    sim_spharm_m1 [INTEGER] [0]
        Valid Values: Unconstrained

    sim_velamp [REAL] [0.0]
        Valid Values: Unconstrained

    sim_vx [REAL] [0.0]
        Valid Values: Unconstrained

    sim_vy [REAL] [0.0]
        Valid Values: Unconstrained

    sim_vz [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xCenter [REAL] [0.0]
        Valid Values: Unconstrained

    sim_yCenter [REAL] [0.0]
        Valid Values: Unconstrained

    sim_zCenter [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/Gravity/BHTree-cylinder
    abar_1 [REAL] [2.3]
        Valid Values: Unconstrained

    abar_2 [REAL] [0.6]
        Valid Values: Unconstrained

    gamma_1 [REAL] [1.0001]
        Valid Values: Unconstrained

    gamma_2 [REAL] [1.0001]
        Valid Values: Unconstrained

    sim_dens_c [REAL] [1.6605387e-24]
        Valid Values: Unconstrained
        Density inside cylinder
    sim_press_a [REAL] [6.853383244768104e-16]
        Valid Values: Unconstrained
        Pressure outside the cylinder
    sim_solutionErrorTolerance1 [REAL] [1.e-3]
        Valid Values: 0 to INFTY

    sim_solutionErrorTolerance2 [REAL] [1.e-3]
        Valid Values: 0 to INFTY

    sim_temp_a [REAL] [100.0]
        Valid Values: Unconstrained
        Temperature outside cylinder
    sim_temp_c [REAL] [10.0]
        Valid Values: Unconstrained
        Temperature inside cylinder

Simulation/SimulationMain/unitTest/Gravity/BHTree-jeans
    abar_1 [REAL] [1.0]
        Valid Values: Unconstrained

    gamma_1 [REAL] [1.0001]
        Valid Values: Unconstrained

    sim_T0 [REAL] [1.0e4]
        Valid Values: Unconstrained

    sim_delta [REAL] [0.1]
        Valid Values: Unconstrained

    sim_hx [REAL] [3.0]
        Valid Values: Unconstrained

    sim_hy [REAL] [0.0]
        Valid Values: Unconstrained

    sim_hz [REAL] [0.0]
        Valid Values: Unconstrained

    sim_rho0 [REAL] [1.6605387e-24]
        Valid Values: Unconstrained

    sim_solutionErrorTolerance1 [REAL] [1.e-3]
        Valid Values: 0 to INFTY
        the maximum relative deviation of the computed from the analytical
        potential for which the test shall be considered a success. This
        tolerance is applied immediately after the potential is computed
        numerically for the first time.
    sim_solutionErrorTolerance2 [REAL] [1.e-3]
        Valid Values: 0 to INFTY
        the maximum relative deviation of the computed from the analytical
        potential for which the test shall be considered a success. This
        tolerance is applied after each time evolution step (if the test is
        configured to do time steps, by choice of the 'nend' runtime parameter
        etc.).

Simulation/SimulationMain/unitTest/Gravity/BHTree-layer
    abar_1 [REAL] [1.0]
        Valid Values: Unconstrained

    gamma_1 [REAL] [1.0001]
        Valid Values: Unconstrained

    sim_dir [INTEGER] [3]
        Valid Values: Unconstrained

    sim_prof_file [STRING] ["layer_prof"]
        Valid Values: Unconstrained

    sim_solutionErrorTolerance1 [REAL] [1.e-3]
        Valid Values: 0 to INFTY
        the maximum relative deviation of the computed from the analytical
        potential for which the test shall be considered a success. This
        tolerance is applied immediately after the potential is computed
        numerically for the first time.
    sim_solutionErrorTolerance2 [REAL] [1.e-3]
        Valid Values: 0 to INFTY
        the maximum relative deviation of the computed from the analytical
        potential for which the test shall be considered a success. This
        tolerance is applied after each time evolution step (if the test is
        configured to do time steps, by choice of the 'nend' runtime parameter
        etc.).
    sim_zMidplane [REAL] [0.0]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/Gravity/Poisson
    sim_subSample [INTEGER] [7]
        Valid Values: 1 to 12
        Reflects the subsampling philosophy of Multipole.  See
        physics/Grid/GridSolvers/Multipole/Config/mpole_subSample

Simulation/SimulationMain/unitTest/Gravity/Poisson3
    angular_velocity [REAL] [0.]
        Valid Values: Unconstrained
        Dimensionless angular velocity (Omega)
    density [REAL] [1.]
        Valid Values: -1.0 to INFTY
        Spheroid density (rho): set to -1 to generate spheroid mass of 1.0
    eccentricity [REAL] [0.]
        Valid Values: 0.0 to 1.0
        Eccentricity of the ellipsoid (e)
    equatorial_semimajor_axis [REAL] [1.]
        Valid Values: 0.0 to INFTY
        Equatorial semimajor axis (a1)
    nsubzones [INTEGER] [2]
        Valid Values: 1 to INFTY
        Number of sub-zones per dimension
    pass_tolerance [REAL] [0.015]
        Valid Values: 0.00000000000001 to 1.0
        Allowed error for testing.  0.015 = 1.5 percent error
    xctr [REAL] [0.5]
        Valid Values: Unconstrained
        X-coordinate of center of spheroid
    yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Y-coordinate of center of spheroid
    zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Z-coordinate of center of spheroid

Simulation/SimulationMain/unitTest/Gravity/Poisson3/timeMultipole
    num_poisson_solves [INTEGER] [100]
        Valid Values: 1 to INFTY


Simulation/SimulationMain/unitTest/Gravity/Poisson3_active
    angular_velocity [REAL] [0.]
        Valid Values: Unconstrained
        Dimensionless angular velocity (Omega)
    density [REAL] [1.]
        Valid Values: -1.0 to INFTY
        Spheroid density (rho): set to -1 to generate spheroid mass of 1.0
    eccentricity [REAL] [0.]
        Valid Values: 0.0 to 1.0
        Eccentricity of the ellipsoid (e)
    equatorial_semimajor_axis [REAL] [1.]
        Valid Values: 0.0 to INFTY
        Equatorial semimajor axis (a1)
    nsubzones [INTEGER] [2]
        Valid Values: 1 to INFTY
        Number of sub-zones per dimension
    pass_tolerance [REAL] [0.015]
        Valid Values: 0.00000000000001 to 1.0
        Allowed error for testing.  0.015 = 1.5 percent error
    xctr [REAL] [0.5]
        Valid Values: Unconstrained
        X-coordinate of center of spheroid
    yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Y-coordinate of center of spheroid
    zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Z-coordinate of center of spheroid

Simulation/SimulationMain/unitTest/IO/IOMeshReplication
    totalSharedVars [INTEGER] [12]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/Laser_quadraticTube/Ring
    sim_printBlockVariables [BOOLEAN] [false]
        Print what is in each block on each processor?

Simulation/SimulationMain/unitTest/Laser_quadraticTube/RingCubicPath
    sim_printBlockVariables [BOOLEAN] [false]
        Print what is in each block on each processor?
    sim_totalNumberOfBoxes [INTEGER] [10000]
        Valid Values: Unconstrained
        The overall number of boxes to hold the results.

Simulation/SimulationMain/unitTest/Laser_quadraticTube/RingExpPotential
    sim_alpha [INTEGER] [2]
        Valid Values: Unconstrained

    sim_exitPowerFraction [REAL] [0.5]
        Valid Values: Unconstrained
        The fraction of initial ray power that should remain on exit.
    sim_printBlockVariables [BOOLEAN] [false]
        Print what is in each block on each processor?
    sim_totalNumberOfBoxes [INTEGER] [10000]
        Valid Values: Unconstrained
        The overall number of boxes to hold the results.

Simulation/SimulationMain/unitTest/Laser_quadraticTube/testI
    sim_lasersOrientation [STRING] [" "]
        Valid Values: Unconstrained
        The orientation of the lasers
    sim_printBlockVariables [BOOLEAN] [false]
        Print what is in each block on each processor?

Simulation/SimulationMain/unitTest/Laser_quadraticTube/testII
    sim_printBlockVariables [BOOLEAN] [false]
        Print what is in each block on each processor?

Simulation/SimulationMain/unitTest/Multipole
    density [REAL] [1.]
        Valid Values: -1.0 to INFTY
        Spheroid density (rho): set to -1 to generate spheroid mass of 1.0
    eccentricity [REAL] [0.]
        Valid Values: 0.0 to 1.0
        Eccentricity of the ellipsoid (e)
    equatorialSemimajorAxis [REAL] [1.]
        Valid Values: 0.0 to INFTY
        Equatorial semimajor axis (a1)
    nsubzones [INTEGER] [2]
        Valid Values: 1 to INFTY
        Number of sub-zones per dimension
    passTolerance [REAL] [0.015]
        Valid Values: 0.00000000000001 to 1.0
        Allowed error for testing.  0.015 = 1.5 percent error
    xctr [REAL] [0.5]
        Valid Values: Unconstrained
        X-coordinate of center of spheroid
    yctr [REAL] [0.5]
        Valid Values: Unconstrained
        Y-coordinate of center of spheroid
    zctr [REAL] [0.5]
        Valid Values: Unconstrained
        Z-coordinate of center of spheroid

Simulation/SimulationMain/unitTest/PFFT_BlktriFD
    alpha_x [REAL] [0.]
        Valid Values: Unconstrained

    waven_x [REAL] [1.]
        Valid Values: Unconstrained

    waven_y [REAL] [1.]
        Valid Values: Unconstrained

    waven_z [REAL] [1.]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/PFFT_XYperZneuFD
    alpha_x [REAL] [0.3141592653589793]
        Valid Values: Unconstrained

    alpha_y [REAL] [0.3141592653589793]
        Valid Values: Unconstrained

    waven_x [REAL] [1.]
        Valid Values: Unconstrained

    waven_y [REAL] [1.]
        Valid Values: Unconstrained

    waven_z [REAL] [1.]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/ParticlesAdvance
    sim_maxTolCoeff0 [REAL] [1.0e-8]
        Valid Values: Unconstrained

    sim_maxTolCoeff1 [REAL] [0.0001]
        Valid Values: Unconstrained

    sim_maxTolCoeff2 [REAL] [0.01]
        Valid Values: Unconstrained

    sim_maxTolCoeff3 [REAL] [0.0]
        Valid Values: Unconstrained

    sim_schemeOrder [INTEGER] [2]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/ParticlesAdvance/HomologousPassive
    sim_a0 [REAL] [1.0]
        Valid Values: Unconstrained
        constant component of velocity field factor a(t)
    sim_a1 [REAL] [0.1]
        Valid Values: Unconstrained
        varying part of velocity field factor a(t)
    sim_analyticParticlePositions [BOOLEAN] [FALSE]

    sim_fakeMapMeshToParticles [BOOLEAN] [TRUE]

    sim_p_amb [REAL] [8.e5]
        Valid Values: Unconstrained
        Gas Pressure: Entire domain receives this ambient parameter
    sim_rho_amb [REAL] [0.95e-3]
        Valid Values: Unconstrained
        Gas Density:  Entire domain receives this ambient parameter
    sim_seed [REAL] [1.0]
        Valid Values: Unconstrained
        Random number seed -- NOT USED please ignore
    sim_vx_amb [REAL] [0.5]
        Valid Values: Unconstrained
        Gas x-velocity:  Dominant flow velocity throughout domain
    sim_vx_multiplier [REAL] [1.0]
        Valid Values: Unconstrained
        Half of the domain in y has x-velocity multiplied by this value
    sim_vx_pert [REAL] [0.1]
        Valid Values: Unconstrained
        Scales [-1,1] random number in x direction: set to zero for uniform flow
    sim_vy_pert [REAL] [0.1]
        Valid Values: Unconstrained
        Scales [-1,1] random number in y direction: set to zero for uniform flow
    sim_vz_pert [REAL] [0.1]
        Valid Values: Unconstrained
        Scales [-1,1] random number in z direction: set to zero for uniform flow

Simulation/SimulationMain/unitTest/ParticlesRefine
    sim_densityThreshold [REAL] [0.85]
        Valid Values: Unconstrained
        the level of density in any cell above which the particles are used to
        simulate the mass in the domain. This formulation is used only to test
        refinement based on particles.
    sim_minBlks [INTEGER] [40]
        Valid Values: Unconstrained
        parameter to ensure that refinement is taking place
    sim_ptMass [REAL] [0.005]
        Valid Values: Unconstrained
        mass of one particles when replacing some mass in the domain with active
        particles to test refinement based on particles count
    sim_smlRho [REAL] [1.e-10]
        Valid Values: Unconstrained
        the smallest allowed value of density so that we don't have overflow in
        calculations.

Simulation/SimulationMain/unitTest/Pipeline
    sim_channelSize [INTEGER] [50]
        Valid Values: Unconstrained
        The pipeline channel size to be used
    sim_itemSize [INTEGER] [10]
        Valid Values: Unconstrained
        The number of elements in each item
    sim_lowestNumItemsOnProc [INTEGER] [100]
        Valid Values: Unconstrained
        The lowest number of items to reach a processor
    sim_maxItemsPipeline [INTEGER] [100]
        Valid Values: Unconstrained
        The maximum number of items that the pipeline can handle

Simulation/SimulationMain/unitTest/Poisson/BiCG/MgMCPfft
    alpha_x [REAL] [0.3141592653589793]
        Valid Values: Unconstrained

    alpha_y [REAL] [0.3141592653589793]
        Valid Values: Unconstrained

    waven_x [REAL] [1.]
        Valid Values: Unconstrained

    waven_y [REAL] [1.]
        Valid Values: Unconstrained

    waven_z [REAL] [1.]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/Poisson/MgMC
    alpha_x [REAL] [0.3141592653589793]
        Valid Values: Unconstrained

    alpha_y [REAL] [0.3141592653589793]
        Valid Values: Unconstrained

    waven_x [REAL] [1.]
        Valid Values: Unconstrained

    waven_y [REAL] [1.]
        Valid Values: Unconstrained

    waven_z [REAL] [1.]
        Valid Values: Unconstrained


Simulation/SimulationMain/unitTest/ProtonImaging/CircleDeflection
    sim_clockwiseB [BOOLEAN] [false]
        Should B point clockwise (inward force) from each radial position?
    sim_magneticFluxDensity [REAL] [0.0]
        Valid Values: Unconstrained
        The value of the magnetic flux density B
    sim_printBlockVariables [BOOLEAN] [false]
        Print what is in each block on each processor?
    sim_xCenter [REAL] [0.5]
        Valid Values: Unconstrained
        The x-coordinate of the center location
    sim_zCenter [REAL] [0.5]
        Valid Values: Unconstrained
        The z-coordinate of the center location

Simulation/SimulationMain/unitTest/ProtonImaging/Validation1
    sim_clockwiseB [BOOLEAN] [false]
        Should B point clockwise (inward force) from each radial position?
    sim_magneticFluxDensity [REAL] [0.0]
        Valid Values: Unconstrained
        The value of the magnetic flux density B
    sim_printBlockVariables [BOOLEAN] [false]
        Print what is in each block on each processor?
    sim_xCenter [REAL] [0.5]
        Valid Values: Unconstrained
        The x-coordinate of the center location
    sim_zCenter [REAL] [0.5]
        Valid Values: Unconstrained
        The z-coordinate of the center location

Simulation/SimulationMain/unitTest/Roots/x3Polynomials
    sim_printInfo [BOOLEAN] [false]
        Should details about solving each polynomial be printed

Simulation/SimulationMain/unitTest/Roots/x4Polynomials
    sim_printInfo [BOOLEAN] [false]
        Should details about solving each polynomial be printed

Simulation/SimulationMain/unitTest/RungeKutta/2Dellipse
    sim_RungeKuttaMethod [STRING] ["CashKarp45"]
        Valid Values: Unconstrained
        The method for the Runge Kutta stepper
    sim_ellipseAspectRatio [REAL] [2.0]
        Valid Values: Unconstrained
        The ellipse aspect ratio (major:minor axis)
    sim_errorFraction [REAL] [1.0e-8]
        Valid Values: Unconstrained
        The error fraction for the dependent variables
    sim_numberOfEllipses [INTEGER] [1]
        Valid Values: Unconstrained
        The number of ellipses the particle has to sweep
    sim_stepSize [REAL] [0.1]
        Valid Values: Unconstrained
        The step size
    sim_x0 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial x position of the particle
    sim_y0 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial y position of the particle

Simulation/SimulationMain/unitTest/RungeKutta/3Dcircle
    sim_RungeKuttaMethod [STRING] ["Fehlberg45"]
        Valid Values: Unconstrained
        The method for the Runge Kutta stepper
    sim_errorFraction [REAL] [1.0e-8]
        Valid Values: Unconstrained
        The error fraction for the dependent variables
    sim_numberOfCircles [INTEGER] [1]
        Valid Values: Unconstrained
        The number of circles the particle has to sweep
    sim_numberOfRungeKuttaSteps [INTEGER] [10]
        Valid Values: Unconstrained
        The number of Runge Kutta steps to be performed
    sim_rx0 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial x position of the particle
    sim_ry0 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial y position of the particle
    sim_rz0 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial z position of the particle
    sim_speed [REAL] [1.0]
        Valid Values: Unconstrained
        The speed of the particle
    sim_stepSize [REAL] [0.1]
        Valid Values: Unconstrained
        The step size

Simulation/SimulationMain/unitTest/SinkMomTest
    refine_var_thresh [STRING] ["none"]
        Valid Values: Unconstrained

    sim_cs [REAL] [1.0]
        Valid Values: Unconstrained

    sim_dens [REAL] [1.0]
        Valid Values: Unconstrained

    sim_massTol [REAL] [1.e20]
        Valid Values: Unconstrained

    sim_momXTol [REAL] [1.e32]
        Valid Values: Unconstrained

    sim_momYTol [REAL] [1.e32]
        Valid Values: Unconstrained

    sim_momZTol [REAL] [1.e32]
        Valid Values: Unconstrained

    sim_radius [REAL] [1.0]
        Valid Values: Unconstrained

    sim_sink_mass [REAL] [0.0]
        Valid Values: Unconstrained

    sim_sink_vx [REAL] [0.0]
        Valid Values: Unconstrained

    sim_sink_vy [REAL] [0.0]
        Valid Values: Unconstrained

    sim_sink_vz [REAL] [0.0]
        Valid Values: Unconstrained

    sim_sink_x [REAL] [0.0]
        Valid Values: Unconstrained

    sim_sink_y [REAL] [0.0]
        Valid Values: Unconstrained

    sim_sink_z [REAL] [0.0]
        Valid Values: Unconstrained

    sim_vx [REAL] [0.0]
        Valid Values: Unconstrained

    sim_vy [REAL] [0.0]
        Valid Values: Unconstrained

    sim_vz [REAL] [0.0]
        Valid Values: Unconstrained

    sim_xcenter [REAL] [0.0]
        Valid Values: Unconstrained

    sim_ycenter [REAL] [0.0]
        Valid Values: Unconstrained

    sim_zcenter [REAL] [0.0]
        Valid Values: Unconstrained


diagnostics/ProtonEmission
    useProtonEmission [BOOLEAN] CONSTANT [FALSE]
        flag indicating whether to use the ProtonEmission unit

diagnostics/ProtonImaging
    useProtonImaging [BOOLEAN] CONSTANT [FALSE]
        flag indicating whether to use the ProtonImaging unit

diagnostics/ProtonImaging/ProtonImagingMain
    pi_3Din2D [BOOLEAN] [false]
        Use the 3D protons in a 2D cylindrical grid proton tracing?
    pi_3Din2DwedgeAngle [REAL] [0.0]
        Valid Values: Unconstrained
        Wedge angle (degrees, must be < 180) for 3D in 2D simulations
    pi_IOaddDetectorScreens [BOOLEAN] [false]
        If true, the frame of the detector screen(s) will be added to the plot
    pi_IOaddProtonsCapsule2Domain [BOOLEAN] [false]
        If true, the proton path from capsule to domain will be added to the
        plot
    pi_IOaddProtonsDomain2Screen [BOOLEAN] [false]
        If true, the proton path from domain to screen will be added to the plot
    pi_IOmaxBlockCrossingNumber [INTEGER] [5]
        Valid Values: Unconstrained
        The (estimated) maximum number of complete block crossings for each
        proton
    pi_IOnumberOfProtons2Plot [INTEGER] [0]
        Valid Values: Unconstrained
        Number of IO protons that are to be plotted
    pi_RungeKuttaMethod [STRING] ["CashKarp45"]
        Valid Values: Unconstrained
        The Runge Kutta method to be used for proton tracing.
    pi_beamApertureAngle_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Aperture angle (conical opening, in degrees) of beam 1
    pi_beamCapsuleGrainLevel_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The grain level of capsule for beam 1
    pi_beamCapsuleRadius_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of spherical capsule for beam 1
    pi_beamCapsuleX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the capsule center for beam 1
    pi_beamCapsuleY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the capsule center for beam 1
    pi_beamCapsuleZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the capsule center for beam 1
    pi_beamDetector_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The target detector of the beam 1
    pi_beamNoBoundaryCondition_1 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 1
    pi_beamNumberOfProtons_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of protons in the beam 1
    pi_beamProtonEnergy_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The energy of the protons in the beam (in MeV) 1
    pi_beamTargetRadius_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of target area for beam 1
    pi_beamTargetX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target (direction) for beam 1
    pi_beamTargetY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target (direction) for beam 1
    pi_beamTargetZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target (direction) for beam 1
    pi_beamTime2Launch_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The simulation time at which the beam should launch its protons 1
    pi_cellStepTolerance [REAL] [1.0e-06]
        Valid Values: Unconstrained
        The allowed cell fractional error (units = cell edge) for a proton path
        step
    pi_cellWallThicknessFactor [REAL] [1.0e-06]
        Valid Values: Unconstrained
        Fraction of the shortest cell edge defining the cell wall thickness
    pi_detectorAlignWRTbeamNr_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Place detector screen along beam nr? If <= 0, no placing 1
    pi_detectorCenterX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the square detector center 1
    pi_detectorCenterY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the square detector center 1
    pi_detectorCenterZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the square detector center 1
    pi_detectorDGwriteFormat [STRING] ["es15.5"]
        Valid Values: Unconstrained
        Format string for writing out diagnostic variables to detector file(s)
    pi_detectorDist2BeamCapsule_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Distance from beam capsule center (if detector placed along beam) 1
    pi_detectorFileNameTimeStamp [BOOLEAN] [true]
        If true, a time stamp is added to each detector file name
    pi_detectorNormalX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the square detector normal vector 1
    pi_detectorNormalY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the square detector normal vector 1
    pi_detectorNormalZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the square detector normal vector 1
    pi_detectorPinholeDist2Det_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The pinhole center distance from the detector center 1
    pi_detectorPinholeRadius_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The pinhole radius 1
    pi_detectorSideLength_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The side length of the square detector 1
    pi_detectorSideTiltingAngle_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Side tilting angle (degrees) from tilting axis 1
    pi_detectorSideTiltingAxis_1 [STRING] [" "]
        Valid Values: Unconstrained
        Global tilting axis to be used for side tilting 1
    pi_detectorXYwriteFormat [STRING] ["es20.10"]
        Valid Values: Unconstrained
        Format string for writing out proton (x,y) pairs to detector file(s)
    pi_flagDomainMissingProtons [BOOLEAN] [true]
        Should domain missing protons be flagged (program aborted)?
    pi_ignoreElectricalField [BOOLEAN] [true]
        If true, the effect of the electrical field is ignored (default).
    pi_maxProtonCount [INTEGER] [100000]
        Valid Values: Unconstrained
        Maximum number of protons per processor
    pi_numberOfBeams [INTEGER] [-1]
        Valid Values: Unconstrained
        Total number of proton beams
    pi_numberOfDetectors [INTEGER] [-1]
        Valid Values: Unconstrained
        Total number of proton detectors
    pi_opaqueBoundaries [BOOLEAN] [false]
        If true, the protons do not go through cells belonging to boundaries
    pi_printBeams [BOOLEAN] [false]
        Print details about each beam?
    pi_printDetectors [BOOLEAN] [false]
        Print details about each detector?
    pi_printMain [BOOLEAN] [false]
        Print details about the proton imaging run?
    pi_printProtons [BOOLEAN] [false]
        Print details about each proton initially generated?
    pi_protonDeterminism [BOOLEAN] [false]
        If true, the Grid Unit will use Sieve Algorithm to move the proton
        particle.
    pi_randomNumberSeedIncrement [INTEGER] [1]
        Valid Values: Unconstrained
        Sets the seed increment for the random number generator
    pi_randomNumberSeedInitial [INTEGER] [1]
        Valid Values: Unconstrained
        Sets the initial seeds for the random number generator
    pi_recalculateCellData [BOOLEAN] [false]
        If true, the proton imaging calculates its own cell data for each block
    pi_recordOffScreenProtons [BOOLEAN] [false]
        If true, the protons missing the detector screen will also be recorded.
    pi_screenProtonBucketSize [INTEGER] [100000]
        Valid Values: Unconstrained
        Bucket size for flushing out screen protons to disk.
    pi_screenProtonDiagnostics [BOOLEAN] [false]
        If true, calculates/records extra diagnostic values for the screen
        protons.
    pi_timeResolvedProtonImaging [BOOLEAN] [false]
        If true, time resolved proton imaging over many timesteps is invoked.
    pi_useIOprotonPlot [BOOLEAN] [false]
        This flag controls whether IO proton plotting should be used
    pi_useParabolicApproximation [BOOLEAN] [false]
        If true, the parabolic path approximation is used (enhanced
        performance).
    threadProtonTrace [BOOLEAN] [true]
        Use threading when tracing the protons through each block?
    useProtonImaging [BOOLEAN] [true]
        Use the proton imaging?

diagnostics/ProtonImaging/ProtonImagingMain/oldOneTimeStep
    pi_3Din2D [BOOLEAN] [false]
        Use the 3D protons in a 2D cylindrical grid proton tracing?
    pi_3Din2DwedgeAngle [REAL] [0.0]
        Valid Values: Unconstrained
        Wedge angle (degrees, must be < 180) for 3D in 2D simulations
    pi_IOaddBeamCapsules [BOOLEAN] [false]
        If true, the frame of the beam capsule(s) will be added to the plot
    pi_IOaddDetectorScreens [BOOLEAN] [false]
        If true, the frame of the detector screen(s) will be added to the plot
    pi_IOaddProtonsCapsule2Domain [BOOLEAN] [false]
        If true, the proton path from capsule to domain will be added to the
        plot
    pi_IOaddProtonsDomain2Screen [BOOLEAN] [false]
        If true, the proton path from domain to screen will be added to the plot
    pi_IOmaxBlockCrossingNumber [INTEGER] [5]
        Valid Values: Unconstrained
        The (estimated) maximum number of complete block crossings for each
        proton
    pi_IOnumberOfProtons2Plot [INTEGER] [0]
        Valid Values: Unconstrained
        Number of IO protons that are to be plotted
    pi_IOresolutionCapsuleFrame [REAL] [1.0e-02]
        Valid Values: Unconstrained
        The capsule frame resolution to plot the frame of the beam capsule(s)
    pi_IOresolutionScreenFrame [REAL] [1.0e-02]
        Valid Values: Unconstrained
        The screen frame resolution to plot the frame of the detector screen(s)
    pi_RungeKuttaMethod [STRING] ["CashKarp45"]
        Valid Values: Unconstrained
        The Runge Kutta method to be used for proton tracing.
    pi_beamApertureAngle_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Aperture angle (conical opening, in degrees) of beam 1
    pi_beamApertureAngle_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Aperture angle (conical opening, in degrees) of beam 2
    pi_beamApertureAngle_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Aperture angle (conical opening, in degrees) of beam 3
    pi_beamApertureAngle_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Aperture angle (conical opening, in degrees) of beam 4
    pi_beamApertureAngle_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Aperture angle (conical opening, in degrees) of beam 5
    pi_beamApertureAngle_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Aperture angle (conical opening, in degrees) of beam 6
    pi_beamCapsuleGrainLevel_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The grain level of capsule for beam 1
    pi_beamCapsuleGrainLevel_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The grain level of capsule for beam 2
    pi_beamCapsuleGrainLevel_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The grain level of capsule for beam 3
    pi_beamCapsuleGrainLevel_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The grain level of capsule for beam 4
    pi_beamCapsuleGrainLevel_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The grain level of capsule for beam 5
    pi_beamCapsuleGrainLevel_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The grain level of capsule for beam 6
    pi_beamCapsuleRadius_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of spherical capsule for beam 1
    pi_beamCapsuleRadius_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of spherical capsule for beam 2
    pi_beamCapsuleRadius_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of spherical capsule for beam 3
    pi_beamCapsuleRadius_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of spherical capsule for beam 4
    pi_beamCapsuleRadius_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of spherical capsule for beam 5
    pi_beamCapsuleRadius_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of spherical capsule for beam 6
    pi_beamCapsuleX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the capsule center for beam 1
    pi_beamCapsuleX_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the capsule center for beam 2
    pi_beamCapsuleX_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the capsule center for beam 3
    pi_beamCapsuleX_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the capsule center for beam 4
    pi_beamCapsuleX_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the capsule center for beam 5
    pi_beamCapsuleX_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the capsule center for beam 6
    pi_beamCapsuleY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the capsule center for beam 1
    pi_beamCapsuleY_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the capsule center for beam 2
    pi_beamCapsuleY_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the capsule center for beam 3
    pi_beamCapsuleY_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the capsule center for beam 4
    pi_beamCapsuleY_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the capsule center for beam 5
    pi_beamCapsuleY_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the capsule center for beam 6
    pi_beamCapsuleZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the capsule center for beam 1
    pi_beamCapsuleZ_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the capsule center for beam 2
    pi_beamCapsuleZ_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the capsule center for beam 3
    pi_beamCapsuleZ_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the capsule center for beam 4
    pi_beamCapsuleZ_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the capsule center for beam 5
    pi_beamCapsuleZ_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the capsule center for beam 6
    pi_beamDetector_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The target detector of the beam 1
    pi_beamDetector_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The target detector of the beam 2
    pi_beamDetector_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The target detector of the beam 3
    pi_beamDetector_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The target detector of the beam 4
    pi_beamDetector_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The target detector of the beam 5
    pi_beamDetector_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The target detector of the beam 6
    pi_beamNoBoundaryCondition_1 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 1
    pi_beamNoBoundaryCondition_2 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 2
    pi_beamNoBoundaryCondition_3 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 3
    pi_beamNoBoundaryCondition_4 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 4
    pi_beamNoBoundaryCondition_5 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 5
    pi_beamNoBoundaryCondition_6 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 6
    pi_beamNumberOfProtons_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of protons in the beam 1
    pi_beamNumberOfProtons_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of protons in the beam 2
    pi_beamNumberOfProtons_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of protons in the beam 3
    pi_beamNumberOfProtons_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of protons in the beam 4
    pi_beamNumberOfProtons_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of protons in the beam 5
    pi_beamNumberOfProtons_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of protons in the beam 6
    pi_beamProtonEnergy_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The energy of the protons in the beam (in MeV) 1
    pi_beamProtonEnergy_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The energy of the protons in the beam (in MeV) 2
    pi_beamProtonEnergy_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The energy of the protons in the beam (in MeV) 3
    pi_beamProtonEnergy_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The energy of the protons in the beam (in MeV) 4
    pi_beamProtonEnergy_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The energy of the protons in the beam (in MeV) 5
    pi_beamProtonEnergy_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The energy of the protons in the beam (in MeV) 6
    pi_beamTargetRadius_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of target area for beam 1
    pi_beamTargetRadius_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of target area for beam 2
    pi_beamTargetRadius_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of target area for beam 3
    pi_beamTargetRadius_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of target area for beam 4
    pi_beamTargetRadius_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of target area for beam 5
    pi_beamTargetRadius_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Radius of target area for beam 6
    pi_beamTargetX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target (direction) for beam 1
    pi_beamTargetX_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target (direction) for beam 2
    pi_beamTargetX_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target (direction) for beam 3
    pi_beamTargetX_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target (direction) for beam 4
    pi_beamTargetX_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target (direction) for beam 5
    pi_beamTargetX_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target (direction) for beam 6
    pi_beamTargetY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target (direction) for beam 1
    pi_beamTargetY_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target (direction) for beam 2
    pi_beamTargetY_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target (direction) for beam 3
    pi_beamTargetY_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target (direction) for beam 4
    pi_beamTargetY_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target (direction) for beam 5
    pi_beamTargetY_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target (direction) for beam 6
    pi_beamTargetZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target (direction) for beam 1
    pi_beamTargetZ_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target (direction) for beam 2
    pi_beamTargetZ_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target (direction) for beam 3
    pi_beamTargetZ_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target (direction) for beam 4
    pi_beamTargetZ_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target (direction) for beam 5
    pi_beamTargetZ_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target (direction) for beam 6
    pi_beamTime2Launch_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The simulation time at which the beam should launch its protons 1
    pi_beamTime2Launch_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The simulation time at which the beam should launch its protons 2
    pi_beamTime2Launch_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The simulation time at which the beam should launch its protons 3
    pi_beamTime2Launch_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The simulation time at which the beam should launch its protons 4
    pi_beamTime2Launch_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The simulation time at which the beam should launch its protons 5
    pi_beamTime2Launch_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The simulation time at which the beam should launch its protons 6
    pi_cellStepTolerance [REAL] [1.0e-06]
        Valid Values: Unconstrained
        The allowed cell fractional error (units = cell edge) for a proton path
        step
    pi_cellWallThicknessFactor [REAL] [1.0e-06]
        Valid Values: Unconstrained
        Fraction of the shortest cell edge defining the cell wall thickness
    pi_detectorAlignWRTbeamNr_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Place detector screen along beam nr? If <= 0, no placing 1
    pi_detectorCenterX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the square detector center 1
    pi_detectorCenterY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the square detector center 1
    pi_detectorCenterZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the square detector center 1
    pi_detectorDGwriteFormat [STRING] ["es15.5"]
        Valid Values: Unconstrained
        Format string for writing out diagnostic variables to detector file(s)
    pi_detectorDist2BeamCapsule_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Distance from beam capsule center (if detector placed along beam) 1
    pi_detectorFileNameTimeStamp [BOOLEAN] [true]
        If true, a time stamp is added to each detector file name
    pi_detectorNormalX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the square detector normal vector 1
    pi_detectorNormalY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the square detector normal vector 1
    pi_detectorNormalZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the square detector normal vector 1
    pi_detectorPinholeDist2Det_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The pinhole center distance from the detector center 1
    pi_detectorPinholeRadius_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The pinhole radius 1
    pi_detectorSideLength_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The side length of the square detector 1
    pi_detectorSideTiltingAngle_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Side tilting angle (degrees) from tilting axis 1
    pi_detectorSideTiltingAxis_1 [STRING] [" "]
        Valid Values: Unconstrained
        Global tilting axis to be used for side tilting 1
    pi_detectorXYwriteFormat [STRING] ["es20.10"]
        Valid Values: Unconstrained
        Format string for writing out proton (x,y) pairs to detector file(s)
    pi_flagDomainMissingProtons [BOOLEAN] [true]
        Should domain missing protons be flagged (program aborted)?
    pi_ignoreElectricalField [BOOLEAN] [true]
        If true, the effect of the electrical field is ignored (default).
    pi_maxProtonCount [INTEGER] [100000]
        Valid Values: Unconstrained
        Maximum number of protons per processor
    pi_numberOfBeams [INTEGER] [-1]
        Valid Values: Unconstrained
        Total number of proton beams
    pi_numberOfDetectors [INTEGER] [-1]
        Valid Values: Unconstrained
        Total number of proton detectors
    pi_opaqueBoundaries [BOOLEAN] [false]
        If true, the protons do not go through cells belonging to boundaries
    pi_printBeams [BOOLEAN] [false]
        Print details about each beam?
    pi_printDetectors [BOOLEAN] [false]
        Print details about each detector?
    pi_printMain [BOOLEAN] [false]
        Print details about the proton imaging run?
    pi_printProtons [BOOLEAN] [false]
        Print details about each proton initially generated?
    pi_protonDeterminism [BOOLEAN] [false]
        If true, the Grid Unit will use the Sieve Algorithm to move the proton
        particle.
    pi_randomNumberSeedIncrement [INTEGER] [1]
        Valid Values: Unconstrained
        Sets the seed increment for the random number generator
    pi_randomNumberSeedInitial [INTEGER] [1]
        Valid Values: Unconstrained
        Sets the initial seeds for the random number generator
    pi_recalculateCellData [BOOLEAN] [false]
        If true, the proton imaging calculates its own cell data for each block
    pi_recordOffScreenProtons [BOOLEAN] [false]
        If true, the protons missing the detector screen will also be recorded.
    pi_screenProtonBucketSize [INTEGER] [100000]
        Valid Values: Unconstrained
        Bucket size for flushing out screen protons to disk.
    pi_screenProtonDiagnostics [BOOLEAN] [false]
        If true, calculates/records extra diagnostic values for the screen
        protons.
    pi_useIOprotonPlot [BOOLEAN] [false]
        This flag controls whether IO proton plotting should be used
    pi_useParabolicApproximation [BOOLEAN] [false]
        If true, the parabolic path approximation is used (enhanced
        performance).
    threadProtonTrace [BOOLEAN] [true]
        Use threading when tracing the protons through each block?
    useProtonImaging [BOOLEAN] [true]
        Use the proton imaging?

diagnostics/ThomsonScattering
    useThomsonScattering [BOOLEAN] CONSTANT [FALSE]
        flag indicating whether to use the ThomsonScattering unit

monitors/Debugger/DebuggerMain
    doHeapCheck [BOOLEAN] [TRUE]


monitors/Logfile/LogfileMain
    log_file [STRING] ["flash.log"]
        Valid Values: Unconstrained
        Name of log file to create
    run_comment [STRING] ["FLASH 3 run"]
        Valid Values: Unconstrained
        Comment for run
    run_number [STRING] ["1"]
        Valid Values: Unconstrained
        Identification number for run

monitors/Profiler/ProfilerMain
    profileEvolutionOnly [BOOLEAN] [TRUE]


monitors/Timers/TimersMain/MPINative
    eachProcWritesSummary [BOOLEAN] [FALSE]
        Should each process write its summary to its own file?  If true, each
        process will write its summary to a file named timer_summary_<processor
        id>
    writeStatSummary [BOOLEAN] [TRUE]
        Should timers write the max/min/avg values for timers?

numericalTools/RungeKutta/RungeKuttaMain
    rk_stepSizeConfinementFactor [REAL] [0.5]
        Valid Values: 0.5 to 1.0
        Reduction factor for step size reduction for confined RK runs
    rk_stepSizeSafetyFactor [REAL] [0.9]
        Valid Values: 0.5 to 1.0
        The build in safety factor for new step size estimate

physics/Cosmology
    useCosmology [BOOLEAN] CONSTANT [FALSE]
        whether to use the Cosmology implementation or not

physics/Cosmology/CosmologyMain
    CosmologicalConstant [REAL] [0.7]
        Valid Values: Unconstrained
        Ratio of the mass density equivalent in the cosmological constant (or
        dark energy) to the closure density at the present epoch
    HubbleConstant [REAL] [2.1065E-18]
        Valid Values: Unconstrained
        Value of the Hubble constant (\dot{a}/a) in sec^-1 at the present epoch
    MaxScaleChange [REAL] [HUGE]
        Valid Values: Unconstrained
        Maximum permitted fractional change in the scale factor during each
        timestep
    OmegaBaryon [REAL] [0.05]
        Valid Values: Unconstrained
        Ratio of baryonic mass density to closure density at the present epoch
        (must be <= OmegaMatter!)
    OmegaMatter [REAL] [0.3]
        Valid Values: Unconstrained
        Ratio of total mass density to closure density at the present epoch
    OmegaRadiation [REAL] [5.E-5]
        Valid Values: Unconstrained
        Ratio of total radiation density to closure density at the present epoch
    computeRedshiftOnly [BOOLEAN] [FALSE]

    useCosmology [BOOLEAN] [TRUE]
        Are we using cosmological expansion?

physics/Cosmology/unitTest
    computeDtCorrect [REAL] [169450294720534.7]
        Valid Values: Unconstrained

    massToLengthCorrect [REAL] [4959457362.186973]
        Valid Values: Unconstrained

    redshiftToTimeCorrect [REAL] [1129631001610459.]
        Valid Values: Unconstrained

    solveFriedmannCorrect [REAL] [1.9608074571151239E-002]
        Valid Values: Unconstrained

    utDt [REAL] [10000000000.00000]
        Valid Values: Unconstrained

    utOldScaleFactor [REAL] [1.9607958853385455E-002]
        Valid Values: Unconstrained

    utScaleFactor [REAL] [1.9608074569174569E-002]
        Valid Values: Unconstrained

    utSimTime [REAL] [1129641001610459.]
        Valid Values: Unconstrained


physics/Diffuse
    useDiffuse [BOOLEAN] CONSTANT [FALSE]
        flags whether the Diffuse unit is being used at all
    useDiffuseComputeDtSpecies [BOOLEAN] [FALSE]
        flags whether Diffuse_computeDt considers species mass diffusion
    useDiffuseComputeDtTherm [BOOLEAN] [FALSE]
        flags whether Diffuse_computeDt considers thermal conduction
    useDiffuseComputeDtVisc [BOOLEAN] [FALSE]
        flags whether Diffuse_computeDt considers viscosity
    useDiffuseComputeDtmagnetic [BOOLEAN] [FALSE]


physics/Diffuse/DiffuseFluxBased
    diff_scaleFactThermFlux [REAL] [1.0]
        Valid Values: Unconstrained
        Factor applied to the temperature differences (or internal energy
        differences) that are added to flux arrays by the flux-based thermal
        Diffusion implementation.
    geometric_mean_diff [BOOLEAN] [FALSE]

    thermal_diff_method [INTEGER] [1]
        Valid Values: Unconstrained


physics/Diffuse/DiffuseMain
    diff_eleFlCoef [REAL] [1.0]
        Valid Values: Unconstrained
        Electron conduction flux limiter coefficient
    diff_eleFlMode [STRING] ["fl_none"]
        Valid Values: "fl_none", "fl_harmonic", "fl_minmax", "fl_larsen",
        "fl_levermorepomraning1981"
        Electron conduction flux limiter mode
    diff_eleXlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained
        Electron conduction bcTypes.
    diff_eleXrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_eleYlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_eleYrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_eleZlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_eleZrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_ionFlCoef [REAL] [1.0]
        Valid Values: Unconstrained
        Ion conduction flux limiter coefficient
    diff_ionFlMode [STRING] ["fl_none"]
        Valid Values: "fl_none", "fl_harmonic", "fl_minmax", "fl_larsen"
        Ion conduction flux limiter mode
    diff_ionXlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained
        Ion conduction bcTypes.
    diff_ionXrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_ionYlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_ionYrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_ionZlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_ionZrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_scaleFactThermSaTempDiff [REAL] [1.0]
        Valid Values: Unconstrained
        Factor applied to the temperature difference (or internal energy
        difference) that is computed by the standalone thermal Diffusion
        implementation.
    diff_scaleFactThermSaTime [REAL] [1.0]
        Valid Values: Unconstrained
        Factor applied to the time step for which the standalone thermal
        Diffusion implementation computes the temperature (or internal energy)
        increase or decrease.
    diff_useEleCond [BOOLEAN] [FALSE]

    diff_useIonCond [BOOLEAN] [FALSE]

    diffusion_cutoff_density [REAL] [1.e-30]
        Valid Values: Unconstrained
        density below which we no longer diffuse
    dt_diff_factor [REAL] [0.8]
        Valid Values: Unconstrained
        factor that scales the timestep returned by Diffuse_computeDt
    useDiffuse [BOOLEAN] [TRUE]
        whether any method of the Diffuse unit should contribute to fluxes
    useDiffuseComputeDtSpecies [BOOLEAN] [TRUE]
        flags whether Diffuse_computeDt considers species mass diffusion
    useDiffuseComputeDtTherm [BOOLEAN] [TRUE]
        flags whether Diffuse_computeDt considers thermal conduction
    useDiffuseComputeDtVisc [BOOLEAN] [TRUE]
        flags whether Diffuse_computeDt considers viscosity
    useDiffuseComputeDtmagnetic [BOOLEAN] [TRUE]

    useDiffuseSpecies [BOOLEAN] [TRUE]
        whether Diffuse_species [TO BE IMPLEMENTED] should contribute to fluxes
    useDiffuseTherm [BOOLEAN] [TRUE]
        whether Diffuse_therm should contribute to fluxes
    useDiffuseVisc [BOOLEAN] [TRUE]
        whether Diffuse_visc should contribute to fluxes

physics/Diffuse/DiffuseMain/CG
    diff_thetaImplct [REAL] [0.5]
        Valid Values: 0.0 to 1.0

    diff_updEint [BOOLEAN] [FALSE]


physics/Diffuse/DiffuseMain/Split
    diff_XlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_XrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_YlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_YrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_ZlBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_ZrBoundaryType [STRING] ["outflow"]
        Valid Values: Unconstrained

    diff_thetaImplct [REAL] [0.5]
        Valid Values: 0.0 to 1.0


physics/Diffuse/DiffuseMain/Unsplit
    diff_ionThetaImplct [REAL] [0.5]
        Valid Values: 0.0 to 1.0

    diff_thetaImplct [REAL] [0.5]
        Valid Values: 0.0 to 1.0

    diff_updEint [BOOLEAN] [FALSE]


physics/Eos/EosMain
    eintSwitch [REAL] [0.0]
        Valid Values: Unconstrained
        a rarely used switch which ensures that internal energy calculations
        maintain sufficient precision. Important only if energyTotal is
        dominated by energyKinetic. If (energyInternal <
        eintSwitch*energyKinetic) then some routines (Eos/Helmholtz,
        Hydro/hy_updateSoln) will NOT calculate energyInternal by subtraction,
        but rather through direct calculation.
    eos_entrEleScaleChoice [INTEGER] [6]
        Valid Values: 1 to 8
        selects a scale variant for representing electron entropy. See code in
        eos_idealGamma for the meaning of the various choices. The choice that
        corresponds most closely to the Sackur-Tetrode equation in physical
        units should be 3, closely followed by 2.
    eos_logLevel [INTEGER] [700]
        Valid Values: 0 to INFTY
        Control verbosity of messages from the Eos unit. See Eos.h for relevant
        EOS_LOGLEVEL_* definitions.
    eos_singleSpeciesA [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Nucleon number for the gas (available ONLY for Eos with single species)
    eos_singleSpeciesZ [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Proton number for the gas (available ONLY for Eos with single species)
    gamma [REAL] [1.6667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for gas (available ONLY for Eos/Gamma)
    threadEosWithinBlock [BOOLEAN] [TRUE]


physics/Eos/EosMain/Helmholtz
    eos_coulombAbort [BOOLEAN] [true]
        Abort if pressures become negative.  Otherwise, issue a warning message
        and continue
    eos_coulombMult [REAL] [1.0]
        Valid Values: Unconstrained
        coulomb correction multiplier
    eos_fluffDens [REAL] [0.0]
        Valid Values: Unconstrained
        material below this density has its energy replaced if its temperature
        falls below smallt. This should be a small density for enery
        conservation reasons. Only used in the Helmholtz/ExternalAbarZbar
        implementation of Eos.
    eos_forceConstantInput [BOOLEAN] [false]
        Helmholtz routines can allow input EINT or PRES to change on output to
        preserve equilibrium.  This switch forces a constant input of EINT or
        PRES
    eos_maxNewton [INTEGER] [50]
        Valid Values: Unconstrained
        maximum number of Newton-Raphson iterations to try.
    eos_tolerance [REAL] [1.e-8]
        Valid Values: Unconstrained
        tolerance for the Newton-Raphson iterations
    larget [REAL] [1.e20]
        Valid Values: Unconstrained
        default upper bracket bound and used to fake temperature if it tries to
        go too high. Currently, only used in the Helmholtz/ExternalAbarZbar
        implementation of Eos.

physics/Eos/EosMain/Helmholtz/SpeciesBased
    eos_singleSpeciesA [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Single-species nucleon number for the gas (only used by Eos/Helmholtz
        when compiled w/o Multispecies)
    eos_singleSpeciesZ [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Single-species proton number for the gas (only used Eos/Helmholtz when
        compiled w/o Multispecies)

physics/Eos/EosMain/Tabulated
    eos_useLogTables [BOOLEAN] [TRUE]


physics/Eos/EosMain/Tabulated/Hdf5TableRead
    eos_useLogTables [BOOLEAN] [TRUE]


physics/Eos/EosMain/multiTemp
    eint1Switch [REAL] [-1.0]
        Valid Values: Unconstrained
        OBSOLETE - a switch which tries to ensure that internal energy
        calculations for component 1 in a multiple-temperature setup maintain
        sufficient precision. Important only if total energy for this component
        is dominated by bulk kinetic energy. A value of -1 means to use the
        value of eintSwitch for eint1Switch.
    eint2Switch [REAL] [-1.0]
        Valid Values: Unconstrained
        OBSOLETE - a switch which tries to ensure that internal energy
        calculations for component 2 in a multiple-temperature setup maintain
        sufficient precision. See eint1Switch. A value of -1 means to use the
        value of eintSwitch for eint2Switch.
    eint3Switch [REAL] [-1.0]
        Valid Values: Unconstrained
        OBSOLETE - a switch which tries to ensure that internal energy
        calculations for component 3 in a multiple-temperature setup maintain
        sufficient precision. See eint1Switch. A value of -1 means to use the
        value of eintSwitch for eint3Switch.
    eos_combinedTempRule [INTEGER] [-10]
        Valid Values: -10, 0 to 3
        determines for multiTemp Eos implementations what a call to Eos will
        return in the EOS_TEMP part of eosData, when Eos is called in a mode for
        which EOS_TEMP is an output and different component temperatures can be
        returned. 1 for ion temperature EOS_TEMPION; 2 for electron temperature
        EOS_TEMPELE; 3 for radiation temperature EOS_TEMPRAD; 0 for the
        temperature that would result in the same specific internal energy as
        given if all components where equilibrated at the same temperature,
        which may be expensive to compute; -10 for undefined, i.e., we do not
        care what is returned. Currently only implemented for Multitype Eos.
    eos_smallEele [REAL] [0.0]
        Valid Values: Unconstrained
        a floor value used for the electron component of internal energy in the
        Eos unit
    eos_smallEion [REAL] [0.0]
        Valid Values: Unconstrained
        a floor value used for the ion component of internal energy by the Eos
        unit
    eos_smallErad [REAL] [0.0]
        Valid Values: Unconstrained
        a floor value used for the radiation component of internal energy in the
        Eos unit

physics/Eos/EosMain/multiTemp/Gamma
    eos_forceConstantInput [BOOLEAN] [false]
        Helmholtz routines can allow input EINT or PRES to change on output to
        preserve equilibrium.  This switch forces a constant input of EINT or
        PRES
    eos_maxNewton [INTEGER] [50]
        Valid Values: Unconstrained
        maximum number of Newton-Raphson iterations to try.
    eos_singleSpeciesA [REAL] [1.00794]
        Valid Values: 0.0 to INFTY
        Nucleon number for the gas (for Eos tracking matter as single species)
    eos_singleSpeciesZ [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Proton number for the gas (for Eos tracking matter as single species)
    eos_tolerance [REAL] [1.e-8]
        Valid Values: Unconstrained
        tolerance for the Newton-Raphson iterations
    gamma [REAL] [1.6666666666666667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for gas
    gammaEle [REAL] [1.6666666666666667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for electron component
    gammaIon [REAL] [1.6666666666666667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for ion component
    gammaRad [REAL] [1.3333333333333333]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for radiation component

physics/Eos/EosMain/multiTemp/Helmholtz
    eos_coulombAbort [BOOLEAN] [true]
        Abort if pressures become negative.  Otherwise, issue a warning message
        and continue
    eos_coulombMult [REAL] [1.0]
        Valid Values: Unconstrained
        coulomb correction multiplier
    eos_forceConstantInput [BOOLEAN] [false]
        Helmholtz routines can allow input EINT or PRES to change on output to
        preserve equilibrium.  This switch forces a constant input of EINT or
        PRES
    eos_largeT [REAL] [1.e20]
        Valid Values: Unconstrained
        default upper bracket bound and used to fake temperature if it tries to
        go too high. Used in some Helmholtz and Multitype implementations of
        Eos.
    eos_maxNewton [INTEGER] [50]
        Valid Values: Unconstrained
        maximum number of Newton-Raphson iterations to try.
    eos_tolerance [REAL] [1.e-8]
        Valid Values: Unconstrained
        tolerance for the Newton-Raphson iterations

physics/Eos/EosMain/multiTemp/Helmholtz/SpeciesBased
    eos_singleSpeciesA [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Single-species nucleon number for the gas (only used by Eos/Helmholtz
        when compiled w/o Multispecies)
    eos_singleSpeciesZ [REAL] [1.00]
        Valid Values: 0.0 to INFTY
        Single-species proton number for the gas (only used Eos/Helmholtz when
        compiled w/o Multispecies)

physics/Eos/EosMain/multiTemp/Multigamma
    eos_forceConstantInput [BOOLEAN] [false]
        Newton-Raphson loop in Eos can allow input EINT or PRES to change on
        output to preserve equilibrium.  This switch forces a constant input of
        EINT or PRES
    eos_maxNewton [INTEGER] [50]
        Valid Values: Unconstrained
        maximum number of Newton-Raphson iterations to try.
    eos_tolerance [REAL] [1.e-8]
        Valid Values: Unconstrained
        tolerance for the Newton-Raphson iterations
    gammaEle [REAL] [1.6666666666666667]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for electron component
    gammaRad [REAL] [1.3333333333333333]
        Valid Values: 0.0 to INFTY
        Ratio of specific heats for radiation component

physics/Eos/EosMain/multiTemp/Multitype
    eos_forceConstantInput [BOOLEAN] [false]
        Newton-Raphson loop in Eos can allow input EINT or PRES to change on
        output to preserve equilibrium.  This switch forces a constant input of
        EINT or PRES
    eos_largeT [REAL] [1.e14]
        Valid Values: Unconstrained
        default upper bracket bound and used to fake temperature if it tries to
        go too high. Used in some Helmholtz and Multitype implementations of
        Eos.
    eos_maxFactorDown [REAL] [0.6309573]
        Valid Values: Unconstrained

    eos_maxFactorUp [REAL] [1.5848932]
        Valid Values: Unconstrained

    eos_maxNewton [INTEGER] [50]
        Valid Values: Unconstrained
        maximum number of Newton-Raphson iterations to try.
    eos_tolerance [REAL] [1.e-8]
        Valid Values: Unconstrained
        tolerance for the Newton-Raphson iterations

physics/Eos/EosNuclear
    bounceTime [REAL] [0.0]
        Valid Values: Unconstrained
        Time of bounce in seconds
    eos_file [STRING]
    ["myshen_test_220r_180t_50y_extT_analmu_20100322_SVNr28.h5"]
        Valid Values: Unconstrained
        Filename of the table.  Data may be found at
        stellarcollapse.org/equationofstate.
    postBounce [BOOLEAN] [FALSE]
        Flag to specify that simulation is post-bounce

physics/Eos/unitTest
    eos_testEintMode [STRING] ["dens_ie"]
        Valid Values: Unconstrained
        The Eos mode for getting other variables from density and a specific
        internal energy.
    eos_testPresMode [STRING] ["dens_pres"]
        Valid Values: Unconstrained
        The Eos mode for getting other variables from density and a pressure.
    eos_testTempMode [STRING] ["dens_temp"]
        Valid Values: Unconstrained
        The Eos mode for getting other variables from density and a temperature.

physics/Gravity
    grav_boundary_type [STRING] ["isolated"]
        Valid Values: Unconstrained
        Type of gravitational boundary condition if a Poisson solve is used for
        Gravity; string-valued version of grav_boundary. Accepts: "isolated",
        "periodic", "dirichlet", and maybe others, depending on the Poisson
        solver used. This is declared in the stub level of the Gravity unit to
        allow the Grid unit to refer to this runtime parameter even when no
        Gravity implementation is included.
    useGravity [BOOLEAN] [FALSE]
        Whether gravity calculations should be performed.

physics/Gravity/GravityMain
    useGravity [BOOLEAN] [TRUE]
        Should the gravity calculations be performed?

physics/Gravity/GravityMain/Constant
    gconst [REAL] [-981.]
        Valid Values: Unconstrained
        Gravitational acceleration constant
    gdirec [STRING] ["x"]
        Valid Values: Unconstrained
        Direction of acceleration ("x", "y", "z")

physics/Gravity/GravityMain/PlanePar
    gravsoft [REAL] [.0001]
        Valid Values: Unconstrained
        softening length
    ptdirn [INTEGER] [1]
        Valid Values: Unconstrained
        x = 1, y = 2, z = 3
    ptmass [REAL] [10000.]
        Valid Values: Unconstrained
        mass of the point
    ptxpos [REAL] [1.]
        Valid Values: Unconstrained
        location of the point mass, in the ptdirn direction

physics/Gravity/GravityMain/PointMass
    gravsoft [REAL] [0.001]
        Valid Values: Unconstrained

    ptmass [REAL] [10000.]
        Valid Values: Unconstrained

    ptxpos [REAL] [1.]
        Valid Values: Unconstrained

    ptypos [REAL] [-10.]
        Valid Values: Unconstrained

    ptzpos [REAL] [0.]
        Valid Values: Unconstrained


physics/Gravity/GravityMain/Poisson
    grav_temporal_extrp [BOOLEAN] [FALSE]
        extrapolate or otherwise rescale
    grav_unjunkPden [BOOLEAN] [TRUE]
        controls whether Gravity_potentialListOfBlocks attempts to restore the
        part of the "pden" ("particle density") UNK variable that is due to
        particles, or leaves "pden" as it is, after a Poisson equation solve.
        This only applies meaningfully when a "pden" variable is declared and
        the gravitational potential is calculated by solving a Poisson equation
        whose right-hand side includes a mass distribution to which both
        hydrodynamic fluid density and massive particles contribute. The "pden"
        variable will have been set to the sum of the fluid density ("dens"
        variable) and the density resulting from mapping massive particles to
        the mesh, so that is what remains in "pden" when grav_unjunkPden is set
        to FALSE. Otherwise, "dens" will be subtraced from "pden" before
        Gravity_potentialListOfBlocks returns, and "pden" will be left
        containing only the mass density that is due to particles.
    point_mass [REAL] [0.e0]
        Valid Values: Unconstrained
        mass of the central point-like object
    point_mass_rsoft [REAL] [0.e0]
        Valid Values: Unconstrained
        softening radius for the point-like mass (in units of number of the
        finest level cells)
    updateGravity [BOOLEAN] [TRUE]
        allow gravity value to be updated

physics/Gravity/GravityMain/Poisson/BHTree
    grav_boundary_type [STRING] ["mixed"]
        Valid Values: "isolated", "periodic", "mixed"

    grav_boundary_type_x [STRING] ["isolated"]
        Valid Values: "isolated", "periodic"
        Gravity boundary type for the X direction, used if grav_boundary_type ==
        "mixed"
    grav_boundary_type_y [STRING] ["isolated"]
        Valid Values: "isolated", "periodic"
        Gravity boundary type for the Y direction, used if grav_boundary_type ==
        "mixed"
    grav_boundary_type_z [STRING] ["isolated"]
        Valid Values: "isolated", "periodic"
        Gravity boundary type for the Z direction, used if grav_boundary_type ==
        "mixed"
    grv_bhAccErr [REAL] [0.1]
        Valid Values: 0 to INFTY
        Maximum allowed error (either relative or absolute depending on value of
        grv_bhUseRelAccErr) for the MAC.
    grv_bhEwaldAlwaysGenerate [BOOLEAN] [TRUE]
        If set TRUE the Ewald field will be always re-generated even if the file
        with it exists.
    grv_bhEwaldFName [STRING] ["ewald_coeffs"]
        Valid Values: Unconstrained
        File with coefficients of the Ewald field Taylor series expansion.
    grv_bhEwaldFNameAccV42 [STRING] ["ewald_field_acc"]
        Valid Values: Unconstrained
        File to store the Ewald field for the acceleration.
    grv_bhEwaldFNamePotV42 [STRING] ["ewald_field_pot"]
        Valid Values: Unconstrained
        File to store the Ewald field for the potential.
    grv_bhEwaldFieldNxV42 [INTEGER] [32]
        Valid Values: 1 to INFTY
        Number of points of the Ewald field in the x-direction.
    grv_bhEwaldFieldNyV42 [INTEGER] [32]
        Valid Values: 1 to INFTY
        Number of points of the Ewald field in the x-direction.
    grv_bhEwaldFieldNzV42 [INTEGER] [32]
        Valid Values: 1 to INFTY
        Number of points of the Ewald field in the x-direction.
    grv_bhEwaldNPer [INTEGER] [32]
        Valid Values: Unconstrained
        corresponds to th number of points+1 of the Taylor expansion in (one of)
        periodic direction(s)
    grv_bhEwaldNRefV42 [INTEGER] [-1]
        Valid Values: Unconstrained
        Number of refinement levels of the Ewald field. If negative, it is
        calculated automatically from the minimum cell size.
    grv_bhEwaldSeriesN [INTEGER] [10]
        Valid Values: Unconstrained
        Number of terms used in expansion to calculate the Ewald field.
    grv_bhExtrnPotCenterX [REAL] [0.0]
        Valid Values: Unconstrained
        X-coordinate of the center of the external potention.
    grv_bhExtrnPotCenterY [REAL] [0.0]
        Valid Values: Unconstrained
        Y-coordinate of the center of the external potention.
    grv_bhExtrnPotCenterZ [REAL] [0.0]
        Valid Values: Unconstrained
        Z-coordinate of the center of the external potention.
    grv_bhExtrnPotFile [STRING] ["external_potential.dat"]
        Valid Values: Unconstrained
        File including the external background potential.
    grv_bhExtrnPotType [STRING] ["planez"]
        Valid Values: "spherical", "planez"
        Type of the external potential (spherical or plane-parallel).
    grv_bhLinearInterpolOnlyV42 [BOOLEAN] [TRUE]
        If set TRUE, only the linear interpolation in the Ewald field is used.
        Otherwise, more expensive and accurate quadratic interpolation is used
        in some cases.
    grv_bhMAC [STRING] ["ApproxPartialErr"]
        Valid Values: "ApproxPartialErr", "MaxPartialErr", "SumSquare"
        Type of the Multipole Acceptace Criterion (MAC) used during the tree
        walk.
    grv_bhMPDegree [INTEGER] [2]
        Valid Values: 2, 3, 4
        Degree of multipole expansion used to estimate the error of a single
        node contribution if the "ApproxPartErro" MAC is used. Recently, only
        value 2 makes sense, because quadrupole and higher order moments are not
        stored in tree nodes.
    grv_bhNewton [REAL] [-1.0]
        Valid Values: -INFTY to INFTY
        Value for Newton's constant. Specify -1.0 to use the value from the
        PhysicalConstants code unit.
    grv_bhUseRelAccErr [BOOLEAN] [FALSE]
        If set to TRUE, parameter grv_bhAccErr has meaning of the relative error
        in acceleration. Otherwise, it is an absolute error.
    grv_useExternalPotential [BOOLEAN] [FALSE]

    grv_usePoissonPotential [BOOLEAN] [TRUE]


physics/Hydro
    useHydro [BOOLEAN] CONSTANT [FALSE]
        Whether Hydro calculations should be performed.

physics/Hydro/HydroMain
    UnitSystem [STRING] ["none"]
        Valid Values: Unconstrained
        System of Units
    cfl [REAL] [0.8]
        Valid Values: Unconstrained
        Courant factor
    irenorm [INTEGER] [0]
        Valid Values: Unconstrained
        Renormalize the abundances before eos
    threadHydroBlockList [BOOLEAN] [TRUE]

    threadHydroWithinBlock [BOOLEAN] [TRUE]

    updateHydroFluxes [BOOLEAN] [TRUE]
        whether fluxes computed by Hydro should be used to update the solution
        (currently, probably only used in split PPM Hydro)
    useHydro [BOOLEAN] [TRUE]
        Should any Hydro calculations be performed?
    use_cma_advection [BOOLEAN] [FALSE]
        Use the CMA advection with partial masses being primary variables; thos
        parameter only affects the unsplit PPM hydro solver.
    use_cma_flattening [BOOLEAN] [FALSE]
        Use the flattening procedure for the abundances as described in the CMA
        paper; this parameter only affects the unsplit PPM hydro solver.
    use_steepening [BOOLEAN] [TRUE]


physics/Hydro/HydroMain/split/MHD_8Wave
    RoeAvg [BOOLEAN] [TRUE]

    hall_parameter [REAL] [0.0]
        Valid Values: Unconstrained

    hyperResistivity [REAL] [0.0]
        Valid Values: Unconstrained

    irenorm [INTEGER] [0]
        Valid Values: Unconstrained

    killdivb [BOOLEAN] [TRUE]

    small [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value
    smalle [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for energy
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smallx [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for abundances
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density

physics/Hydro/HydroMain/split/PPM
    charLimiting [BOOLEAN] [TRUE]
        use characteristic variables for slope limiting
    cvisc [REAL] [0.1]
        Valid Values: Unconstrained
        Artificial viscosity constant
    dp_sh [REAL] [0.33]
        Valid Values: Unconstrained

    dp_sh_md [REAL] [0.33]
        Valid Values: Unconstrained
        pressure jump for multi-dimensional shock detection
    epsiln [REAL] [0.33]
        Valid Values: Unconstrained
        PPM shock detection parameter
    hy_eosModeAfter [STRING] ["dens_ie"]
        Valid Values: "dens_ie", "dens_pres", "dens_temp", "dens_ie_all",
        "dens_ie_scatter", "dens_ie_gather", "dens_ie_sele_gather",
        "dens_ie_shocksele_gather", "dens_temp_equi", "dens_temp_all",
        "dens_temp_gather", "dens_ie_recal_gather"
        Eos mode to apply at the end of a hydro sweep, after hy_ppm_updateSoln
        is done. Some meaningful choices are (1): == eosMode (traditional), (2):
        "dens_ie" for MODE_DENS_EI (which are normally the same!).
    hy_fluxRepresentation [STRING] ["fluxes"]
        Valid Values: "hybrid", "fluxes", "auto"
        determines the nature of the data stored in flux arrays. With this
        parameter set to "fluxes", the fluxes and cell volumes used in the Hydro
        method are calculated correctly using geometry measures (in units
        matching those in which coordinates are represented). If
        hy_fluxRepresentation is "hybrid", fluxes are calculated in a simpler
        way; for example, the fluxes in Cartesian coordinates use the convention
        Face Area == 1 (and thus Cell Volume == dx during the X sweep, etc.).
        Both settings lead to a correct algorithm, because what is ultimately
        applied in the Hydro update is of the form fluxes times dt/CellVolume,
        so cell areas (thus fluxes) and volumes can be multiplied by an
        arbitrary constant (as long as it is done consistently) without changing
        results (except for rounding effects). The setting here must match
        Paramesh's understanding of what the "fluxes" are that it is being
        passed if Grid_conserveFluxes is called: If hy_fluxRepresentation is
        "fluxes", then Paramesh4 should have set consv_fluxes==.true., 
        consv_flux_densities==.false. If hy_fluxRepresentation is "hybrid", then
        Paramesh4 should have set consv_fluxes==.false.,
        consv_flux_densities==.true. Hydro_init will try to set Paramesh to the
        right mode if possible, this requires Paramesh to be compiled in LIBRARY
        mode. If this fails, the flux representation will be modified to
        correspond to what the Grid unit supports. A third possible value for
        hy_fluxRepresentation is "auto", in which case the Hydro code unit will
        pick either "fluxes" or "hybrid" based on geometry and support in Grid.
    hybrid_riemann [BOOLEAN] [FALSE]
        use HLLE in shocks to remove odd-even decoupling
    igodu [INTEGER] [0]
        Valid Values: Unconstrained
        Use Godunov method
    iplm [INTEGER] [0]
        Valid Values: Unconstrained
        Use linear profiles
    leveque [BOOLEAN] [FALSE]
        modify states due to gravity -- leveque's way.
    nriem [INTEGER] [10]
        Valid Values: Unconstrained
        No. of iterations in Riemann solver
    omg1 [REAL] [0.75]
        Valid Values: Unconstrained
        PPM dissipation parameter omega1
    omg2 [REAL] [10.]
        Valid Values: Unconstrained
        PPM dissipation parameter omega2
    ppmEintCompFluxConstructionMeth [INTEGER] [0]
        Valid Values: -1, 0 to 7

    ppmEintFluxConstructionMeth [INTEGER] [0]
        Valid Values: -1, 0 to 2, 4 to 6
        selects a method for constructing energy fluxes, for internal energy,
        from the results of calling the Riemann solver. Note that the eintSwitch
        runtime parameter controls whether internal energy fluxes, rather than
        total energy fluxes, are sometimes used for updating the energy
        variables (both internal and total) in a given cell (depending on the
        ratio of kinetic to internal energy in that cell).
    ppmEnerCompFluxConstructionMeth [INTEGER] [0]
        Valid Values: 0 to 7, 11 to 17, 20 to 27

    ppmEnerFluxConstructionMeth [INTEGER] [0]
        Valid Values: 0 to 2, 4 to 6, 11 to 12, 14 to 16, 20 to 27
        selects a method for constructing energy fluxes, for total
        (internal+kinetic) energy, from the results of calling the Riemann
        solver.
    ppm_modifystates [BOOLEAN] [FALSE]
        modify states due to gravity -- our way.
    rieman_tol [REAL] [1.0e-5]
        Valid Values: Unconstrained
        Converge factor for Riemann solver
    small [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value ... DEV: for what?
    smalle [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for energy
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smallx [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for abundances
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density
    vgrid [REAL] [0.]
        Valid Values: Unconstrained
        Scale factor for grid velocity

physics/Hydro/HydroMain/split/PPM/chomboCompatible
    chomboLikeUpdateSoln [BOOLEAN] [true]
        Use a simplified hy_ppm_updateSoln
    excludeGradPresFromFlux [BOOLEAN] [false]
        PLUTO like excludeGradPresFromFlux=.true., FLASH like
        excludeGradPresFromFlux=.false.

physics/Hydro/HydroMain/split/PPM/multiTemp
    hy_3Ttry_Arelated [BOOLEAN] [FALSE]
        a code switch for hydro_1d, determines how fluxes for eint-without-PdV
        are computed. TRUE: eia (Energy Internal Advected) fluxes always based
        on eint fluxes calculation. FALSE: eia fluxes always calculated based on
        advecting eint like any old mass scalar. Difference should matter only
        for ppmEintCompFluxConstructionMeth=0,4. Eia fluxes themselves only
        matter for cases B0,B1, or for E1 (with D2 or D3).
    hy_3Ttry_B [INTEGER] [2]
        Valid Values: 0, 1, 2, 3
        How to deal with "work" term
    hy_3Ttry_B_rad [INTEGER] [-1]
        Valid Values: -1, 0, 1, 2, 3
        How to deal with "work" term for radiation, i.e. for Erad, -1 means same
        as hy_3Ttry_B
    hy_3Ttry_D [REAL] [2.0]
        Valid Values: 0.0, 1.0, 1.25, 1.5, 1.75, 1.875, 2.0, 3.0
        How to consolidate energies. Values: 0. Do not, 1. Trust Eele, discard
        Eion, 1.5 Trust Eele, discard Eion, 2. Trust combined Eint, recalibrate
        both components, etc.
    hy_3Ttry_E [INTEGER] [1]
        Valid Values: 1, 2
        How to recalibrate (if D2 or D3)
    hy_3Ttry_F [INTEGER] [2]
        Valid Values: 2, 3
        What to consolidate/recalibrate (if E2)
    hy_3Ttry_G [INTEGER] [1]
        Valid Values: 0, 1
        What to use for component P (if B1)
    hy_3Ttry_Q [INTEGER] [0]
        Valid Values: 0 to 2
        Whether to implement preferential allocation of shock heating (over and
        above heating through adiabatic compression) to ions; 2 for additional
        debug info from rieman.
    hy_3Ttry_useShockDetect [BOOLEAN] [FALSE]
        a code switch for multiTemp hy_ppm_updateSoln, determines whether some
        special handling (currently, code to implement correct preferention
        shock heating of ions, as for hy_3Ttry_B3) is done only in cells where a
        "shock has been detected". Shock detection depends on runtime parameter
        dp_sh_md, see the Hydro_detectShock routine.
    hy_dbgReconstConsvSele [BOOLEAN] [FALSE]
        whether to reconstruct electron entropy ("Sele") in conservative form.
    hy_eosModeAfter [STRING] ["dens_ie_gather"]
        Valid Values: "dens_ie", "dens_pres", "dens_temp", "dens_ie_all",
        "dens_ie_scatter", "dens_ie_gather", "dens_ie_sele_gather",
        "dens_ie_shocksele_gather", "dens_temp_equi", "dens_temp_all",
        "dens_temp_gather", "dens_ie_recal_gather"
        Eos mode to apply at the end of a hydro sweep, after hy_ppm_updateSoln
        is done. Some meaningful choices are (1): == eosMode (traditional), (2):
        "dens_ie_sele_gather" for MODE_DENS_EI_SELE_GATHER.

physics/Hydro/HydroMain/split/RHD
    reconType [INTEGER] [2]
        Valid Values: Unconstrained
        Order of reconstruction
    small [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value
    smalle [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for energy
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smallx [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for abundances
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density

physics/Hydro/HydroMain/unsplit
    EOSforRiemann [BOOLEAN] [FALSE]
        Turn on/off calls to Eos for thermo of reconstructed face states
        (MODE_DENS_PRES)
    LimitedSlopeBeta [REAL] [1.0]
        Valid Values: Unconstrained
        Any real value specific for the Limited Slope limiter
    RiemannSolver [STRING] ["HLLC"]
        Valid Values: Unconstrained
        Roe, HLL, HLLC, Marquina, MarquinaModified, Hybrid or local
        Lax-Friedrichs, plus HLLD for MHD
    addThermalFlux [BOOLEAN] [TRUE]

    charLimiting [BOOLEAN] [TRUE]
        Apply limiting for characteristic variable
    conserveAngMom [BOOLEAN] [FALSE]
        Conservative formulation for cylindrical coordinates regarding the
        toroidal momentum
    cvisc [REAL] [0.1]
        Valid Values: Unconstrained

    entropy [BOOLEAN] [FALSE]
        Entropy Fix routine for the Roe Riemann solver
    entropyFixMethod [STRING] ["HARTENHYMAN"]
        Valid Values: Unconstrained
        Entropy fix method for the Roe Riemann solver: Harten or HartenHyman
    hy_3Torder [INTEGER] [-1]
        Valid Values: -1, 1, 2, 3, 5
        Reconstruction order for eint, eele, eion, erad in HEDP simulations
    hy_cflFallbackFactor [REAL] [0.9]
        Valid Values: Unconstrained
        factor for scaling CFL factor when it is lowered because of fallback in
        problematic cells
    hy_eosModeGc [STRING] ["see eosMode"]
        Valid Values: "see eosMode", "eos_nop", "dens_ie_gather",
        "dens_ie_recal_gather", "dens_ie_scatter", "dens_ie_all",
        "dens_ie_sele_gather", "dens_temp_equi", "dens_temp_all",
        "dens_temp_gather"
        Eos mode that the Hydro unit should apply to guard cells before the
        first major loop, i.e., before computing Riemann input states by
        reconstruction etc. The special value "see eosMode" can be used to
        indicate the mode set by the runtime parameter "eosMode". Other values
        are as for "eosMode".
    hy_fPresInMomFlux [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        Percentage of the pressure gradient (values range from 0 to 1) that is
        treated as part of momentum fluxes
    hy_fallbackLowerCFL [BOOLEAN] [FALSE]
        Lower the simulation CFL if fallin back to a lower reconstruction order
        in problematic cells
    hy_fullSpecMsFluxHandling [BOOLEAN] [TRUE]
        Are species and mass scalars updated with fluxes that have undergone the
        full treatment applied to other fluxes, including fine-coarse-boundary
        flux correction if that is done to fluxes of other conserved variables?
    hybridOrderKappa [REAL] [0.]
        Valid Values: Unconstrained
        A constant value to determine shock strengths for hybrid order
    hydroComputeDtOption [INTEGER] [-1]
        Valid Values: -1, 0, 1
        An option where to compute hydro dt. Choices are integer values [-1, 0,
        1] as follows: -1: Hydro_computeDt.F90,  the old standard way that has
        most extensive supports and well-tested; 0: hy_uhd_energyFix.F90, a
        light weighted version without calling a global loop Hydro_computeDt; 1:
        hy_getFaceFlux.F90,   another light weighted dt call during flux
        calculations.
    irenorm [INTEGER] [0]
        Valid Values: Unconstrained
        Renormalize abundances
    order [INTEGER] [2]
        Valid Values: 1, 2, 3, 5, 6
        1st order Godunov scheme, 2nd MUSCL-Hancock scheme, or 3rd PPM, 5th WENO
    radiusGP [REAL] [2.]
        Valid Values: Unconstrained

    shockDetect [BOOLEAN] [FALSE]
        Switch to use a strong compressive shock detection
    shockLowerCFL [BOOLEAN] [FALSE]
        Lower the simulation CFL if shocks are detected
    sigmaGP [REAL] [3.]
        Valid Values: Unconstrained

    slopeLimiter [STRING] ["vanLeer"]
        Valid Values: Unconstrained
        mc, vanLeer, minmod, hybrid, limited
    small [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value
    smalle [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for energy
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smallx [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for abundances
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        A threshold value for an arbitrarily small number
    transOrder [INTEGER] [1]
        Valid Values: 0, 1, 2, 3, 4
        order of approximating transeverse flux derivative in data
        reconstruction
    use_3dFullCTU [BOOLEAN] [TRUE]
        Turn on/off the full CTU scheme that gives CFL <= 1 for 3D
    use_auxEintEqn [BOOLEAN] [TRUE]
        Turn on/off solving the auxilary internal energy equation
    use_avisc [BOOLEAN] [FALSE]

    use_flattening [BOOLEAN] [FALSE]
        Switch for PPM flattening
    use_gravHalfUpdate [BOOLEAN] [TRUE]
        Include gravitational accelerations to hydro coupling at n+1/2
    use_hybridOrder [BOOLEAN] [FALSE]
        Apply RH jump condition to check monotonicity of reconstructed values
    use_steepening [BOOLEAN] [FALSE]
        Switch for steepening contact discontinuities for 3rd order PPM
    use_upwindTVD [BOOLEAN] [FALSE]
        Turn on/off upwinding TVD slopes
    wenoMethod [STRING] ["WENO5"]
        Valid Values: Unconstrained


physics/Hydro/HydroMain/unsplit/MHD_StaggeredMesh
    E_modification [BOOLEAN] [TRUE]
        Switch for modified electric fields calculation from flux
    E_upwind [BOOLEAN] [FALSE]
        Switch for upwind update for induction equations
    ForceHydroLimit [BOOLEAN] [FALSE]
        Switch to force B=0 limit, i.e., the solver will not update B fields
    conserveAngField [BOOLEAN] [FALSE]
        Turn on/off alternate formulation for toroidal induction
    energyFix [BOOLEAN] [FALSE]
        Switch for an energy correction for CT scheme
    hallVelocity [BOOLEAN] [FALSE]
        Switch to use u_ele = u - J/(ne qe)
    hy_bier1TA [REAL] [-1.0]
        Valid Values: Unconstrained
        Atomic number to use for 1T Biermann Battery term
    hy_bier1TZ [REAL] [-1.0]
        Valid Values: Unconstrained
        Ionization number to use for 1T Biermann Battery term
    hy_biermannCoef [REAL] [1.0]
        Valid Values: Unconstrained
        Coefficient of Biermann Battery flux
    hy_biermannSource [BOOLEAN] [FALSE]
        Switch to implement battery term as an external source
    killdivb [BOOLEAN] [TRUE]
        Switch for maintaing solenoidal field
    killdivb8w [BOOLEAN] [FALSE]
        Switch for maintaing solenoidal field using Powell's 8wave
    prolMethod [STRING] ["INJECTION_PROL"]
        Valid Values: Unconstrained
        Injection or Balsara's method in prolongation
    use_Biermann [BOOLEAN] [FALSE]
        Switch to add the Battery term for B-field generation
    use_Biermann1T [BOOLEAN] [FALSE]
        Switch to add the 1T Battery term for B-field generation

physics/Hydro/HydroMain/unsplit/multiTemp
    hy_3TMode [STRING] ["ragelike"]
        Valid Values: "ragelike", "crashlike", "entropy"
        Indictates the 3T model to use
    hy_3Ttry_B [INTEGER] [0]
        Valid Values: 0, 1, 2
        How to deal with component energy "work" term
    hy_3Ttry_B_rad [INTEGER] [-1]
        Valid Values: -1, 0, 1, 2
        How to deal with "work" term for radiation, i.e. for Erad, -1 means same
        as hy_3Ttry_B
    hy_3Ttry_D [REAL] [2.0]
        Valid Values: 0.0, 2.0, 3.0
        How to consolidate energies. Values: 0. Do not, 1. Trust Eele, discard
        Eion, 1.5 Trust Eele, discard Eion, 2. Trust combined Eint, recalibrate
        both components.
    hy_3Ttry_E [INTEGER] [1]
        Valid Values: 1, 2
        How to recalibrate component energy (if D2)
    hy_3Ttry_F [INTEGER] [2]
        Valid Values: 2, 3
        What to consolidate/recalibrate (if E2)
    hy_3Ttry_G [INTEGER] [4]
        Valid Values: 0, 1, 2, 4
        What to use for component P (if B1)
    hy_eosModeAfter [STRING] ["dens_ie_gather"]
        Valid Values: "dens_ie", "dens_pres", "dens_temp", "dens_ie_all",
        "dens_ie_scatter", "dens_ie_gather", "dens_ie_sele_gather",
        "dens_temp_equi", "dens_temp_all", "dens_temp_gather",
        "dens_ie_recal_gather"
        Eos mode to apply at the end of a state advance, before Hydro returns.
        This is currently ONLY used with multiTemp, and ignored otherwise! Some
        meaningful choices are (1): == eosMode (traditional), (2):
        "dens_ie_sele_gather" for MODE_DENS_EI_SELE_GATHER.

physics/Hydro/HydroMain/unsplit_rad
    EOSforRiemann [BOOLEAN] [FALSE]
        Turn on/off calls to Eos for thermo of reconstructed face states
        (MODE_DENS_PRES)
    LimitedSlopeBeta [REAL] [1.0]
        Valid Values: Unconstrained
        Any real value specific for the Limited Slope limiter
    RiemannSolver [STRING] ["HLLC"]
        Valid Values: Unconstrained
        Roe, HLL, HLLC, Marquina, MarquinaModified, Hybrid or local
        Lax-Friedrichs, plus HLLD for MHD
    addThermalFlux [BOOLEAN] [TRUE]

    charLimiting [BOOLEAN] [TRUE]
        Apply limiting for characteristic variable
    conserveAngMom [BOOLEAN] [FALSE]
        Conservative formulation for cylindrical coordinates regarding the
        toroidal momentum
    cvisc [REAL] [0.1]
        Valid Values: Unconstrained

    entropy [BOOLEAN] [FALSE]
        Entropy Fix routine for the Roe Riemann solver
    entropyFixMethod [STRING] ["HARTENHYMAN"]
        Valid Values: Unconstrained
        Entropy fix method for the Roe Riemann solver: Harten or HartenHyman
    hy_3Torder [INTEGER] [-1]
        Valid Values: -1, 1, 2, 3, 5
        Reconstruction order for eint, eele, eion, erad in HEDP simulations
    hy_cflFallbackFactor [REAL] [0.9]
        Valid Values: Unconstrained
        factor for scaling CFL factor when it is lowered because of fallback in
        problematic cells
    hy_eosModeGc [STRING] ["see eosMode"]
        Valid Values: "see eosMode", "eos_nop", "dens_ie_gather",
        "dens_ie_recal_gather", "dens_ie_scatter", "dens_ie_all",
        "dens_ie_sele_gather", "dens_temp_equi", "dens_temp_all",
        "dens_temp_gather"
        Eos mode that the Hydro unit should apply to guard cells before the
        first major loop, i.e., before computing Riemann input states by
        reconstruction etc. The special value "see eosMode" can be used to
        indicate the mode set by the runtime parameter "eosMode". Other values
        are as for "eosMode".
    hy_fPresInMomFlux [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        Percentage of the pressure gradient (values range from 0 to 1) that is
        treated as part of momentum fluxes
    hy_fallbackLowerCFL [BOOLEAN] [FALSE]
        Lower the simulation CFL if fallin back to a lower reconstruction order
        in problematic cells
    hy_fullSpecMsFluxHandling [BOOLEAN] [TRUE]
        Are species and mass scalars updated with fluxes that have undergone the
        full treatment applied to other fluxes, including fine-coarse-boundary
        flux correction if that is done to fluxes of other conserved variables?
    hybridOrderKappa [REAL] [0.]
        Valid Values: Unconstrained
        A constant value to determine shock strengths for hybrid order
    hydroComputeDtOption [INTEGER] [-1]
        Valid Values: -1, 0, 1
        An option where to compute hydro dt. Choices are integer values [-1, 0,
        1] as follows: -1: Hydro_computeDt.F90,  the old standard way that has
        most extensive supports and well-tested; 0: hy_uhd_energyFix.F90, a
        light weighted version without calling a global loop Hydro_computeDt; 1:
        hy_getFaceFlux.F90,   another light weighted dt call during flux
        calculations.
    irenorm [INTEGER] [0]
        Valid Values: Unconstrained
        Renormalize abundances
    order [INTEGER] [2]
        Valid Values: 1, 2, 3, 5, 6
        1st order Godunov scheme, 2nd MUSCL-Hancock scheme, or 3rd PPM, 5th WENO
    radiusGP [REAL] [2.]
        Valid Values: Unconstrained

    shockDetect [BOOLEAN] [FALSE]
        Switch to use a strong compressive shock detection
    shockLowerCFL [BOOLEAN] [FALSE]
        Lower the simulation CFL if shocks are detected
    sigmaGP [REAL] [3.]
        Valid Values: Unconstrained

    slopeLimiter [STRING] ["vanLeer"]
        Valid Values: Unconstrained
        mc, vanLeer, minmod, hybrid, limited
    small [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value
    smalle [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for energy
    smallp [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for pressure
    smallt [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for temperature
    smallu [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for velocity
    smallx [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for abundances
    smlrho [REAL] [1.E-10]
        Valid Values: Unconstrained
        Cutoff value for density
    tiny [REAL] [1.e-16]
        Valid Values: Unconstrained
        A threshold value for an arbitrarily small number
    transOrder [INTEGER] [1]
        Valid Values: 0, 1, 2, 3, 4
        order of approximating transeverse flux derivative in data
        reconstruction
    use_3dFullCTU [BOOLEAN] [TRUE]
        Turn on/off the full CTU scheme that gives CFL <= 1 for 3D
    use_auxEintEqn [BOOLEAN] [TRUE]
        Turn on/off solving the auxilary internal energy equation
    use_avisc [BOOLEAN] [FALSE]

    use_flattening [BOOLEAN] [FALSE]
        Switch for PPM flattening
    use_gravHalfUpdate [BOOLEAN] [TRUE]
        Include gravitational accelerations to hydro coupling at n+1/2
    use_hybridOrder [BOOLEAN] [FALSE]
        Apply RH jump condition to check monotonicity of reconstructed values
    use_steepening [BOOLEAN] [FALSE]
        Switch for steepening contact discontinuities for 3rd order PPM
    use_upwindTVD [BOOLEAN] [FALSE]
        Turn on/off upwinding TVD slopes
    wenoMethod [STRING] ["WENO5"]
        Valid Values: Unconstrained


physics/Hydro/HydroMain/unsplit_rad/multiTemp
    hy_3TMode [STRING] ["ragelike"]
        Valid Values: "ragelike", "crashlike", "entropy", "castrolike"
        Indictates the 3T model to use
    hy_3Ttry_B [INTEGER] [1]
        Valid Values: 0, 1, 2
        How to deal with component energy "work" term
    hy_3Ttry_B_rad [INTEGER] [2]
        Valid Values: -1, 0, 1, 2
        How to deal with "work" term for radiation, i.e. for Erad, -1 means same
        as hy_3Ttry_B
    hy_3Ttry_D [REAL] [2.0]
        Valid Values: 0.0, 2.0, 3.0
        How to consolidate energies. Values: 0. Do not, 1. Trust Eele, discard
        Eion, 1.5 Trust Eele, discard Eion, 2. Trust combined Eint, recalibrate
        both components.
    hy_3Ttry_E [INTEGER] [1]
        Valid Values: 1, 2
        How to recalibrate component energy (if D2)
    hy_3Ttry_F [INTEGER] [2]
        Valid Values: 2, 3
        What to consolidate/recalibrate (if E2)
    hy_3Ttry_G [INTEGER] [1]
        Valid Values: 0, 1, 2, 4, 5
        What to use for component P (if B1)
    hy_eosModeAfter [STRING] ["dens_ie_gather"]
        Valid Values: "dens_ie", "dens_pres", "dens_temp", "dens_ie_all",
        "dens_ie_scatter", "dens_ie_gather", "dens_ie_sele_gather",
        "dens_temp_equi", "dens_temp_all", "dens_temp_gather",
        "dens_ie_recal_gather"
        Eos mode to apply at the end of a state advance, before Hydro returns.
        This is currently ONLY used with multiTemp, and ignored otherwise! Some
        meaningful choices are (1): == eosMode (traditional), (2):
        "dens_ie_sele_gather" for MODE_DENS_EI_SELE_GATHER.
    hy_lam3ScaleFactor [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        experimental scaling factor for lambda terms in FLA Hydro
    hy_maxSmoothVarVal [REAL] [1.0]
        Valid Values: Unconstrained
        upper bound of value range where smoothing is applied.
    hy_minSmoothVarVal [REAL] [0.0]
        Valid Values: Unconstrained
        lower bound of value range where smoothing is applied.
    hy_mtPresRatLambda3Min [REAL] [0.0]
        Valid Values: 0.0 to 1.0
        experimental minimum value for the 3*lambda factor to scale updated
        pressure ratios (from Eos call) in hy_uhd_ragelike with radflah.
    hy_mtScaleAccel [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        experimental scaling factor for per-component kinetic energy change
        terms in hy_uhd_unsplitUpdateCastroLike
    hy_mtScaleLorentz [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        experimental scaling factor for component Lorentz coupling terms in
        hy_uhd_unsplitUpdateCastroLike
    hy_mtScaleWork [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        experimental scaling factor for component work terms in
        hy_uhd_unsplitUpdateCastroLike
    hy_smoothCoeff [REAL] [1.0]
        Valid Values: Unconstrained
        smoothing coefficient, used in some SOR-like methods
    hy_smoothIterations [INTEGER] [0]
        Valid Values: 0 to INFTY
        number of smoothing iterations, 0 means no smoothing is applied.
    hy_smoothMethod [STRING] ["SMOOTH_3POINT"]
        Valid Values: "SMOOTH_3POINT", "SMOOTH_SOR", "SMOOTH_HARMONIC_SOR"
        smoothing method
    hy_useMaxSmoothVarVal [BOOLEAN] [FALSE]
        Use upper bound on values to be smoothed?
    hy_useMinSmoothVarVal [BOOLEAN] [FALSE]
        Use lower bound on values to be smoothed?

physics/IncompNS
    useIncompNS [BOOLEAN] CONSTANT [FALSE]
        Should the IncompNS unit be used?

physics/IncompNS/IncompNSMain
    useIncompNS [BOOLEAN] [TRUE]
        Should the IncompNS unit be used?

physics/IncompNS/IncompNSMain/constdens
    cfl [REAL] [0.35]
        Valid Values: Unconstrained
        Courant Number
    ins_WBREF [REAL] [0.00]
        Valid Values: Unconstrained

    ins_areaSolids [REAL] [0.00]
        Valid Values: Unconstrained

    ins_cflFlg [INTEGER] [1]
        Valid Values: Unconstrained

    ins_constantMass [BOOLEAN] [FALSE]

    ins_dpdx [REAL] [0.00]
        Valid Values: Unconstrained

    ins_dpdy [REAL] [0.00]
        Valid Values: Unconstrained

    ins_dpdz [REAL] [0.00]
        Valid Values: Unconstrained

    ins_dtSpec [REAL] [0.001]
        Valid Values: Unconstrained

    ins_gravX [REAL] [0.]
        Valid Values: Unconstrained

    ins_gravY [REAL] [0.]
        Valid Values: Unconstrained

    ins_gravZ [REAL] [0.]
        Valid Values: Unconstrained

    ins_intSchm [INTEGER] [21]
        Valid Values: Unconstrained

    ins_invRe [REAL] [1.]
        Valid Values: Unconstrained
        inverse Reynolds number
    ins_isgs [INTEGER] [0]
        Valid Values: Unconstrained
        Subgrid scale model flag
    ins_pressureCorrect [BOOLEAN] [TRUE]

    ins_sigma [REAL] [0.25]
        Valid Values: Unconstrained
        Viscous Condition Parameter
    ins_velProlongMethod [INTEGER] [1]
        Valid Values: 0, 1, 101, 102


physics/IncompNS/IncompNSStats
    ins_statsRestart [BOOLEAN] [TRUE]

    ins_statsStartTime [REAL] [0.0]
        Valid Values: Unconstrained

    ins_statsSteps [INTEGER] [1]
        Valid Values: Unconstrained


physics/RadTrans
    useRadTrans [BOOLEAN] [FALSE]
        flag to indicate whether radiative transfer is in use

physics/RadTrans/RadTransMain
    rt_dtFactor [REAL] [0.1]
        Valid Values: 0.0+ to INFTY
        Coefficient for RadTrans time step
    useRadTrans [BOOLEAN] [TRUE]
        flag to indicate whether radiative transfer is in use

physics/RadTrans/RadTransMain/MGD
    rt_computeDt [BOOLEAN] [FALSE]
        When true, attempt to compute a time step associated with MGD
    rt_groupBarrier [BOOLEAN] [FALSE]
        Option to time group load imbalance
    rt_mgdBoundEntry [STRING] ["grbd_manual"]
        Valid Values: "grbd_manual"
        How the group bounds will be input
    rt_mgdBounds_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        These parameters store the group boundaries for manual entry
    rt_mgdBounds_10 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_100 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_101 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_11 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_12 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_13 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_14 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_15 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_16 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_17 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_18 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_19 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_2 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_20 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_21 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_22 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_23 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_24 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_25 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_26 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_27 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_28 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_29 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_3 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_30 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_31 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_32 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_33 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_34 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_35 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_36 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_37 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_38 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_39 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_4 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_40 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_41 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_42 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_43 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_44 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_45 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_46 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_47 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_48 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_49 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_5 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_50 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_51 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_52 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_53 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_54 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_55 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_56 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_57 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_58 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_59 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_6 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_60 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_61 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_62 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_63 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_64 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_65 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_66 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_67 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_68 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_69 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_7 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_70 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_71 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_72 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_73 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_74 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_75 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_76 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_77 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_78 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_79 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_8 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_80 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_81 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_82 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_83 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_84 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_85 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_86 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_87 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_88 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_89 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_9 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_90 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_91 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_92 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_93 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_94 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_95 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_96 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_97 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_98 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdBounds_99 [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdFlCoef [REAL] [1.0]
        Valid Values: Unconstrained
        MGD flux limiter coefficient
    rt_mgdFlMode [STRING] ["fl_none"]
        Valid Values: "fl_none", "fl_harmonic", "fl_minmax", "fl_larsen",
        "fl_levermorepomraning1981"
        MGD flux limiter mode
    rt_mgdNumGroups [INTEGER] [0]
        Valid Values: Unconstrained
        Number of groups in the MGD calculation
    rt_mgdXlBoundaryTemp [REAL] [-1.0]
        Valid Values: Unconstrained
        Boundary radiation temperature for MGD, in kelvin
    rt_mgdXlBoundaryType [STRING] ["reflecting"]
        Valid Values: "reflecting", "vacuum", "dirichlet", "neumann", "outflow",
        "outstream"
        MGD bcTypes.
    rt_mgdXrBoundaryTemp [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdXrBoundaryType [STRING] ["reflecting"]
        Valid Values: "reflecting", "vacuum", "dirichlet", "neumann", "outflow",
        "outstream"

    rt_mgdYlBoundaryTemp [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdYlBoundaryType [STRING] ["reflecting"]
        Valid Values: "reflecting", "vacuum", "dirichlet", "neumann", "outflow",
        "outstream"

    rt_mgdYrBoundaryTemp [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdYrBoundaryType [STRING] ["reflecting"]
        Valid Values: "reflecting", "vacuum", "dirichlet", "neumann", "outflow",
        "outstream"

    rt_mgdZlBoundaryTemp [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdZlBoundaryType [STRING] ["reflecting"]
        Valid Values: "reflecting", "vacuum", "dirichlet", "neumann", "outflow",
        "outstream"

    rt_mgdZrBoundaryTemp [REAL] [-1.0]
        Valid Values: Unconstrained

    rt_mgdZrBoundaryType [STRING] ["reflecting"]
        Valid Values: "reflecting", "vacuum", "dirichlet", "neumann", "outflow",
        "outstream"

    rt_mgdthetaImplct [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        Implicitness factor of the solver.
    rt_tempChangeRelTol [REAL] [1.e3]
        Valid Values: 0.0+ to INFTY
        Tolerance for maximum relative temperature change in a cell in a time
        step. Currently only applied to electron temperature by ExpRelax
        implementation.
    rt_timeGroups [BOOLEAN] [FALSE]
        Option to time individual groups (cannot be used with meshCopyCount > 1)
    rt_useMGD [BOOLEAN] [FALSE]
        use multigroup radiation diffusion

physics/RadTrans/RadTransMain/MGD/ExpRelax
    rt_expRelaxMaxIter [INTEGER] [3]
        Valid Values: 1 to INFTY
        Maximum number of iterations in ExpRelax outer loop

physics/RadTrans/RadTransMain/MGD/Unified
    rt_mgdthetaC [REAL] [-1.0]
        Valid Values: 0.0 to 1.0, -1.0
        Implicitness factor for the absorption part of the unified solver. Use
        -1 to indicate that the value of rt_mgdthetaImplct should be used.
    rt_mgdthetaD [REAL] [0.5]
        Valid Values: 0.0 to 1.0, -1.0
        Implicitness factor for the emission part of the unified solver. Use -1
        to indicate that the value of rt_mgdthetaImplct should be used.
    rt_tightIonCoupling [BOOLEAN] [FALSE]
        Should the RadTrans implementation assume tight thermal coupling between
        electrons and ions? The implementation may uses this parameter to decide
        whether to use cv or cv_ele to linearize the relation beetween electron
        temperature and energy internal energy.

physics/RadTrans/RadTransMain/NeutrinoLeakage
    leak_doHeat [BOOLEAN] [TRUE]
        Switch whether or not to include neutrino heating in calculation
    leak_dx [REAL] [1.]
        Valid Values: Unconstrained
        Minimum radial spacing of the rays, used up to leak_radLog
    leak_heatFac [REAL] [1.]
        Valid Values: Unconstrained
        Multiplicative factor in heating equation, f_heat.
    leak_numPhi [INTEGER] [1]
        Valid Values: Unconstrained
        Number of longitudinal points in the leakage rays
    leak_numRad [INTEGER] [0]
        Valid Values: Unconstrained
        Number of radial points in the leakage rays
    leak_numTht [INTEGER] [1]
        Valid Values: Unconstrained
        Number of latitudinal points in the leakage rays
    leak_phiMax [REAL] [0.0]
        Valid Values: Unconstrained
        Maximum longitudinal angle of the leakage rays, measured from the +x
        axis (only 3D), in radians/pi
    leak_radLog [REAL] [0.]
        Valid Values: Unconstrained
        Radius at which the radial spacing of the rays begins to increase
        logarithmically
    leak_radMax [REAL] [0.0]
        Valid Values: Unconstrained
        Maximum radius of the leakage rays
    leak_reducedSteps [INTEGER] [1]
        Valid Values: Unconstrained
        Number of minimum time steps in between leakage calculation after
        leak_reducedTime
    leak_reducedTime [REAL] [1.e20]
        Valid Values: Unconstrained
        Time, in seconds, at which the frequency of leakage computation is
        reduced
    leak_subCommSize [INTEGER] [-1]
        Valid Values: Unconstrained
        Size of the MPI subcommunicator for leakage communication (-1 uses
        meshNumProcs)
    leak_thtMax [REAL] [0.0]
        Valid Values: Unconstrained
        Maximum latitudinal angle of the leakage rays, measured from the +y
        axis, in radians/pi
    threadLeakBlockList [BOOLEAN] [TRUE]

    threadLeakWithinBlock [BOOLEAN] [TRUE]


physics/TreeRay
    useTreeRay [BOOLEAN] [FALSE]
        Whether TreeRay calculations should be performed.

physics/TreeRay/TreeRayMain
    tr_bhErrControl [STRING] ["erad_cell"]
        Valid Values: "erad_cell", "erad_tot", "mion_tot"

    tr_bhMaxDist [REAL] [1e99]
        Valid Values: Unconstrained

    tr_bhRayRadRes [REAL] [1.0]
        Valid Values: Unconstrained

    tr_bhRelErr [REAL] [0.01]
        Valid Values: Unconstrained

    tr_boundary_type [STRING] ["periodic"]
        Valid Values: Unconstrained

    tr_ilFinePix [INTEGER] [4]
        Valid Values: Unconstrained

    tr_ilNNS [INTEGER] [25]
        Valid Values: Unconstrained

    tr_ilNPhi [INTEGER] [50]
        Valid Values: Unconstrained

    tr_ilNR [INTEGER] [50]
        Valid Values: Unconstrained

    tr_ilNTheta [INTEGER] [25]
        Valid Values: Unconstrained

    tr_nSide [INTEGER] [1]
        Valid Values: Unconstrained

    useTreeRay [BOOLEAN] [TRUE]
        Whether TreeRay calculations should be performed.

physics/TreeRay/TreeRayMain/OpticalDepth
    tr_odCDTOIndex [REAL] [1.0]
        Valid Values: Unconstrained

    tr_odMaxDist [REAL] [1e99]
        Valid Values: Unconstrained


physics/materialProperties/Conductivity
    useConductivity [BOOLEAN] CONSTANT [FALSE]
        flags whether the conductivity material property is being used

physics/materialProperties/Conductivity/ConductivityMain
    useConductivity [BOOLEAN] [TRUE]
        flags whether the conductivity material property is being used

physics/materialProperties/Conductivity/ConductivityMain/Constant
    cond_constantIsochoric [REAL] [1.0]
        Valid Values: Unconstrained


physics/materialProperties/Conductivity/ConductivityMain/Constant-diff
    diff_constant [REAL] [1.0]
        Valid Values: Unconstrained


physics/materialProperties/Conductivity/ConductivityMain/PowerLaw
    cond_DensityExponent [REAL] [0.0]
        Valid Values: Unconstrained

    cond_K0 [REAL] [1.0]
        Valid Values: Unconstrained
        coefficient K0 for conductivity K = rho c_v K0 T^n , where n is given by
        cond_TemperatureExponent.
    cond_TemperatureExponent [REAL] [1.0]
        Valid Values: Unconstrained
        Temperature exponent n. For n=0 you get constant conductivity. See D.
        Mihalas & B. W. Mihalas 1984 p 551. For n=6, e.g., you get nonlinear
        conduction as in Fig 103.1(b) there.

physics/materialProperties/Conductivity/ConductivityMain/PowerLaw-gray
    Raddiff_K0r [REAL] [1.0]
        Valid Values: Unconstrained

    Raddiff_TemperatureExponent [REAL] [0.0]
        Valid Values: Unconstrained

    cond_K0 [REAL] [1.0]
        Valid Values: Unconstrained
        coefficient K0 for conductivity K = rho c_v K0 T^n , where n is given by
        cond_TemperatureExponent.
    cond_TemperatureExponent [REAL] [1.0]
        Valid Values: Unconstrained
        Temperature exponent n. For n=0 you get constant conductivity. See D.
        Mihalas & B. W. Mihalas 1984 p 551. For n=6, e.g., you get nonlinear
        conduction as in Fig 103.1(b) there.

physics/materialProperties/MagneticResistivity
    useMagneticResistivity [BOOLEAN] CONSTANT [FALSE]
        flags whether the magnetic resistivity material property is being used

physics/materialProperties/MagneticResistivity/MagneticResistivityMain
    useMagneticResistivity [BOOLEAN] [TRUE]
        flags whether the magnetic resistivity material property is being used

physics/materialProperties/MagneticResistivity/MagneticResistivityMain/Constant
    resistivity [REAL] [0.0]
        Valid Values: Unconstrained


physics/materialProperties/MagneticResistivity/MagneticResistivityMain/SpitzerHighZ
    res_coef [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        Constant coefficient for scaling the final resistivity
    res_ieTimeCoef [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        Constant coefficient for scaling ion/ele coupling time
    res_maxRes [REAL] [-1.0]
        Valid Values: -1.0, 0.0 to INFTY
        Ceiling value applied to the magnetic resistivities; use -1.0 to
        disable.

physics/materialProperties/MassDiffusivity
    useMassDiffusivity [BOOLEAN] CONSTANT [FALSE]
        -- allows the mass diffusivity to be turned off at runtime, even if the
        unit is included in the simulation

physics/materialProperties/Opacity
    useOpacity [BOOLEAN] CONSTANT [FALSE]
        flags whether the Opacity unit is being used at all

physics/materialProperties/Opacity/OpacityMain
    useOpacity [BOOLEAN] [TRUE]
        flags whether the Opacity unit is being used at all

physics/materialProperties/Opacity/OpacityMain/BremsstrahlungAndThomson
    op_absorbScale [REAL] [1.0]
        Valid Values: Unconstrained

    op_emitScale [REAL] [1.0]
        Valid Values: Unconstrained

    op_transScale [REAL] [1.0]
        Valid Values: Unconstrained


physics/materialProperties/Opacity/OpacityMain/Constant
    op_absorbConst [REAL] [1.0]
        Valid Values: Unconstrained

    op_emitConst [REAL] [1.0]
        Valid Values: Unconstrained

    op_transConst [REAL] [1.0]
        Valid Values: Unconstrained


physics/materialProperties/Opacity/OpacityMain/Constcm2g
    op_absorbConst [REAL] [1.0]
        Valid Values: Unconstrained
        Constcm2g value for absorption opacity [cm^2/g]
    op_emitConst [REAL] [1.0]
        Valid Values: Unconstrained
        Constcm2g value for emission opacity [cm^2/g]
    op_transConst [REAL] [1.0]
        Valid Values: Unconstrained
        Constcm2g value for transport opacity [cm^2/g]

physics/materialProperties/Opacity/OpacityMain/Multispecies
    opacity_ignoreLowTemp [BOOLEAN] [TRUE]
        control parameter indicating if the low temperature capability should be
        ignored
    opacity_writeOpacityInfo [BOOLEAN] [FALSE]
        control parameter indicating if detailed info of the opacity unit should
        be written out

physics/materialProperties/Opacity/OpacityMain/Multispecies/method/Integrate
    opacity_RombergAccuracy [REAL] [1.E-6]
        Valid Values: Unconstrained

    opacity_maxQuadratureRoots [INTEGER] [50]
        Valid Values: Unconstrained

    opacity_printQuadratureData [BOOLEAN] [TRUE]

    opacity_useQuadrature [BOOLEAN] [FALSE]

    opacity_useRomberg [BOOLEAN] [TRUE]


physics/materialProperties/Opacity/OpacityMain/Multispecies/method/LowTemp
    opacity_ignoreKleinNishina [BOOLEAN] [FALSE]


physics/materialProperties/Opacity/OpacityMain/Multispecies/method/Tabulated
    op_tableEnergyTolerance [REAL] [1.0e-04]
        Valid Values: Unconstrained
        allowed difference between table/FLASH group structure
    opacity_useLogTables [BOOLEAN] [TRUE]
        control parameter indicating use of logarithmic opacities

physics/materialProperties/Opacity/OpacityMain/OPAL
    op_absorbConst [REAL] [1.0]
        Valid Values: Unconstrained
        Constcm2g value for absorption opacity [cm^2/g]
    op_emitConst [REAL] [1.0]
        Valid Values: Unconstrained
        Constcm2g value for emission opacity [cm^2/g]
    op_hydrogenMassFrac [REAL] [1.0]
        Valid Values: 0.0+ to 1.0
        Fixed value to use for hydrogen mass fraction, used if
        op_hydrogenMassFracVar does not exist
    op_hydrogenMassFracVar [STRING] ["h1"]
        Valid Values: Unconstrained
        Variable in unk to use as hydrogen mass fraction, probably something
        like "h1" or "h"
    op_opalMaxLowT [REAL] [1.0e4]
        Valid Values: Unconstrained
        maximum temperature for which the LowT OPAL tables are to be used; above
        this threshold, the HightT tables are used.
    op_opalNumHydrogenAbundances [INTEGER] [10]
        Valid Values: 0 to 10
        number of hydrogen abundance ranges for which there are OPAL table
        files.
    op_opalTableAbundMax_1 [REAL] [0.1]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 1
    op_opalTableAbundMax_10 [REAL] [1.0]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 10
    op_opalTableAbundMax_2 [REAL] [0.2]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 2
    op_opalTableAbundMax_3 [REAL] [0.3]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 3
    op_opalTableAbundMax_4 [REAL] [0.4]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 4
    op_opalTableAbundMax_5 [REAL] [0.5]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 5
    op_opalTableAbundMax_6 [REAL] [0.6]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 6
    op_opalTableAbundMax_7 [REAL] [0.7]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 7
    op_opalTableAbundMax_8 [REAL] [0.8]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 8
    op_opalTableAbundMax_9 [REAL] [0.9]
        Valid Values: 0.0 to 1.0
        Upper bound of hydrogen abundance range no. 9
    op_opalTableHighT_1 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 1
    op_opalTableHighT_10 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 10
    op_opalTableHighT_2 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 2
    op_opalTableHighT_3 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 3
    op_opalTableHighT_4 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 4
    op_opalTableHighT_5 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 5
    op_opalTableHighT_6 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 6
    op_opalTableHighT_7 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 7
    op_opalTableHighT_8 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 8
    op_opalTableHighT_9 [STRING] ["-none-"]
        Valid Values: Unconstrained
        High temp OPAL table for hydrogen abundance range no. 9
    op_opalTableLowT_1 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 1
    op_opalTableLowT_10 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 10
    op_opalTableLowT_2 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 2
    op_opalTableLowT_3 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 3
    op_opalTableLowT_4 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 4
    op_opalTableLowT_5 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 5
    op_opalTableLowT_6 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 6
    op_opalTableLowT_7 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 7
    op_opalTableLowT_8 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 8
    op_opalTableLowT_9 [STRING] ["-none-"]
        Valid Values: Unconstrained
        Low temp OPAL table for hydrogen abundance range no. 9
    opacity_useLogTables [BOOLEAN] CONSTANT [TRUE]
        control parameter indicating use of logarithmic opacities
    opacity_writeOpacityInfo [BOOLEAN] [FALSE]
        control parameter indicating if detailed info of the opacity unit should
        be written out

physics/materialProperties/Viscosity
    useViscosity [BOOLEAN] CONSTANT [FALSE]
        flags whether the viscosity material property is being used

physics/materialProperties/Viscosity/ViscosityMain
    useViscosity [BOOLEAN] [TRUE]
        flags whether the viscosity material property is being used
    viscSuppressFactor [REAL] [1.0]
        Valid Values: Unconstrained
        -- allows the viscosity to be suppressed
    viscTempHigh [REAL] [1.5e8]
        Valid Values: Unconstrained
        -- turn off viscosity for temps higher than this
    viscTempLow [REAL] [3.0e5]
        Valid Values: Unconstrained
        -- turn off viscosity for temps lower than this

physics/materialProperties/Viscosity/ViscosityMain/Constant
    diff_visc_mu [REAL] [.1]
        Valid Values: Unconstrained
        constant dynamic viscosity (used in Constant Viscosity if
        visc_whichCoefficientIsConst is 1)
    diff_visc_nu [REAL] [.1]
        Valid Values: Unconstrained
        constant kinematic viscosity (used in Constant Viscosity if
        visc_whichCoefficientIsConst is 2)
    visc_whichCoefficientIsConst [INTEGER] [2]
        Valid Values: 1, 2
        which kind of coefficient to keep constant in Constant Viscosity
        implementation; set to 1 for constant dynamic viscosity (the value of
        diff_visc_mu is used); set to 2 for constant kinematic viscosity (the
        value of diff_visc_nu is used).

physics/sourceTerms/Burn
    useBurn [BOOLEAN] [FALSE]
        shall I burn?

physics/sourceTerms/Burn/BurnMain
    enucDtFactor [REAL] [1.e30]
        Valid Values: Unconstrained
        Limit timestep to limit total energy deposited by burning is kept
        artificially high to effectively turn off limiting by default
    useShockBurn [BOOLEAN] [FALSE]
        Is burning allowed within shocks?

physics/sourceTerms/Burn/BurnMain/nuclearBurn
    algebra [INTEGER] [1]
        Valid Values: 1 to 2
        choice of linear algebra package & 1 = MA28 ;  2 = GIFT
    nuclearDensMax [REAL] [1.0E14]
        Valid Values: 0 to INFTY
        Max burning density
    nuclearDensMin [REAL] [1.0E-10]
        Valid Values: 0 to INFTY
        Min burning density
    nuclearNI56Max [REAL] [1.0]
        Valid Values: 0 to INFTY
        Max Ni56 mass frac. for burning
    nuclearTempMax [REAL] [1.0E12]
        Valid Values: 0 to INFTY
        Max burning temperature
    nuclearTempMin [REAL] [1.1E8]
        Valid Values: 0 to INFTY
        Min burning temperature
    odeStepper [INTEGER] [1]
        Valid Values: 1 to 2
        choice of ode time stepper 1 = Bader-Deuflhard variable order 2 =
        Rosenbrock 4th order
    useBurnTable [BOOLEAN] [FALSE]
        choice of rate evaluation FALSE = analytic rates TRUE = table
        interpolation

physics/sourceTerms/Cool
    useCool [BOOLEAN] [FALSE]
        Runtime control for turning off cooling

physics/sourceTerms/Deleptonize
    useDeleptonize [BOOLEAN] [FALSE]
        runtime control for turning the deleptonization on or off

physics/sourceTerms/Deleptonize/DeleptonizeMain
    delep_Enu [REAL] [10.0]
        Valid Values: Unconstrained

    delep_rhoOne [REAL] [0.0]
        Valid Values: Unconstrained

    delep_rhoTwo [REAL] [0.0]
        Valid Values: Unconstrained

    delep_yOne [REAL] [0.0]
        Valid Values: Unconstrained

    delep_yTwo [REAL] [0.0]
        Valid Values: Unconstrained

    delep_yc [REAL] [0.0]
        Valid Values: Unconstrained

    threadDelepBlockList [BOOLEAN] [TRUE]
        Turn on block-list threading for the Deleptonize implementation?
    threadDelepWithinBlock [BOOLEAN] [TRUE]
        Turn on within-block threading for the Deleptonize implementation?
    useEntr [BOOLEAN] [TRUE]


physics/sourceTerms/EnergyDeposition
    useEnergyDeposition [BOOLEAN] CONSTANT [FALSE]
        flag indicating whether to use EnergyDeposition unit

physics/sourceTerms/EnergyDeposition/EnergyDepositionMain
    useEnergyDeposition [BOOLEAN] [TRUE]
        Use Energy deposition module

physics/sourceTerms/EnergyDeposition/EnergyDepositionMain/Laser
    ed_RungeKuttaMethod [STRING] ["CashKarp45"]
        Valid Values: Unconstrained
        Specifies the Runge Kutta method to be used for ray tracing.
    ed_cellStepTolerance [REAL] [1.0e-06]
        Valid Values: Unconstrained
        The allowed cell fractional error (unit = cell edge) for a ray path step
    ed_cellWallThicknessFactor [REAL] [1.0e-06]
        Valid Values: Unconstrained
        Fraction of the shortest cell edge defining the cell wall thickness
    ed_computeGradNeleX [BOOLEAN] [true]
        Should the x-component of the number of electrons gradient be computed?
    ed_computeGradNeleY [BOOLEAN] [true]
        Should the y-component of the number of electrons gradient be computed?
    ed_computeGradNeleZ [BOOLEAN] [true]
        Should the z-component of the number of electrons gradient be computed?
    ed_crossSectionFunctionType_1 [STRING] [" "]
        Valid Values: Unconstrained
        Function type which sets the irradiance pattern for beam 1
    ed_crossSectionFunctionType_2 [STRING] [" "]
        Valid Values: Unconstrained
        Function type which sets the irradiance pattern for beam 2
    ed_crossSectionFunctionType_3 [STRING] [" "]
        Valid Values: Unconstrained
        Function type which sets the irradiance pattern for beam 3
    ed_crossSectionFunctionType_4 [STRING] [" "]
        Valid Values: Unconstrained
        Function type which sets the irradiance pattern for beam 4
    ed_crossSectionFunctionType_5 [STRING] [" "]
        Valid Values: Unconstrained
        Function type which sets the irradiance pattern for beam 5
    ed_crossSectionFunctionType_6 [STRING] [" "]
        Valid Values: Unconstrained
        Function type which sets the irradiance pattern for beam 6
    ed_cubicInterpolationZeroDerv [BOOLEAN] [false]
        Set all cubic interpolation vertex derivatives = 0 (default
        monotonicity)?
    ed_depoReuseMaxSteps [INTEGER] [-1]
        Valid Values: -1 to INFTY
        Maximum number of time steps for which a computed energy deposition rate
        (stored in the ed_depoVar variable) can be reused. If 0, the rate can
        still be reused in the same timestep; this can make a difference when a
        split Driver implementation is used which calls EnergyDeposition more
        than once per time step. Set to -1 to completely disable reuse of depo
        rate.
    ed_depoVarName [STRING] ["depo"]
        Valid Values: Unconstrained
        Name of the variable used for storing the computed deposition rate for
        reuse; the default is "depo". Note that "depo" can refer to either
        DEPO_VAR or DEPO_MSCALAR in the Flash code, depending on whether a
        VARIABLE or a MASS_SCALAR statement is used to declare the variable.
        Further note that if a VARIABLE statement is used, it can be combined
        with either TYPE: PER_MASS or TYPE: PER_VOLUME to get difference
        variants of reuse.
    ed_enforcePositiveNele [BOOLEAN] [true]
        Rescale the number of electrons gradient such that it is always >= 0?
    ed_enforcePositiveTele [BOOLEAN] [true]
        Rescale the electron temperature gradient such that it is always >= 0?
    ed_gaussianCenterMajor_1 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the major semiaxis for beam 1
    ed_gaussianCenterMajor_2 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the major semiaxis for beam 2
    ed_gaussianCenterMajor_3 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the major semiaxis for beam 3
    ed_gaussianCenterMajor_4 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the major semiaxis for beam 4
    ed_gaussianCenterMajor_5 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the major semiaxis for beam 5
    ed_gaussianCenterMajor_6 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the major semiaxis for beam 6
    ed_gaussianCenterMinor_1 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the minor semiaxis for beam 1
    ed_gaussianCenterMinor_2 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the minor semiaxis for beam 2
    ed_gaussianCenterMinor_3 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the minor semiaxis for beam 3
    ed_gaussianCenterMinor_4 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the minor semiaxis for beam 4
    ed_gaussianCenterMinor_5 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the minor semiaxis for beam 5
    ed_gaussianCenterMinor_6 [REAL] [0.0]
        Valid Values: Unconstrained
        The gaussian center location along the minor semiaxis for beam 6
    ed_gaussianExponent_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian exponent for beam 1
    ed_gaussianExponent_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian exponent for beam 2
    ed_gaussianExponent_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian exponent for beam 3
    ed_gaussianExponent_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian exponent for beam 4
    ed_gaussianExponent_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian exponent for beam 5
    ed_gaussianExponent_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian exponent for beam 6
    ed_gaussianRadiusMajor_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the major semiaxis for beam 1
    ed_gaussianRadiusMajor_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the major semiaxis for beam 2
    ed_gaussianRadiusMajor_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the major semiaxis for beam 3
    ed_gaussianRadiusMajor_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the major semiaxis for beam 4
    ed_gaussianRadiusMajor_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the major semiaxis for beam 5
    ed_gaussianRadiusMajor_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the major semiaxis for beam 6
    ed_gaussianRadiusMinor_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the minor semiaxis for beam 1
    ed_gaussianRadiusMinor_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the minor semiaxis for beam 2
    ed_gaussianRadiusMinor_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the minor semiaxis for beam 3
    ed_gaussianRadiusMinor_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the minor semiaxis for beam 4
    ed_gaussianRadiusMinor_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the minor semiaxis for beam 5
    ed_gaussianRadiusMinor_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The gaussian e-folding length along the minor semiaxis for beam 6
    ed_gradOrder [INTEGER] [2]
        Valid Values: 1, 2
        Gradient order. 1 = no gradient, 2 = first order differencing
    ed_gridDeltaSemiAxisMajor_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the major semiaxis for delta defined grids 1
    ed_gridDeltaSemiAxisMajor_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the major semiaxis for delta defined grids 2
    ed_gridDeltaSemiAxisMajor_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the major semiaxis for delta defined grids 3
    ed_gridDeltaSemiAxisMajor_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the major semiaxis for delta defined grids 4
    ed_gridDeltaSemiAxisMajor_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the major semiaxis for delta defined grids 5
    ed_gridDeltaSemiAxisMajor_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the major semiaxis for delta defined grids 6
    ed_gridDeltaSemiAxisMinor_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the minor semiaxis for delta defined grids 1
    ed_gridDeltaSemiAxisMinor_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the minor semiaxis for delta defined grids 2
    ed_gridDeltaSemiAxisMinor_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the minor semiaxis for delta defined grids 3
    ed_gridDeltaSemiAxisMinor_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the minor semiaxis for delta defined grids 4
    ed_gridDeltaSemiAxisMinor_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the minor semiaxis for delta defined grids 5
    ed_gridDeltaSemiAxisMinor_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The tic spacing for the minor semiaxis for delta defined grids 6
    ed_gridType_1 [STRING] [" "]
        Valid Values: Unconstrained
        The type of beam grid 1
    ed_gridType_2 [STRING] [" "]
        Valid Values: Unconstrained
        The type of beam grid 2
    ed_gridType_3 [STRING] [" "]
        Valid Values: Unconstrained
        The type of beam grid 3
    ed_gridType_4 [STRING] [" "]
        Valid Values: Unconstrained
        The type of beam grid 4
    ed_gridType_5 [STRING] [" "]
        Valid Values: Unconstrained
        The type of beam grid 5
    ed_gridType_6 [STRING] [" "]
        Valid Values: Unconstrained
        The type of beam grid 6
    ed_gridnAngularTics_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of angular ray positions for radial type grids 1
    ed_gridnAngularTics_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of angular ray positions for radial type grids 2
    ed_gridnAngularTics_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of angular ray positions for radial type grids 3
    ed_gridnAngularTics_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of angular ray positions for radial type grids 4
    ed_gridnAngularTics_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of angular ray positions for radial type grids 5
    ed_gridnAngularTics_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of angular ray positions for radial type grids 6
    ed_gridnRadialTics_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of radial ray positions for radial type grids 1
    ed_gridnRadialTics_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of radial ray positions for radial type grids 2
    ed_gridnRadialTics_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of radial ray positions for radial type grids 3
    ed_gridnRadialTics_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of radial ray positions for radial type grids 4
    ed_gridnRadialTics_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of radial ray positions for radial type grids 5
    ed_gridnRadialTics_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of radial ray positions for radial type grids 6
    ed_gridnSemiAxisMajorTics_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of major semiaxis ray positions for rectangular type grids 1
    ed_gridnSemiAxisMajorTics_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of major semiaxis ray positions for rectangular type grids 2
    ed_gridnSemiAxisMajorTics_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of major semiaxis ray positions for rectangular type grids 3
    ed_gridnSemiAxisMajorTics_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of major semiaxis ray positions for rectangular type grids 4
    ed_gridnSemiAxisMajorTics_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of major semiaxis ray positions for rectangular type grids 5
    ed_gridnSemiAxisMajorTics_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of major semiaxis ray positions for rectangular type grids 6
    ed_gridnSemiAxisMinorTics_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of minor semiaxis ray positions for rectangular type grids 1
    ed_gridnSemiAxisMinorTics_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of minor semiaxis ray positions for rectangular type grids 2
    ed_gridnSemiAxisMinorTics_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of minor semiaxis ray positions for rectangular type grids 3
    ed_gridnSemiAxisMinorTics_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of minor semiaxis ray positions for rectangular type grids 4
    ed_gridnSemiAxisMinorTics_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of minor semiaxis ray positions for rectangular type grids 5
    ed_gridnSemiAxisMinorTics_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        Number of minor semiaxis ray positions for rectangular type grids 6
    ed_ignoreBoundaryCondition_1 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 1
    ed_ignoreBoundaryCondition_2 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 2
    ed_ignoreBoundaryCondition_3 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 3
    ed_ignoreBoundaryCondition_4 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 4
    ed_ignoreBoundaryCondition_5 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 5
    ed_ignoreBoundaryCondition_6 [BOOLEAN] [false]
        Option to ignore domain boundary conditions for beam 6
    ed_initialRaySpeed_1 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial ray speed [in units of c] for beam 1
    ed_initialRaySpeed_2 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial ray speed [in units of c] for beam 2
    ed_initialRaySpeed_3 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial ray speed [in units of c] for beam 3
    ed_initialRaySpeed_4 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial ray speed [in units of c] for beam 4
    ed_initialRaySpeed_5 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial ray speed [in units of c] for beam 5
    ed_initialRaySpeed_6 [REAL] [1.0]
        Valid Values: Unconstrained
        The initial ray speed [in units of c] for beam 6
    ed_irradVarName [STRING] ["lase"]
        Valid Values: Unconstrained
        Name of the variable used for storing the computed laser radiation field
        energy density; the default is "lase". Note that "lase" should refer to
        LASE_VAR in the Flash code, and a VARIABLE statement should be used to
        declare the variable. Further note that the VARIABLE statement should
        declare TYPE: PER_VOLUME.
    ed_laser3Din2D [BOOLEAN] [false]
        Use the 3D rays in a 2D cylindrical grid ray tracing?
    ed_laser3Din2DwedgeAngle [REAL] [0.0]
        Valid Values: Unconstrained
        Wedge angle (degrees, must be < 180) for laser 3D in 2D simulations
    ed_lensSemiAxisMajor_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Lens major elliptical semiaxis length for beam 1
    ed_lensSemiAxisMajor_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Lens major elliptical semiaxis length for beam 2
    ed_lensSemiAxisMajor_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Lens major elliptical semiaxis length for beam 3
    ed_lensSemiAxisMajor_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Lens major elliptical semiaxis length for beam 4
    ed_lensSemiAxisMajor_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Lens major elliptical semiaxis length for beam 5
    ed_lensSemiAxisMajor_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Lens major elliptical semiaxis length for beam 6
    ed_lensX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the lens for beam 1
    ed_lensX_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the lens for beam 2
    ed_lensX_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the lens for beam 3
    ed_lensX_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the lens for beam 4
    ed_lensX_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the lens for beam 5
    ed_lensX_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the lens for beam 6
    ed_lensY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the lens for beam 1
    ed_lensY_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the lens for beam 2
    ed_lensY_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the lens for beam 3
    ed_lensY_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the lens for beam 4
    ed_lensY_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the lens for beam 5
    ed_lensY_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the lens for beam 6
    ed_lensZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the lens for beam 1
    ed_lensZ_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the lens for beam 2
    ed_lensZ_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the lens for beam 3
    ed_lensZ_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the lens for beam 4
    ed_lensZ_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the lens for beam 5
    ed_lensZ_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the lens for beam 6
    ed_maxRayCount [INTEGER] [100]
        Valid Values: Unconstrained
        Maximum number of rays per processor
    ed_numberOfBeams [INTEGER] [-1]
        Valid Values: Unconstrained
        Total number of laser beams
    ed_numberOfPulses [INTEGER] [-1]
        Valid Values: Unconstrained
        Total number of laser pulses
    ed_numberOfRays_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of rays to launch per timestep for beam 1
    ed_numberOfRays_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of rays to launch per timestep for beam 2
    ed_numberOfRays_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of rays to launch per timestep for beam 3
    ed_numberOfRays_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of rays to launch per timestep for beam 4
    ed_numberOfRays_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of rays to launch per timestep for beam 5
    ed_numberOfRays_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The number of rays to launch per timestep for beam 6
    ed_numberOfSections_1 [INTEGER] [-1]
        Valid Values: Unconstrained
        The number of time/power pairs (sections) for laser pulse 1
    ed_numberOfSections_2 [INTEGER] [-1]
        Valid Values: Unconstrained
        The number of time/power pairs (sections) for laser pulse 2
    ed_numberOfSections_3 [INTEGER] [-1]
        Valid Values: Unconstrained
        The number of time/power pairs (sections) for laser pulse 3
    ed_numberOfSections_4 [INTEGER] [-1]
        Valid Values: Unconstrained
        The number of time/power pairs (sections) for laser pulse 4
    ed_numberOfSections_5 [INTEGER] [-1]
        Valid Values: Unconstrained
        The number of time/power pairs (sections) for laser pulse 5
    ed_powerStepTolerance [REAL] [1.0e-06]
        Valid Values: Unconstrained
        The allowed power fractional error (unit = current power) for a ray path
        step
    ed_power_1_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 1
    ed_power_1_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 10
    ed_power_1_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 11
    ed_power_1_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 12
    ed_power_1_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 13
    ed_power_1_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 14
    ed_power_1_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 15
    ed_power_1_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 16
    ed_power_1_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 17
    ed_power_1_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 18
    ed_power_1_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 19
    ed_power_1_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 2
    ed_power_1_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 20
    ed_power_1_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 3
    ed_power_1_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 4
    ed_power_1_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 5
    ed_power_1_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 6
    ed_power_1_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 7
    ed_power_1_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 8
    ed_power_1_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 1 section 9
    ed_power_2_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 1
    ed_power_2_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 10
    ed_power_2_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 11
    ed_power_2_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 12
    ed_power_2_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 13
    ed_power_2_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 14
    ed_power_2_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 15
    ed_power_2_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 16
    ed_power_2_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 17
    ed_power_2_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 18
    ed_power_2_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 19
    ed_power_2_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 2
    ed_power_2_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 20
    ed_power_2_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 3
    ed_power_2_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 4
    ed_power_2_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 5
    ed_power_2_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 6
    ed_power_2_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 7
    ed_power_2_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 8
    ed_power_2_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 2 section 9
    ed_power_3_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 1
    ed_power_3_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 10
    ed_power_3_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 11
    ed_power_3_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 12
    ed_power_3_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 13
    ed_power_3_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 14
    ed_power_3_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 15
    ed_power_3_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 16
    ed_power_3_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 17
    ed_power_3_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 18
    ed_power_3_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 19
    ed_power_3_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 2
    ed_power_3_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 20
    ed_power_3_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 3
    ed_power_3_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 4
    ed_power_3_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 5
    ed_power_3_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 6
    ed_power_3_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 7
    ed_power_3_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 8
    ed_power_3_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 3 section 9
    ed_power_4_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 1
    ed_power_4_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 10
    ed_power_4_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 11
    ed_power_4_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 12
    ed_power_4_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 13
    ed_power_4_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 14
    ed_power_4_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 15
    ed_power_4_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 16
    ed_power_4_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 17
    ed_power_4_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 18
    ed_power_4_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 19
    ed_power_4_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 2
    ed_power_4_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 20
    ed_power_4_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 3
    ed_power_4_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 4
    ed_power_4_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 5
    ed_power_4_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 6
    ed_power_4_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 7
    ed_power_4_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 8
    ed_power_4_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 4 section 9
    ed_power_5_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 1
    ed_power_5_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 10
    ed_power_5_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 11
    ed_power_5_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 12
    ed_power_5_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 13
    ed_power_5_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 14
    ed_power_5_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 15
    ed_power_5_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 16
    ed_power_5_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 17
    ed_power_5_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 18
    ed_power_5_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 19
    ed_power_5_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 2
    ed_power_5_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 20
    ed_power_5_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 3
    ed_power_5_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 4
    ed_power_5_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 5
    ed_power_5_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 6
    ed_power_5_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 7
    ed_power_5_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 8
    ed_power_5_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The power (W) for laser pulse 5 section 9
    ed_printBeams [BOOLEAN] [false]
        Print details about each beam?
    ed_printMain [BOOLEAN] [false]
        Print details about the main laser energy depoition run?
    ed_printPulses [BOOLEAN] [false]
        Print details about each pulse?
    ed_printRays [BOOLEAN] [false]
        Print details about each ray initially generated?
    ed_pulseNumber_1 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The pulse number to use for beam 1
    ed_pulseNumber_2 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The pulse number to use for beam 2
    ed_pulseNumber_3 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The pulse number to use for beam 3
    ed_pulseNumber_4 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The pulse number to use for beam 4
    ed_pulseNumber_5 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The pulse number to use for beam 5
    ed_pulseNumber_6 [INTEGER] [-HUGE(1)]
        Valid Values: Unconstrained
        The pulse number to use for beam 6
    ed_rayDeterminism [BOOLEAN] [false]
        If true, the Grid Unit will use the Sieve Algorithm to move the ray
        particle.
    ed_rayZeroPower [REAL] [1.0e-06]
        Valid Values: Unconstrained
        Below this value (erg/s), the ray is considered to have zero power
    ed_saveOutOfDomainRays [BOOLEAN] [false]
        Should the rays exiting the domain be saved (for diagnostics) ?
    ed_semiAxisMajorTorsionAngle_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Major semiaxis/{x,y,z} axis rotation angle (in degrees) for beam 1
    ed_semiAxisMajorTorsionAngle_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Major semiaxis/{x,y,z} axis rotation angle (in degrees) for beam 2
    ed_semiAxisMajorTorsionAngle_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Major semiaxis/{x,y,z} axis rotation angle (in degrees) for beam 3
    ed_semiAxisMajorTorsionAngle_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Major semiaxis/{x,y,z} axis rotation angle (in degrees) for beam 4
    ed_semiAxisMajorTorsionAngle_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Major semiaxis/{x,y,z} axis rotation angle (in degrees) for beam 5
    ed_semiAxisMajorTorsionAngle_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Major semiaxis/{x,y,z} axis rotation angle (in degrees) for beam 6
    ed_semiAxisMajorTorsionAxis_1 [STRING] [" "]
        Valid Values: Unconstrained
        {x,y,z} axis to use for rotating major semiaxis for beam1
    ed_semiAxisMajorTorsionAxis_2 [STRING] [" "]
        Valid Values: Unconstrained
        {x,y,z} axis to use for rotating major semiaxis for beam2
    ed_semiAxisMajorTorsionAxis_3 [STRING] [" "]
        Valid Values: Unconstrained
        {x,y,z} axis to use for rotating major semiaxis for beam3
    ed_semiAxisMajorTorsionAxis_4 [STRING] [" "]
        Valid Values: Unconstrained
        {x,y,z} axis to use for rotating major semiaxis for beam4
    ed_semiAxisMajorTorsionAxis_5 [STRING] [" "]
        Valid Values: Unconstrained
        {x,y,z} axis to use for rotating major semiaxis for beam5
    ed_semiAxisMajorTorsionAxis_6 [STRING] [" "]
        Valid Values: Unconstrained
        {x,y,z} axis to use for rotating major semiaxis for beam6
    ed_targetSemiAxisMajor_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target major elliptical semiaxis length for beam 1
    ed_targetSemiAxisMajor_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target major elliptical semiaxis length for beam 2
    ed_targetSemiAxisMajor_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target major elliptical semiaxis length for beam 3
    ed_targetSemiAxisMajor_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target major elliptical semiaxis length for beam 4
    ed_targetSemiAxisMajor_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target major elliptical semiaxis length for beam 5
    ed_targetSemiAxisMajor_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target major elliptical semiaxis length for beam 6
    ed_targetSemiAxisMinor_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target minor elliptical semiaxis length for beam 1
    ed_targetSemiAxisMinor_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target minor elliptical semiaxis length for beam 2
    ed_targetSemiAxisMinor_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target minor elliptical semiaxis length for beam 3
    ed_targetSemiAxisMinor_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target minor elliptical semiaxis length for beam 4
    ed_targetSemiAxisMinor_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target minor elliptical semiaxis length for beam 5
    ed_targetSemiAxisMinor_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        Target minor elliptical semiaxis length for beam 6
    ed_targetX_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target for beam 1
    ed_targetX_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target for beam 2
    ed_targetX_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target for beam 3
    ed_targetX_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target for beam 4
    ed_targetX_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target for beam 5
    ed_targetX_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The x coordinate of the target for beam 6
    ed_targetY_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target for beam 1
    ed_targetY_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target for beam 2
    ed_targetY_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target for beam 3
    ed_targetY_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target for beam 4
    ed_targetY_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target for beam 5
    ed_targetY_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The y coordinate of the target for beam 6
    ed_targetZ_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target for beam 1
    ed_targetZ_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target for beam 2
    ed_targetZ_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target for beam 3
    ed_targetZ_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target for beam 4
    ed_targetZ_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target for beam 5
    ed_targetZ_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The z coordinate of the target for beam 6
    ed_time_1_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 1
    ed_time_1_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 10
    ed_time_1_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 11
    ed_time_1_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 12
    ed_time_1_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 13
    ed_time_1_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 14
    ed_time_1_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 15
    ed_time_1_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 16
    ed_time_1_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 17
    ed_time_1_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 18
    ed_time_1_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 19
    ed_time_1_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 2
    ed_time_1_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 20
    ed_time_1_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 3
    ed_time_1_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 4
    ed_time_1_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 5
    ed_time_1_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 6
    ed_time_1_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 7
    ed_time_1_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 8
    ed_time_1_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 1 section 9
    ed_time_2_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 1
    ed_time_2_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 10
    ed_time_2_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 11
    ed_time_2_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 12
    ed_time_2_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 13
    ed_time_2_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 14
    ed_time_2_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 15
    ed_time_2_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 16
    ed_time_2_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 17
    ed_time_2_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 18
    ed_time_2_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 19
    ed_time_2_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 2
    ed_time_2_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 20
    ed_time_2_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 3
    ed_time_2_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 4
    ed_time_2_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 5
    ed_time_2_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 6
    ed_time_2_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 7
    ed_time_2_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 8
    ed_time_2_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 2 section 9
    ed_time_3_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 1
    ed_time_3_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 10
    ed_time_3_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 11
    ed_time_3_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 12
    ed_time_3_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 13
    ed_time_3_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 14
    ed_time_3_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 15
    ed_time_3_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 16
    ed_time_3_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 17
    ed_time_3_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 18
    ed_time_3_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 19
    ed_time_3_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 2
    ed_time_3_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 20
    ed_time_3_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 3
    ed_time_3_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 4
    ed_time_3_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 5
    ed_time_3_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 6
    ed_time_3_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 7
    ed_time_3_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 8
    ed_time_3_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 3 section 9
    ed_time_4_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 1
    ed_time_4_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 10
    ed_time_4_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 11
    ed_time_4_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 12
    ed_time_4_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 13
    ed_time_4_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 14
    ed_time_4_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 15
    ed_time_4_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 16
    ed_time_4_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 17
    ed_time_4_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 18
    ed_time_4_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 19
    ed_time_4_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 2
    ed_time_4_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 20
    ed_time_4_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 3
    ed_time_4_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 4
    ed_time_4_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 5
    ed_time_4_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 6
    ed_time_4_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 7
    ed_time_4_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 8
    ed_time_4_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 4 section 9
    ed_time_5_1 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 1
    ed_time_5_10 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 10
    ed_time_5_11 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 11
    ed_time_5_12 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 12
    ed_time_5_13 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 13
    ed_time_5_14 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 14
    ed_time_5_15 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 15
    ed_time_5_16 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 16
    ed_time_5_17 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 17
    ed_time_5_18 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 18
    ed_time_5_19 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 19
    ed_time_5_2 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 2
    ed_time_5_20 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 20
    ed_time_5_3 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 3
    ed_time_5_4 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 4
    ed_time_5_5 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 5
    ed_time_5_6 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 6
    ed_time_5_7 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 7
    ed_time_5_8 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 8
    ed_time_5_9 [REAL] [-1.0]
        Valid Values: Unconstrained
        The time (s)  for laser pulse 5 section 9
    ed_wavelength_1 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The wave length [in microns] of beam 1
    ed_wavelength_2 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The wave length [in microns] of beam 2
    ed_wavelength_3 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The wave length [in microns] of beam 3
    ed_wavelength_4 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The wave length [in microns] of beam 4
    ed_wavelength_5 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The wave length [in microns] of beam 5
    ed_wavelength_6 [REAL] [-HUGE(1.0)]
        Valid Values: Unconstrained
        The wave length [in microns] of beam 6
    threadRayTrace [BOOLEAN] [true]
        Use threading when tracing the rays through each block?
    useEnergyDeposition [BOOLEAN] [true]
        Use Laser energy deposition?

physics/sourceTerms/EnergyDeposition/EnergyDepositionMain/Laser/LaserComm/Async
    ed_commChannelSize [INTEGER] [100]
        Valid Values: 1 to INFTY

    ed_commDebug [BOOLEAN] [TRUE]

    ed_commLog [BOOLEAN] [FALSE]

    ed_commRaysBetweenMsgTest [INTEGER] [50]
        Valid Values: 1 to INFTY


physics/sourceTerms/EnergyDeposition/EnergyDepositionMain/Laser/LaserIO
    ed_laserIOMaxNumberOfPositions [INTEGER] [-1]
        Valid Values: Unconstrained
        Maximum number of positions to store for each IO ray
    ed_laserIOMaxNumberOfRays [INTEGER] [-1]
        Valid Values: Unconstrained
        Maximum number of IO rays to write out accross each process
    ed_useLaserIO [BOOLEAN] [false]
        This flag controls whether Laser IO is active

physics/sourceTerms/Flame
    useFlame [BOOLEAN] CONSTANT [FALSE]
        Whether the flame should be advanced.

physics/sourceTerms/Flame/FlameEffects/BurnParametric
    eos_tolerance [REAL] [1.e-8]
        Valid Values: Unconstrained
        tolerance for the Newton-Raphson iterations

physics/sourceTerms/Flame/FlameEffects/EIP
    flame_deltae [REAL] [0.0]
        Valid Values: Unconstrained

    sumyi_burned [REAL] [1.0]
        Valid Values: Unconstrained

    sumyi_unburned [REAL] [1.0]
        Valid Values: Unconstrained

    ye_burned [REAL] [0.5]
        Valid Values: Unconstrained

    ye_unburned [REAL] [0.5]
        Valid Values: Unconstrained


physics/sourceTerms/Flame/FlameMain
    fl_b [REAL] [3.2]
        Valid Values: Unconstrained
        flame width parameter in units of cells
    fl_epsilon_0 [REAL] [1.0e-3]
        Valid Values: Unconstrained
        lower sharpening factor for sKPP, reaction \propto
        (f-epsilon_0)*(1+epsilon_1-f)
    fl_epsilon_1 [REAL] [1.0e-3]
        Valid Values: Unconstrained
        upper sharpening factor for sKPP, reaction \propto
        (f-epsilon_0)*(1+epsilon_1-f)
    fl_initProfileAdjustWidth [REAL] [1.0]
        Valid Values: Unconstrained
        multiplicative adjustment of width of initial profile.  0.8 was used for
        some SNIa simulations, but should usually be default of 1.
    fl_kpp_fact [REAL] [1.309]
        Valid Values: Unconstrained
        reaction prefactor adjustment factor for sKPP
    useFlame [BOOLEAN] [TRUE]
        Whether the flame should be advanced.

physics/sourceTerms/Flame/FlameSpeed/BuoyancyCompensation
    approx_atwood [BOOLEAN] [false]
        only used for CO configuration, not for CONe
    fl_fsBuoyCompSuppress [BOOLEAN] [false]
        Suppress (turn off) Buoyancy Compensation flame speed enhancement per
        selected time and region
    fl_fsBuoyCompSuppressTheta [REAL] [135.0]
        Valid Values: Unconstrained
        Extent of suppression region in degrees from south pole (-z in cart.)
    fl_fsBuoyCompSuppressTime [REAL] [1.5]
        Valid Values: Unconstrained
        Time after which to suppress in selected region
    fl_fsConstFlameSpeed [REAL] [1.0]
        Valid Values: Unconstrained

    fl_fsConstFlameWidth [REAL] [1.0]
        Valid Values: Unconstrained

    fl_fsGcdFlameSuppress [BOOLEAN] [false]
        Suppress (set flamespeed to zero) flame per selected time and region
    fl_fsGcdFlameSuppressTheta [REAL] [135.0]
        Valid Values: Unconstrained
        Extent of suppression region in degrees from south pole (-z in cart.)
    fl_fsGcdFlameSuppressTime [REAL] [1.5]
        Valid Values: Unconstrained
        Time after which to suppress in selected region
    fl_fsM [REAL] [0.06]
        Valid Values: Unconstrained
        factor for buoyancy-compensating enhancement of flame speed, fs =
        0.5*sqrt(Atwood*g*fl_fsM*Delta)
    fl_fsQuench [BOOLEAN] [true]

    fl_fsQuenchDens0 [REAL] [1.0e6]
        Valid Values: Unconstrained

    fl_fsQuenchDens1 [REAL] [1.0e7]
        Valid Values: Unconstrained

    fl_fsUseConstFlameSpeed [BOOLEAN] [false]

    fl_fsUseTFI [BOOLEAN] [false]


physics/sourceTerms/Flame/FlameSpeed/BuoyancyCompensation/CONe
    max_c_frac [REAL] [1.0]
        Valid Values: Unconstrained

    max_dens [REAL] [4.e9]
        Valid Values: Unconstrained

    min_c_frac [REAL] [0.3]
        Valid Values: Unconstrained

    num_c_frac [INTEGER] [9]
        Valid Values: Unconstrained

    num_ldens [INTEGER] [20]
        Valid Values: Unconstrained

    rep_ne_frac [REAL] [0.01]
        Valid Values: Unconstrained


physics/sourceTerms/Flame/FlameSpeed/Constant
    fl_fsConstFlameSpeed [REAL] [1.e0]
        Valid Values: Unconstrained

    fl_fsConstFlameWidth [REAL] [1.e0]
        Valid Values: Unconstrained


physics/sourceTerms/Flame/FlameSpeed/Constant/TFI
    fl_fsUseTFI [BOOLEAN] [false]


physics/sourceTerms/Flame/FlameSpeed/LaminarOnly
    fl_fsConstFlameSpeed [REAL] [1.e0]
        Valid Values: Unconstrained

    fl_fsConstFlameWidth [REAL] [1.e0]
        Valid Values: Unconstrained

    fl_fsUseConstFlameSpeed [BOOLEAN] [false]

    fl_fsUseTFI [BOOLEAN] [false]


physics/sourceTerms/Flame/FlameSpeed/laminar/CONe
    fl_fsCONeTableName [STRING] ["CONeFlameTable.txt"]
        Valid Values: Unconstrained
        name of table containing nuclear flame speed table

physics/sourceTerms/Flame/FlameSpeed/turbulent/tfi/charlette
    fl_fsTFIBeta [REAL] [0.3333333]
        Valid Values: Unconstrained

    fl_fsTFIPrandtl [REAL] [1.e-5]
        Valid Values: Unconstrained


physics/sourceTerms/Flame/FlameSpeed/turbulent/tfi/charlette/gammaInt
    fl_fsTFIetol [REAL] [1.e-3]
        Valid Values: Unconstrained
        controls the accuracy of the integrator

physics/sourceTerms/Flame/FlameSpeed/turbulent/tfi/damkohler
    fl_fsTFIBeta [REAL] [1.0]
        Valid Values: Unconstrained


physics/sourceTerms/Flame/FlameSpeed/turbulent/tfi/kolmogorov
    fl_fsTFIBeta [REAL] [5.0]
        Valid Values: Unconstrained

    fl_fsTFIViscosity [REAL] [1.0e-2]
        Valid Values: Unconstrained


physics/sourceTerms/Flame/FlameSpeed/turbulent/tfi/pocheau
    fl_fsTFICt [REAL] [1.333333333]
        Valid Values: Unconstrained


physics/sourceTerms/Heat
    useHeat [BOOLEAN] [FALSE]
        runtime control for turning the heat on or off

physics/sourceTerms/Heat/HeatMain/Neutrino
    Lneut [REAL] [0.0]
        Valid Values: Unconstrained
        Parametric neutrino luminosity
    Tneut [REAL] [0.0]
        Valid Values: Unconstrained
        Neutrino temperature in MeV
    bounce_time [REAL] [0.0]
        Valid Values: Unconstrained
        The time of bounce in s.
    heatTimeFac [REAL] [1.0e4]
        Valid Values: Unconstrained
        For adjusting the heating time step size

physics/sourceTerms/Heatexchange
    useHeatexchange [BOOLEAN] CONSTANT [FALSE]


physics/sourceTerms/Heatexchange/HeatexchangeMain
    hx_logLevel [INTEGER] [700]
        Valid Values: 0 to INFTY
        controls the level of logging for some conditions. See Heatexchange.h
        for relevant HX_LOGLEVEL_* definitions.
    useHeatexchange [BOOLEAN] [TRUE]


physics/sourceTerms/Heatexchange/HeatexchangeMain/ConstCoulomb
    hx_coulombLog [REAL] [1.0]
        Valid Values: 0.0 to INFTY

    hx_couplingConst13 [REAL] [0.0]
        Valid Values: 0.0 to INFTY

    hx_couplingConst23 [REAL] [1.0]
        Valid Values: 0.0 to INFTY

    hx_dtFactor [REAL] [0.5]
        Valid Values: 0.0+ to INFTY

    hx_relTol [REAL] [-1.0]
        Valid Values: Unconstrained
        relative tolerance for temperature errors introduced by HeatExchange.
        This runtime parameter affects the time step computed by
        Heatexchange_computeDt. Basically, if the max (abs) temperature
        adjustment that would be introduced in any nonzero component in any cell
        is less than hx_relTol, then the time step limit is relaxed. Set to a
        negative value to inherite the value of runtime parameter eos_tolerance.

physics/sourceTerms/Heatexchange/HeatexchangeMain/Constant
    hx_couplingConst12 [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        ion-electron heat exchange coupling constant
    hx_couplingConst13 [REAL] [0.0]
        Valid Values: -1.0, 0.0 to INFTY
        ion-radiation heat exchange coupling constant (usually ignored)
    hx_couplingConst23 [REAL] [1.0]
        Valid Values: -1.0, 0.0 to INFTY
        electron-radiation heat exchange coupling constant, representing
        emission and absorption effects
    hx_dtFactor [REAL] [0.5]
        Valid Values: 0.0+ to INFTY

    hx_relTol [REAL] [-1.0]
        Valid Values: Unconstrained
        relative tolerance for temperature errors introduced by HeatExchange.
        This runtime parameter affects the time step computed by
        Heatexchange_computeDt. Basically, if the max (abs) temperature
        adjustment that would be introduced in any nonzero component in any cell
        is less than hx_relTol, then the time step limit is relaxed. Set to a
        negative value to inherite the value of runtime parameter eos_tolerance.

physics/sourceTerms/Heatexchange/HeatexchangeMain/Immediate
    hx_applyToRadiation [BOOLEAN] [FALSE]
        Does the Immediate Heatexchange implementation apply to radiation?

physics/sourceTerms/Heatexchange/HeatexchangeMain/LeeMore
    hx_dtFactor [REAL] [0.5]
        Valid Values: 0.0+ to INFTY

    hx_ieTimeCoef [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        Constant coefficient for scaling ion/ele coupling time
    hx_relTol [REAL] [-1.0]
        Valid Values: Unconstrained
        relative tolerance for temperature errors introduced by HeatExchange.
        This runtime parameter affects the time step computed by
        Heatexchange_computeDt. Basically, if the max (abs) temperature
        adjustment that would be introduced in any nonzero component in any cell
        is less than hx_relTol, then the time step limit is relaxed. Set to a
        negative value to inherite the value of runtime parameter eos_tolerance.

physics/sourceTerms/Heatexchange/HeatexchangeMain/Spitzer
    hx_dtFactor [REAL] [0.5]
        Valid Values: 0.0+ to INFTY

    hx_ieTimeCoef [REAL] [1.0]
        Valid Values: 0.0 to INFTY
        Constant coefficient for scaling ion/ele coupling time
    hx_relTol [REAL] [-1.0]
        Valid Values: Unconstrained
        relative tolerance for temperature errors introduced by HeatExchange.
        This runtime parameter affects the time step computed by
        Heatexchange_computeDt. Basically, if the max (abs) temperature
        adjustment that would be introduced in any nonzero component in any cell
        is less than hx_relTol, then the time step limit is relaxed. Set to a
        negative value to inherite the value of runtime parameter eos_tolerance.

physics/sourceTerms/Ionize
    useIonize [BOOLEAN] [FALSE]
        Whether Ionize calculations should be performed.

physics/sourceTerms/Ionize/IonizeMain
    dneimax [REAL] [1.0E12]
        Valid Values: Unconstrained
        Max NEI density
    dneimin [REAL] [1.0E0]
        Valid Values: Unconstrained
        Min NEI density
    tneimax [REAL] [1.0E7]
        Valid Values: Unconstrained
        Max NEI temperature
    tneimin [REAL] [1.0E4]
        Valid Values: Unconstrained
        Min NEI temperature
    useIonize [BOOLEAN] [TRUE]
        Whether Ionize calculations should be performed.

physics/sourceTerms/Polytrope
    usePolytrope [BOOLEAN] [FALSE]
        Runtime switch for turning the polytropic eos on/off

physics/sourceTerms/Polytrope/PolytropeMain
    polytropeDens1 [REAL] [1e99]
        Valid Values: Unconstrained

    polytropeDens2 [REAL] [1e99]
        Valid Values: Unconstrained

    polytropeDens3 [REAL] [1e99]
        Valid Values: Unconstrained

    polytropeDens4 [REAL] [1e99]
        Valid Values: Unconstrained

    polytropeDens5 [REAL] [1e99]
        Valid Values: Unconstrained

    polytropeGamma1 [REAL] [1.0]
        Valid Values: Unconstrained

    polytropeGamma2 [REAL] [1.0]
        Valid Values: Unconstrained

    polytropeGamma3 [REAL] [1.0]
        Valid Values: Unconstrained

    polytropeGamma4 [REAL] [1.0]
        Valid Values: Unconstrained

    polytropeGamma5 [REAL] [1.0]
        Valid Values: Unconstrained

    polytropeKonst [REAL] [1.0]
        Valid Values: Unconstrained
        press = polytropeKonst*dens^polytropeGamma1 for dens1 <= dens <= dens2
    usePolytrope [BOOLEAN] [FALSE]
        Runtime switch for turning the polytropic eos on/off

physics/sourceTerms/PrimordialChemistry
    usePrimordialChemistry [BOOLEAN] [FALSE]


physics/sourceTerms/PrimordialChemistry/PrimordialChemistryMain
    pchem_algebra [INTEGER] [2]
        Valid Values: Unconstrained

    pchem_ccCase [INTEGER] [1]
        Valid Values: Unconstrained

    pchem_doCool [INTEGER] [1]
        Valid Values: Unconstrained

    pchem_fracDeuterium [REAL] [0.0]
        Valid Values: Unconstrained

    pchem_fracHelium [REAL] [0.240]
        Valid Values: Unconstrained

    pchem_fracHydrogen [REAL] [0.760]
        Valid Values: Unconstrained

    pchem_fshh2 [REAL] [1.0]
        Valid Values: Unconstrained

    pchem_fshhd [REAL] [1.0]
        Valid Values: Unconstrained

    pchem_j21 [REAL] [0.0]
        Valid Values: Unconstrained

    pchem_mCool [INTEGER] [1]
        Valid Values: Unconstrained

    pchem_odeStepper [INTEGER] [1]
        Valid Values: Unconstrained


physics/sourceTerms/PrimordialChemistry/PrimordialChemistryMain/GA08
    pchem_algebra [INTEGER] [2]
        Valid Values: Unconstrained

    pchem_ccCase [INTEGER] [1]
        Valid Values: Unconstrained

    pchem_doCool [INTEGER] [1]
        Valid Values: Unconstrained

    pchem_dradmax [REAL] [1.0e-10]
        Valid Values: Unconstrained

    pchem_dradmin [REAL] [1.0e-30]
        Valid Values: Unconstrained

    pchem_fracDeuterium [REAL] [0.0]
        Valid Values: Unconstrained

    pchem_fracHelium [REAL] [0.240]
        Valid Values: Unconstrained

    pchem_fracHydrogen [REAL] [0.760]
        Valid Values: Unconstrained

    pchem_fshh2 [REAL] [1.0]
        Valid Values: Unconstrained

    pchem_fshhd [REAL] [1.0]
        Valid Values: Unconstrained

    pchem_j21 [REAL] [0.0]
        Valid Values: Unconstrained

    pchem_mCool [INTEGER] [1]
        Valid Values: Unconstrained

    pchem_massFracH [REAL] [0.76]
        Valid Values: Unconstrained

    pchem_noCool [REAL] [1.0]
        Valid Values: Unconstrained

    pchem_odeStepper [INTEGER] [1]
        Valid Values: Unconstrained

    pchem_rcCase [INTEGER] [1]
        Valid Values: Unconstrained

    pchem_tradmax [REAL] [1.0e9]
        Valid Values: Unconstrained

    pchem_tradmin [REAL] [50.0]
        Valid Values: Unconstrained

    usePrimordialChemistry [BOOLEAN] [TRUE]


physics/sourceTerms/Stir
    useStir [BOOLEAN] CONSTANT [FALSE]
        Runtime switch for turning stirring on/off

physics/sourceTerms/Stir/StirMain
    st_computeDt [BOOLEAN] [FALSE]
        whether to restrict time step based on stirring
    useStir [BOOLEAN] [TRUE]
        Runtime switch for turning stirring on/off

physics/sourceTerms/Stir/StirMain/FromFile
    st_computeDt [BOOLEAN] [FALSE]
        whether to restrict time step based on stirring
    st_infilename [STRING] ["forcingfile.dat"]
        Valid Values: Unconstrained
        file containing the stirring time sequence

physics/sourceTerms/Stir/StirMain/Generate
    st_decay [REAL] [.1]
        Valid Values: Unconstrained
        correlation time for driving
    st_energy [REAL] [.01]
        Valid Values: Unconstrained
        energy input/mode
    st_freq [INTEGER] [1]
        Valid Values: Unconstrained
        the frequency of stirring
    st_reproducible [BOOLEAN] [FALSE]

    st_saveReproducible [BOOLEAN] [FALSE]

    st_seed [INTEGER] [2]
        Valid Values: Unconstrained
        random number generator seed
    st_stirmax [REAL] [62.8]
        Valid Values: Unconstrained
        maximum stirring *wavenumber*
    st_stirmin [REAL] [31.4]
        Valid Values: Unconstrained
        minimum stirring *wavenumber*

physics/sourceTerms/Turb
    useTurb [BOOLEAN] [TRUE]
        flags whether the Turbulence unit is being used

physics/sourceTerms/Turb/TurbMain
    turb_c2 [REAL] [0.9]
        Valid Values: Unconstrained
        is the calibrated constant for determining the turbulent velocity
    turb_stepSize [INTEGER] [1]
        Valid Values: Unconstrained
        size of stencil in computing the laplacian and curl

physics/utilities/PlasmaState
    usePlasmaState [BOOLEAN] CONSTANT [FALSE]
        flags whether the PlasmaState unit is being used at all

physics/utilities/PlasmaState/PlasmaStateMain
    usePlasmaState [BOOLEAN] [TRUE]
        flags whether the PlasmaState unit is being used at all
