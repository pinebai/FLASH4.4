# Config file for physics/Hydro/HydroMain/split/PPM
#

#       Config file for explicit split PPM hydrodynamics.
#       This implementation is based on the PROMETHEUS code by B. A. Fryxell and
#       E. Mueller.

REQUESTS Driver/DriverMain/Split
REQUIRES physics/Eos

DEFAULT PPMKernel

USESETUPVARS chomboCompatibleHydro, threadBlockList, threadWithinBlock
IF chomboCompatibleHydro
   REQUIRES physics/Hydro/HydroMain/split/PPM/chomboCompatible
ENDIF

IF threadBlockList or threadWithinBlock
   CONFLICTS physics/Hydro/HydroMain/split/PPM/chomboCompatible
   CONFLICTS physics/Hydro/HydroMain/split/PPM/multiTemp
ENDIF

# We must use a special customized version of hy_ppm_sweep.
IF threadBlockList
   CONFLICTS physics/Hydro/HydroMain/split/PPM/threadWithinBlock
   REQUIRES physics/Hydro/HydroMain/split/PPM/threadBlockList
ENDIF


# We must use a special customized version of hy_ppm_block.
IF threadWithinBlock
   CONFLICTS physics/Hydro/HydroMain/split/PPM/threadBlockList
   REQUIRES physics/Hydro/HydroMain/split/PPM/threadWithinBlock
ENDIF



VARIABLE dens TYPE: PER_VOLUME  EOSMAP:  DENS  # density
VARIABLE velx TYPE: PER_MASS    EOSMAPIN:VELX  # x-velocity
VARIABLE vely TYPE: PER_MASS    EOSMAPIN:VELY  # y-velocity
VARIABLE velz TYPE: PER_MASS    EOSMAPIN:VELZ  # z-velocity
VARIABLE pres                   EOSMAP:  PRES  # pressure
VARIABLE ener TYPE: PER_MASS    EOSMAP:  ENER  # specific total energy (T+U)
VARIABLE temp                   EOSMAP:  TEMP  # temperature

USESETUPVARS SuppressEintVariable
IF not SuppressEintVariable
	VARIABLE eint TYPE: PER_MASS  EOSMAP: EINT  # specific internal energy
ENDIF

FLUX rho
FLUX u
FLUX p
FLUX ut
FLUX utt
FLUX e
FLUX eint

# This is currently not used, but should be enabled if the call 
# in Driver_computeDt to Driver_computeDtTemp gets enabled.
#SCRATCHVAR otmp                   # old temperature 


USESETUPVARS SupportWeno, SupportPpmUpwind
IF SupportWeno
  SETUPERROR The PPM split Hydro implementation does not support WENO, try +unsplitHydro
ELSEIF SupportPpmUpwind
  SETUPERROR The PPM split Hydro implementation does not support PPM Upwind, try +unsplitHydro
ENDIF


# Lines that begin with 'D' as in 'Description' will end up as
# comment lines in the setup_params file.  setup_params is
# written by the setup script and holds all the default 
# values of parameters.  

# !!! If you add a parameter, please add a description line
# Format is D <parameter name> <description>

D hy_eosModeAfter Eos mode to apply at the end of a hydro sweep, after
D & hy_ppm_updateSoln is done.
D & Some meaningful choices are (1): == eosMode (traditional),
D & (2): "dens_ie" for MODE_DENS_EI (which are normally the same!).
PARAMETER hy_eosModeAfter STRING "dens_ie"["dens_ie","dens_pres","dens_temp","dens_ie_all","dens_ie_scatter","dens_ie_gather","dens_ie_sele_gather","dens_ie_shocksele_gather","dens_temp_equi","dens_temp_all","dens_temp_gather","dens_ie_recal_gather"]

D dp_sh_md       pressure jump for multi-dimensional shock detection
PARAMETER dp_sh_md      REAL    0.33 

D epsiln             PPM shock detection parameter
D omg1               PPM dissipation parameter omega1
D omg2               PPM dissipation parameter omega2
D igodu              Use Godunov method
D iplm               Use linear profiles
D vgrid              Scale factor for grid velocity
D nriem              No. of iterations in Riemann solver
D rieman_tol         Converge factor for Riemann solver
D cvisc              Artificial viscosity constant
D ppm_modifystates   modify states due to gravity -- our way.
D leveque            modify states due to gravity -- leveque's way.
D hybrid_riemann     use HLLE in shocks to remove odd-even decoupling
D charLimiting       use characteristic variables for slope limiting

PARAMETER epsiln              REAL    0.33    # PPM shock detection parameter
PARAMETER omg1                REAL    0.75    # PPM dissipation parameter omega1
PARAMETER omg2                REAL    10.     # PPM dissipation parameter omega2
PARAMETER igodu               INTEGER 0       # Use Godunov method
PARAMETER iplm                INTEGER 0       # Use linear profiles 
PARAMETER vgrid               REAL    0.      # Scale factor for grid velocity
PARAMETER nriem               INTEGER 10      # No. of iterations in Riemann solver
PARAMETER rieman_tol          REAL    1.0e-5  # Converge factor for Riemann solver
PARAMETER cvisc               REAL    0.1     # Artificial viscosity constant
PARAMETER dp_sh               REAL    0.33    # pressure jump for 1-D shock detection
PARAMETER ppm_modifystates    BOOLEAN FALSE   # modify states due to gravity?
PARAMETER leveque             BOOLEAN FALSE   # do LeVeque's method?
PARAMETER hybrid_riemann      BOOLEAN FALSE   # use HLLE in shocks to remove odd-even decoupling
PARAMETER charLimiting        BOOLEAN TRUE    # use characteristic variables for slope limiting

D ppmEnerFluxConstructionMeth selects a method for constructing energy
D & fluxes, for total (internal+kinetic) energy,
D & from the results of calling the Riemann solver.
PARAMETER ppmEnerFluxConstructionMeth INTEGER 0 [ 0 to 2, 4 to 6, 11 to 12, 14 to 16, 20 to 27 ]

D ppmEintFluxConstructionMeth selects a method for constructing energy
D & fluxes, for internal energy,
D & from the results of calling the Riemann solver.
D & Note that the eintSwitch runtime parameter controls whether internal energy fluxes,
D & rather than total energy fluxes, are sometimes used for updating the energy variables
D & (both internal and total) in a given cell (depending on the ratio of kinetic to internal
D & energy in that cell).
PARAMETER ppmEintFluxConstructionMeth INTEGER 0 [ -1 , 0 to 2, 4 to 6 ]


PARAMETER ppmEnerCompFluxConstructionMeth INTEGER 0 [ 0 to 7, 11 to 17, 20 to 27 ]
PARAMETER ppmEintCompFluxConstructionMeth INTEGER 0 [ -1, 0 to 7 ]


D hy_fluxRepresentation determines the nature of the data stored in flux arrays.
D & With this parameter set to "fluxes", the fluxes and cell volumes used in the Hydro method are
D & calculated correctly using geometry measures (in units matching those in which coordinates
D & are represented). If hy_fluxRepresentation is "hybrid", fluxes are calculated in a simpler
D & way; for example, the fluxes in Cartesian coordinates use the convention Face Area == 1
D & (and thus Cell Volume == dx during the X sweep, etc.). Both settings lead to a correct
D & algorithm, because what is ultimately applied in the Hydro update is of the form
D & fluxes times dt/CellVolume, so cell areas (thus fluxes) and volumes can be multiplied
D & by an arbitrary constant (as long as it is done consistently) without changing results
D & (except for rounding effects).
D & The setting here must match Paramesh's understanding of what the "fluxes" are
D & that it is being passed if Grid_conserveFluxes is called:
D & If hy_fluxRepresentation is "fluxes", then 
D &    Paramesh4 should have set consv_fluxes==.true.,  consv_flux_densities==.false.
D & If hy_fluxRepresentation is "hybrid", then
D &    Paramesh4 should have set consv_fluxes==.false., consv_flux_densities==.true.
D & Hydro_init will try to set Paramesh to the right mode if possible, this requires
D & Paramesh to be compiled in LIBRARY mode. If this fails, the flux representation
D & will be modified to correspond to what the Grid unit supports.
D & A third possible value for hy_fluxRepresentation is "auto", in which case the Hydro
D & code unit will pick either "fluxes" or "hybrid" based on geometry and support in Grid.

PARAMETER hy_fluxRepresentation	STRING "fluxes"	["hybrid","fluxes","auto"]

D small             Cutoff value ... DEV: for what?
PARAMETER small		REAL	1.E-10

D smlrho            Cutoff value for density	
PARAMETER smlrho	REAL	1.E-10	

D smallp            Cutoff value for pressure
PARAMETER smallp	REAL	1.E-10	

D smalle            Cutoff value for energy
PARAMETER smalle	REAL	1.E-10	

D smallt            Cutoff value for temperature
PARAMETER smallt	REAL	1.E-10	

D smallu            Cutoff value for velocity
PARAMETER smallu	REAL	1.E-10	

D smallx            Cutoff value for abundances
PARAMETER smallx	REAL	1.E-10	
 
PPDEFINE FLASH_HYDRO_PPM
