# @ job_type = bluegene
# @ class = normal
#
# The executable  that will run your parallel application should always be specified as per the next line.
# @ executable = /usr/bin/mpirun
#
# @ bg_size = 32 
#
# initialdir (see the next active line) will be used as the working directory for this batch job. 
# @ initialdir = /gpfs/scratch2/ajackson/2d-ddt/rel00/dfp
#
# If for example your jobid is 82, your output and error will be written in
# directory /home/johndoe/app1/runs, to files 82.out and 82.err respectively.
# @ input = /dev/null
# @ output = flash3.out
# @ error = flash3.err
# 
# Maximum wall clock time for job will be 48 hours.
# @ wall_clock_limit = 48:00:00
#
# Send email to johndoe@bnl.gov when job has completed.
# @ notification = complete
# @ notify_user = Aaron.Jackson@stonybrook.edu
#
# Specify executable for your parallel application, and arguments to that executable.
# Note that the arguments to specify for the executable will vary depending upon the executable.
# @ arguments = -mode VN \
-exe /gpfs/scratch2/ajackson/2d-ddt/rel00/dfp/flash3 \
-cwd /gpfs/scratch2/ajackson/2d-ddt/rel00/dfp
#
# The next statement marks the end of the job step. This example is a one-job-step batch job,
# so this is equivalent to saying that the next statement marks the end of the batch job.
# @ queue
